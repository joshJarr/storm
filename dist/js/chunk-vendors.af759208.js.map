{"version":3,"sources":["webpack:///./node_modules/core-js/modules/_iter-define.js","webpack:///./node_modules/core-js/modules/es7.promise.finally.js","webpack:///./node_modules/core-js/modules/_object-keys.js","webpack:///./node_modules/core-js/modules/_object-dps.js","webpack:///./node_modules/core-js/modules/_task.js","webpack:///./node_modules/core-js/modules/_iter-call.js","webpack:///./node_modules/core-js/modules/_dom-create.js","webpack:///./node_modules/core-js/modules/_classof.js","webpack:///./node_modules/core-js/modules/core.get-iterator-method.js","webpack:///./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack:///./node_modules/core-js/modules/_redefine.js","webpack:///./node_modules/core-js/modules/_object-create.js","webpack:///./node_modules/vue/dist/vue.runtime.esm.js","webpack:///./node_modules/core-js/modules/_wks.js","webpack:///./node_modules/core-js/modules/_library.js","webpack:///./node_modules/core-js/modules/_cof.js","webpack:///./node_modules/core-js/modules/_invoke.js","webpack:///./node_modules/core-js/modules/_hide.js","webpack:///./node_modules/core-js/modules/_is-array-iter.js","webpack:///./node_modules/@firebase/database/dist/index.cjs.js","webpack:///./node_modules/core-js/modules/_object-gpo.js","webpack:///./node_modules/core-js/modules/_iter-create.js","webpack:///./node_modules/node-libs-browser/mock/process.js","webpack:///./node_modules/core-js/modules/_to-integer.js","webpack:///./node_modules/core-js/modules/_property-desc.js","webpack:///./node_modules/core-js/modules/_for-of.js","webpack:///./node_modules/core-js/modules/_to-object.js","webpack:///./node_modules/@firebase/polyfill/node_modules/whatwg-fetch/fetch.js","webpack:///./node_modules/core-js/modules/es6.promise.js","webpack:///./node_modules/core-js/modules/_shared.js","webpack:///./node_modules/firebase/app/dist/index.cjs.js","webpack:///./node_modules/core-js/modules/_export.js","webpack:///./node_modules/core-js/modules/_iter-detect.js","webpack:///./node_modules/core-js/modules/_shared-key.js","webpack:///./node_modules/core-js/modules/_iobject.js","webpack:///./node_modules/firebase/database/dist/index.esm.js","webpack:///./node_modules/core-js/modules/_to-iobject.js","webpack:///./node_modules/core-js/modules/_has.js","webpack:///./node_modules/core-js/modules/_to-primitive.js","webpack:///./node_modules/core-js/modules/_global.js","webpack:///./node_modules/core-js/modules/_to-absolute-index.js","webpack:///./node_modules/core-js/modules/_fails.js","webpack:///./node_modules/core-js/modules/_set-species.js","webpack:///./node_modules/core-js/modules/_set-to-string-tag.js","webpack:///./node_modules/core-js/modules/_microtask.js","webpack:///./node_modules/core-js/modules/_core.js","webpack:///./node_modules/core-js/modules/_iterators.js","webpack:///./node_modules/core-js/modules/_object-dp.js","webpack:///./node_modules/@firebase/polyfill/dist/index.esm.js","webpack:///./node_modules/@firebase/database/node_modules/tslib/tslib.es6.js","webpack:///./node_modules/core-js/modules/_ctx.js","webpack:///./node_modules/core-js/modules/_add-to-unscopables.js","webpack:///./node_modules/core-js/modules/_perform.js","webpack:///./node_modules/core-js/modules/_to-length.js","webpack:///./node_modules/core-js/modules/_descriptors.js","webpack:///./node_modules/core-js/modules/_user-agent.js","webpack:///./node_modules/core-js/modules/_new-promise-capability.js","webpack:///./node_modules/@firebase/logger/dist/index.esm.js","webpack:///./node_modules/core-js/modules/_promise-resolve.js","webpack:///./node_modules/core-js/modules/_defined.js","webpack:///./node_modules/@firebase/app/dist/index.cjs.js","webpack:///./node_modules/core-js/modules/_array-includes.js","webpack:///./node_modules/core-js/modules/_ie8-dom-define.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/core-js/modules/_uid.js","webpack:///./node_modules/core-js/modules/es6.array.iterator.js","webpack:///./node_modules/core-js/modules/_an-object.js","webpack:///./node_modules/@firebase/util/dist/index.cjs.js","webpack:///./node_modules/core-js/modules/_object-keys-internal.js","webpack:///./node_modules/core-js/modules/_is-object.js","webpack:///./node_modules/core-js/modules/_iter-step.js","webpack:///./node_modules/core-js/modules/_a-function.js","webpack:///./node_modules/core-js/modules/_redefine-all.js","webpack:///./node_modules/path-browserify/index.js","webpack:///./node_modules/core-js/modules/_enum-bug-keys.js","webpack:///./node_modules/core-js/modules/_species-constructor.js","webpack:///./node_modules/core-js/modules/_an-instance.js","webpack:///./node_modules/core-js/modules/_html.js","webpack:///./node_modules/@firebase/util/node_modules/tslib/tslib.es6.js"],"names":["LIBRARY","__webpack_require__","$export","redefine","hide","Iterators","$iterCreate","setToStringTag","getPrototypeOf","ITERATOR","BUGGY","keys","FF_ITERATOR","KEYS","VALUES","returnThis","this","module","exports","Base","NAME","Constructor","next","DEFAULT","IS_SET","FORCED","methods","key","IteratorPrototype","getMethod","kind","proto","TAG","DEF_VALUES","VALUES_BUG","prototype","$native","$default","$entries","undefined","$anyNative","entries","call","Object","name","values","P","F","core","global","speciesConstructor","promiseResolve","R","finally","onFinally","C","Promise","isFunction","then","x","e","$keys","enumBugKeys","O","dP","anObject","getKeys","defineProperties","Properties","length","i","f","defer","channel","port","ctx","invoke","html","cel","process","setTask","setImmediate","clearTask","clearImmediate","MessageChannel","Dispatch","counter","queue","ONREADYSTATECHANGE","run","id","hasOwnProperty","fn","listener","event","data","args","arguments","push","Function","nextTick","now","port2","port1","onmessage","postMessage","addEventListener","importScripts","appendChild","removeChild","setTimeout","set","clear","iterator","value","ret","isObject","document","is","createElement","it","cof","ARG","tryGet","T","B","callee","classof","getIteratorMethod","normalizeComponent","scriptExports","render","staticRenderFns","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","options","_compiled","functional","_scopeId","context","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","h","existing","beforeCreate","concat","d","__webpack_exports__","has","SRC","TO_STRING","$toString","TPL","split","inspectSource","val","safe","join","String","dPs","IE_PROTO","Empty","PROTOTYPE","createDict","iframeDocument","iframe","lt","gt","style","display","src","contentWindow","open","write","close","create","result","emptyObject","freeze","isUndef","v","isDef","isTrue","isFalse","isPrimitive","obj","_toString","toString","isPlainObject","isRegExp","isValidArrayIndex","n","parseFloat","Math","floor","isFinite","JSON","stringify","toNumber","isNaN","makeMap","str","expectsLowerCase","map","list","toLowerCase","isReservedAttribute","remove","arr","item","index","indexOf","splice","hasOwn","cached","cache","hit","camelizeRE","camelize","replace","_","c","toUpperCase","capitalize","charAt","slice","hyphenateRE","hyphenate","polyfillBind","boundFn","a","l","apply","_length","nativeBind","bind","toArray","start","Array","extend","to","_from","toObject","res","noop","b","no","identity","looseEqual","isObjectA","isObjectB","isArrayA","isArray","isArrayB","every","keysA","keysB","looseIndexOf","once","called","SSR_ATTR","ASSET_TYPES","LIFECYCLE_HOOKS","config","optionMergeStrategies","silent","productionTip","devtools","performance","errorHandler","warnHandler","ignoredElements","keyCodes","isReservedTag","isReservedAttr","isUnknownElement","getTagNamespace","parsePlatformTagName","mustUseProp","_lifecycleHooks","isReserved","charCodeAt","def","enumerable","defineProperty","writable","configurable","bailRE","parsePath","path","test","segments","_isServer","hasProto","inBrowser","window","inWeex","WXEnvironment","platform","weexPlatform","UA","navigator","userAgent","isIE","isIE9","isEdge","isIOS","nativeWatch","watch","supportsPassive","opts","get","isServerRendering","env","VUE_ENV","__VUE_DEVTOOLS_GLOBAL_HOOK__","isNative","Ctor","_Set","hasSymbol","Symbol","Reflect","ownKeys","Set","warn","uid","Dep","subs","addSub","sub","removeSub","depend","target","addDep","notify","update","targetStack","pushTarget","_target","popTarget","pop","VNode","tag","children","text","elm","componentOptions","asyncFactory","ns","fnContext","fnOptions","fnScopeId","componentInstance","raw","isStatic","isRootInsert","isComment","isCloned","isOnce","asyncMeta","isAsyncPlaceholder","prototypeAccessors","child","createEmptyVNode","node","createTextVNode","cloneVNode","vnode","cloned","arrayProto","arrayMethods","methodsToPatch","forEach","method","original","len","inserted","ob","__ob__","observeArray","dep","arrayKeys","getOwnPropertyNames","shouldObserve","toggleObserving","Observer","vmCount","augment","protoAugment","copyAugment","walk","__proto__","observe","asRootData","isExtensible","_isVue","defineReactive","customSetter","shallow","property","getOwnPropertyDescriptor","getter","setter","childOb","dependArray","newVal","max","del","items","strats","mergeData","from","toVal","fromVal","mergeDataOrFn","parentVal","childVal","vm","instanceData","defaultData","mergeHook","mergeAssets","type","key$1","props","inject","computed","provide","defaultStrat","normalizeProps","normalizeInject","normalized","normalizeDirectives","dirs","directives","mergeOptions","extendsFrom","extends","mixins","mergeField","strat","resolveAsset","warnMissing","assets","camelizedId","PascalCaseId","validateProp","propOptions","propsData","prop","absent","booleanIndex","getTypeIndex","Boolean","stringIndex","getPropDefaultValue","prevShouldObserve","default","_props","getType","match","isSameType","expectedTypes","handleError","err","info","cur","$parent","hooks","errorCaptured","capture","globalHandleError","logError","console","error","microTimerFunc","macroTimerFunc","callbacks","pending","flushCallbacks","copies","useMacroTask","p","resolve","withMacroTask","_withTask","cb","_resolve","seenObjects","traverse","_traverse","seen","isA","isFrozen","depId","normalizeEvent","passive","once$$1","createFnInvoker","fns","invoker","arguments$1","updateListeners","on","oldOn","remove$$1","old","params","mergeVNodeHook","hookKey","oldHook","wrappedHook","merged","extractPropsFromVNodeData","attrs","altKey","checkProp","hash","preserve","simpleNormalizeChildren","normalizeChildren","normalizeArrayChildren","isTextNode","nestedIndex","lastIndex","last","shift","_isVList","ensureCtor","comp","base","__esModule","toStringTag","createAsyncPlaceholder","factory","resolveAsyncComponent","baseCtor","errorComp","resolved","loading","loadingComp","contexts","sync","forceRender","$forceUpdate","reject","reason","component","delay","timeout","getFirstComponentChild","initEvents","_events","_hasHookEvent","listeners","_parentListeners","updateComponentListeners","$once","$on","remove$1","$off","oldListeners","eventsMixin","Vue","hookRE","this$1","cbs","i$1","$emit","resolveSlots","slots","slot","name$1","isWhitespace","resolveScopedSlots","activeInstance","initLifecycle","abstract","$children","$refs","_watcher","_inactive","_directInactive","_isMounted","_isDestroyed","_isBeingDestroyed","lifecycleMixin","_update","hydrating","callHook","prevEl","$el","prevVnode","_vnode","prevActiveInstance","__patch__","_parentElm","_refElm","__vue__","$destroy","teardown","_watchers","_data","mountComponent","el","updateComponent","_render","Watcher","updateChildComponent","parentVnode","renderChildren","hasChildren","_renderChildren","scopedSlots","$scopedSlots","_parentVnode","$attrs","$listeners","propKeys","_propKeys","$slots","isInInactiveTree","activateChildComponent","direct","deactivateChildComponent","handlers","j","activatedChildren","waiting","flushing","resetSchedulerState","flushSchedulerQueue","watcher","sort","activatedQueue","updatedQueue","callActivatedHooks","callUpdatedHooks","emit","queueActivatedComponent","queueWatcher","uid$1","expOrFn","isRenderWatcher","deep","user","lazy","active","dirty","deps","newDeps","depIds","newDepIds","expression","cleanupDeps","tmp","oldValue","evaluate","sharedPropertyDefinition","proxy","sourceKey","initState","initProps","initMethods","initData","initComputed","initWatch","propsOptions","isRoot","loop","getData","computedWatcherOptions","watchers","_computedWatchers","isSSR","userDef","defineComputed","shouldCache","createComputedGetter","handler","createWatcher","$watch","stateMixin","dataDef","propsDef","$set","$delete","immediate","initProvide","_provided","initInjections","resolveInject","filter","provideKey","source","provideDefault","renderList","renderSlot","fallback","bindObject","nodes","scopedSlotFn","slotNodes","_rendered","$createElement","resolveFilter","isKeyNotMatch","expect","actual","checkKeyCodes","eventKeyCode","builtInKeyCode","eventKeyName","builtInKeyName","mappedKeyCode","bindObjectProps","asProp","isSync","domProps","$event","renderStatic","isInFor","_staticTrees","tree","_renderProxy","markStatic","markOnce","markStaticNode","bindObjectListeners","ours","installRenderHelpers","_o","_n","_s","_l","_t","_q","_i","_m","_f","_k","_b","_v","_e","_u","_g","FunctionalRenderContext","contextVm","_original","isCompiled","needNormalization","injections","_c","createFunctionalComponent","mergeProps","renderContext","cloneAndMarkFunctionalResult","vnodes","clone","componentVNodeHooks","init","parentElm","refElm","keepAlive","mountedNode","prepatch","createComponentInstanceForVnode","$mount","oldVnode","insert","destroy","hooksToMerge","createComponent","_base","cid","resolveConstructorOptions","model","transformModel","nativeOn","installComponentHooks","_isComponent","inlineTemplate","callback","SIMPLE_NORMALIZE","ALWAYS_NORMALIZE","normalizationType","alwaysNormalize","_createElement","applyNS","registerDeepBindings","force","class","initRender","parentData","renderMixin","$nextTick","ref","uid$3","initMixin","_init","_uid","initInternalComponent","constructor","_self","vnodeComponentOptions","_componentTag","super","superOptions","cachedSuperOptions","modifiedOptions","resolveModifiedOptions","extendOptions","components","modified","latest","extended","sealed","sealedOptions","dedupe","initUse","use","plugin","installedPlugins","_installedPlugins","unshift","install","initMixin$1","mixin","initExtend","Super","SuperId","cachedCtors","_Ctor","Sub","initProps$1","initComputed$1","Comp","initAssetRegisters","definition","getComponentName","matches","pattern","pruneCache","keepAliveInstance","cachedNode","pruneCacheEntry","current","cached$$1","patternTypes","RegExp","KeepAlive","include","exclude","Number","created","destroyed","mounted","ref$1","parseInt","builtInComponents","initGlobalAPI","configDef","util","delete","version","acceptValue","attr","isEnumeratedAttr","isBooleanAttr","xlinkNS","isXlink","getXlinkProp","isFalsyAttrValue","genClassForVnode","parentNode","childNode","mergeClassData","renderClass","staticClass","dynamicClass","stringifyClass","stringifyArray","stringifyObject","stringified","namespaceMap","svg","math","isHTMLTag","isSVG","unknownElementCache","HTMLUnknownElement","HTMLElement","isTextInputType","query","selected","querySelector","createElement$1","tagName","multiple","setAttribute","createElementNS","namespace","createTextNode","createComment","insertBefore","newNode","referenceNode","nextSibling","setTextContent","textContent","setStyleScope","nodeOps","registerRef","isRemoval","refs","refInFor","emptyNode","sameVnode","sameInputType","typeA","typeB","createKeyToOldIdx","beginIdx","endIdx","createPatchFunction","backend","modules","emptyNodeAt","createRmCb","childElm","removeNode","createElm","insertedVnodeQueue","nested","ownerArray","setScope","createChildren","invokeCreateHooks","isReactivated","initComponent","reactivateComponent","pendingInsert","isPatchable","innerNode","transition","activate","ref$$1","ancestor","addVnodes","startIdx","invokeDestroyHook","removeVnodes","ch","removeAndInvokeRemoveHook","rm","updateChildren","oldCh","newCh","removeOnly","oldKeyToIdx","idxInOld","vnodeToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","canMove","patchVnode","findIdxInOld","end","hydrate","postpatch","invokeInsertHook","initial","isRenderedModule","inVPre","pre","hasChildNodes","innerHTML","childrenMatch","firstChild","fullInvoke","isInitialPatch","isRealElement","nodeType","hasAttribute","removeAttribute","oldElm","parentElm$1","_leaveCb","patchable","i$2","updateDirectives","oldDir","dir","isCreate","isDestroy","oldDirs","normalizeDirectives$1","newDirs","dirsWithInsert","dirsWithPostpatch","callHook$1","componentUpdated","callInsert","emptyModifiers","modifiers","getRawDirName","rawName","baseModules","updateAttrs","inheritAttrs","oldAttrs","setAttr","removeAttributeNS","baseSetAttr","setAttributeNS","__ieph","blocker","stopImmediatePropagation","removeEventListener","updateClass","oldData","cls","transitionClass","_transitionClasses","_prevClass","target$1","klass","RANGE_TOKEN","CHECKBOX_RADIO_TOKEN","normalizeEvents","change","createOnceHandler","onceHandler","remove$2","add$1","updateDOMListeners","events","updateDOMProps","oldProps","childNodes","_value","strCur","shouldUpdateValue","checkVal","composing","isNotInFocusAndDirty","isDirtyWithModifiers","notInFocus","activeElement","_vModifiers","number","trim","parseStyleText","cssText","listDelimiter","propertyDelimiter","normalizeStyleData","normalizeStyleBinding","staticStyle","bindingStyle","getStyle","checkChild","styleData","emptyStyle","cssVarRE","importantRE","setProp","setProperty","normalizedName","normalize","vendorNames","capName","updateStyle","oldStaticStyle","oldStyleBinding","normalizedStyle","oldStyle","newStyle","addClass","classList","getAttribute","removeClass","tar","resolveTransition","css","autoCssTransition","enterClass","enterToClass","enterActiveClass","leaveClass","leaveToClass","leaveActiveClass","hasTransition","TRANSITION","ANIMATION","transitionProp","transitionEndEvent","animationProp","animationEndEvent","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","raf","requestAnimationFrame","nextFrame","addTransitionClass","transitionClasses","removeTransitionClass","whenTransitionEnds","expectedType","getTransitionInfo","propCount","ended","onEnd","transformRE","styles","getComputedStyle","transitionDelays","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationDurations","animationTimeout","hasTransform","delays","durations","toMs","s","enter","toggleDisplay","cancelled","_enterCb","appearClass","appearToClass","appearActiveClass","beforeEnter","afterEnter","enterCancelled","beforeAppear","appear","afterAppear","appearCancelled","duration","transitionNode","isAppear","startClass","activeClass","toClass","beforeEnterHook","enterHook","afterEnterHook","enterCancelledHook","explicitEnterDuration","expectsCSS","userWantsControl","getHookArgumentsLength","show","pendingNode","_pending","isValidDuration","leave","beforeLeave","afterLeave","leaveCancelled","delayLeave","explicitLeaveDuration","performLeave","invokerFns","_enter","platformModules","patch","vmodel","trigger","directive","binding","_vOptions","setSelected","getValue","onCompositionStart","onCompositionEnd","prevOptions","curOptions","some","o","needReset","hasNoMatchingOption","actuallySetSelected","isMultiple","option","selectedIndex","createEvent","initEvent","dispatchEvent","locateNode","transition$$1","originalDisplay","__vOriginalDisplay","unbind","platformDirectives","transitionProps","mode","getRealChild","compOptions","extractTransitionData","placeholder","rawChild","hasParentTransition","isSameChild","oldChild","Transition","_leaving","oldRawChild","delayedLeave","moveClass","TransitionGroup","prevChildren","rawChildren","transitionData","kept","removed","c$1","pos","getBoundingClientRect","beforeUpdate","updated","hasMove","callPendingCbs","recordPosition","applyTranslation","_reflow","body","offsetHeight","moved","transform","WebkitTransform","transitionDuration","_moveCb","propertyName","_hasMove","cloneNode","newPos","oldPos","dx","left","dy","top","platformComponents","store","USE_SYMBOL","$exports","that","un","createDesc","object","ArrayProto","_interopDefault","ex","logger","tslib_1","firebase","DOMStorageWrapper","domStorage_","prefix_","removeItem","prefixedName_","setItem","storedVal","getItem","jsonEval","MemoryStorage","cache_","isInMemoryStorage","contains","createStoragefor","domStorageName","domStorage","PersistentStorage","SessionStorage","logClient","Logger","LUIDGenerator","sha1","utf8Bytes","stringToByteArray","Sha1","sha1Bytes","digest","base64","encodeByteArray","buildLogMessage_","var_args","message","logger$1","firstLog_","enableLogging","logger_","persistent","assert","logLevel","LogLevel","VERBOSE","log","logWrapper","prefix","fatal","Error","warnIfPageIsSecure","location","protocol","isInvalidJSONNumber","POSITIVE_INFINITY","NEGATIVE_INFINITY","executeWhenDOMReady","isNodeSdk","readyState","called_1","wrappedFn_1","attachEvent","MIN_NAME","MAX_NAME","nameCompare","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","ObjectToUniqueKey","k","splitStringBySize","segsize","dataSegs","substring","each","doubleToIEEE754String","ln","bits","ebits","fbits","bias","Infinity","abs","pow","min","LN2","round","reverse","hexByteString","hexByte","substr","isChromeExtensionContentScript","href","isWindowsStoreApp","Windows","UI","errorForServerCode","code","INTEGER_REGEXP_","intVal","exceptionGuard","stack","beingCrawled","search","setTimeoutNonBlocking","time","Path","pathOrString","pieceNum","pieces_","copyTo","pieceNum_","getFront","getLength","popFront","getBack","pathString","toUrlEncodedString","encodeURIComponent","begin","pieces","childPathObj","childPieces","isEmpty","relativePath","outerPath","innerPath","outer","inner","comparePaths","right","leftKeys","rightKeys","cmp","equals","other","ValidationPath","errorPrefix_","parts_","byteLength_","stringLength","checkValid_","MAX_PATH_LENGTH_BYTES","MAX_PATH_DEPTH","toErrorString","PROTOCOL_VERSION","VERSION_PARAM","TRANSPORT_SESSION_PARAM","REFERER_PARAM","FORGE_REF","FORGE_DOMAIN","LAST_SESSION_PARAM","WEBSOCKET","LONG_POLLING","RepoInfo","host","secure","webSocketOnly","persistenceKey","domain","internalHost","needsQueryParam","isCustomHost","isCacheableHost","isDemoHost","updateHost","newHost","connectionURL","connURL","pairs","toURLString","decodePath","pathStringDecoded","piece","decodeURIComponent","decodeQuery","queryString","results","_a","segment","kv","__EMPTY_NODE","MAX_NODE","parseRepoInfo","dataURL","parsedUrl","parseURL","subdomain","scheme","repoInfo","colonInd","slashInd","questionMarkInd","queryParams","parts","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","MAX_LEAF_SIZE_","isValidKey","isValidPathString","isValidRootPathString","isValidPriority","priority","validateFirebaseDataArg","fnName","argumentNumber","optional","validateFirebaseData","errorPrefix","path_","hasDotValue_1","hasActualChild_1","validateFirebaseMergePaths","mergePaths","curPath","prevPath","validateFirebaseMergeDataArg","validatePriority","validateEventType","eventType","validateKey","validatePathString","validateRootPathString","validateWritablePath","validateUrl","validateBoolean","bool","OnDisconnect","repo_","cancel","onComplete","validateArgCount","validateCallback","deferred","Deferred","onDisconnectCancel","wrapCallback","promise","onDisconnectSet","setWithPriority","onDisconnectSetWithPriority","objectToMerge","newObjectToMerge","onDisconnectUpdate","TransactionResult","committed","snapshot","toJSON","nextPushId","PUSH_CHARS","lastPushTime","lastRandChars","duplicateTime","timeStampChars","random","NamedNode","Wrap","Index","getCompare","compare","indexedValueChanged","oldNode","oldWrapped","newWrapped","minPost","MIN","KeyIndex","_super","__extends","isDefinedOn","assertionError","maxPost","makePost","indexValue","KEY_INDEX","setMaxNode","__childrenNodeConstructor","nodeFromJSON","MAX_NODE$1","priorityHashText","validatePriorityNode","priorityNode","isLeafNode","getPriority","LeafNode","value_","priorityNode_","EMPTY_NODE","lazyHash_","updatePriority","newPriorityNode","getImmediateChild","childName","getChild","hasChild","getPredecessorChildName","updateImmediateChild","newChildNode","updateChild","front","numChildren","forEachChild","action","exportFormat",".value",".priority","toHash","compareTo","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","withIndex","isIndexed","setNodeFromJSON","setMaxNode$1","_defaultIndexMap","PriorityIndex","aPriority","bPriority","indexCmp","PRIORITY_INDEX","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","getNext","hasNext","peek","LLRBNode","color","RED","SortedMap","copy","count","inorderTraversal","reverseTraversal","min_","minKey","maxKey","fixUp_","removeMin_","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","checkMaxDepth_","blackDepth","check_","BLACK","LLRBEmptyNode","comparator_","root_","getPredecessorKey","rightParent","getIterator","resultGenerator","getIteratorFrom","getReverseIteratorFrom","getReverseIterator","LOG_2","Base12Num","logBase2","num","bitMask","current_","mask","bits_","nextBitIsOne","buildChildSet","childList","keyFn","mapSortFn","buildBalancedTree","low","high","namedNode","middle","buildFrom12Array","base12","root","buildPennant","chunkSize","childTree","attachPennant","pennant","isOne","fallbackObject","IndexMap","indexes_","indexSet_","indexKey","sortedMap","safeGet","hasIndex","indexDefinition","addIndex","existingChildren","newIndex","sawIndexedValue","iter","indexName","newIndexSet","newIndexes","addToIndexes","_this","indexedChildren","existingSnap","newChildren","removeFromIndexes","NAME_ONLY_COMPARATOR","NAME_COMPARATOR","ChildrenNode","children_","indexMap_","Default","newIndexMap","newPriority","newImmediateChild","numKeys","allIntegerKeys","array","toHash_1","childHash","idx","resolveIndex_","predecessor","getFirstChildName","getFirstChild","getLastChildName","getLastChild","wrappedNode","startPost","endPost","MAX_NODE$2","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","MaxNode","MAX","USE_HINZE","nodeFromJSON$1","json","jsonLeaf","node_1","jsonObj_1","childData","children_1","childrenHavePriority_1","hinzeJsonObj_1","childSet","sortedChildSet","__referenceConstructor","OperationType","ValueIndex","valueNode","VALUE_INDEX","PathIndex","indexPath_","extractChild","snap","aChild","bChild","DataSnapshot","node_","ref_","index_","exportVal","exists","childPathString","childPath","childRef","childrenNode","getKey","getRef","DataEvent","eventRegistration","prevName","getPath","getParent","getEventType","getEventRunner","CancelEvent","ValueEventRegistration","callback_","cancelCallback_","context_","respondsTo","getQueryParams","getIndex","snapshotNode","eventData","cancelCB_1","cb_1","createCancelEvent","hasAnyCallback","ChildEventRegistration","callbacks_","eventToCheck","cancelCB_2","cb_2","otherCount","getCount","thisCount","otherKey","getAnyKey","thisKey","Query","repo","queryParams_","orderByCalled_","validateQueryEndpoints_","startNode","endNode","hasStart","getIndexStartValue","hasEnd","getIndexEndValue","tooManyArgsError","wrongArgTypeError","startName","getIndexStartName","endName","getIndexEndName","validateLimit_","hasLimit","hasAnchoredLimit","validateNoPreviousOrderByCall_","cancelCallbackOrContext","getCancelAndContextArgs_","onValueEvent","onChildEvent","cancelCallback","container","addEventCallbackForQuery","off","validateContextObject","valueCallback","removeEventCallbackForQuery","userCallback","cancelOrContext","firstCall","catch","onceCallback","limitToFirst","limit","limitToLast","orderByChild","parsedPath","newParams","orderBy","orderByKey","orderByPriority","orderByValue","startAt","endAt","equalTo","queryObject","getQueryObject","queryIdentifier","isEqual","error$$1","sameRepo","samePath","sameQueryIdentifier","CountedSet","SparseSnapshotTree","find","childKey","remember","forget","self_1","safeToRemove","forEachTree","prefixPath","func","generateWithValues","Date","getTime","resolveDeferredValue","serverValues","resolveDeferredValueTree","resolvedTree","resolveDeferredValueSnapshot","rawPri","leafNode","emptyChildrenSingleton","__referenceConstructor$1","OperationSource","fromUser","fromServer","queryId","tagged","User","Server","forServerTaggedQuery","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","operationForChild","subtree","EmptyChildren","ImmutableTree","fromObject","childSnap","findRootMostMatchingPathAndValue","predicate","childExistingPathAndValue","fullPath","findRootMostValueAndPath","toSet","newChild","setTree","newTree","fold","fold_","pathSoFar","accum","findOnPath","findOnPath_","pathToFollow","nextChild","foreachOnPath","foreachOnPath_","currentRelativePath","foreach","foreach_","foreachChild","ListenComplete","LISTEN_COMPLETE","Overwrite","OVERWRITE","Merge","MERGE","CacheNode","fullyInitialized_","filtered_","isFullyInitialized","isFiltered","isCompleteForPath","isCompleteForChild","getNode","ViewCache","eventCache_","serverCache_","updateEventSnap","eventSnap","complete","filtered","updateServerSnap","serverSnap","getEventCache","getCompleteEventSnap","getServerCache","getCompleteServerSnap","Change","oldSnap","valueChange","VALUE","childAddedChange","CHILD_ADDED","childRemovedChange","CHILD_REMOVED","childChangedChange","newSnapshot","oldSnapshot","CHILD_CHANGED","childMovedChange","CHILD_MOVED","IndexedFilter","affectedPath","optChangeAccumulator","trackChildChange","updateFullNode","newSnap","filtersNodes","getIndexedFilter","ChildChangeAccumulator","changeMap_","oldChange","oldType","getChanges","getValues","NoCompleteChildSource_","getCompleteChild","getChildAfterChild","NO_COMPLETE_CHILD_SOURCE","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","calcCompleteChild","completeServerData","calcIndexedSlice","ProcessorResult","viewCache","changes","ViewProcessor","filter_","assertIndexed","applyOperation","oldViewCache","operation","writesCache","completeCache","newViewCache","filterServerNode","accumulator","overwrite","applyUserOverwrite_","applyServerOverwrite_","merge","applyUserMerge_","applyServerMerge_","ackUserWrite","revertUserWrite_","ackUserWrite_","listenComplete_","maybeAddValueEvent_","isLeafOrEmpty","oldCompleteSnap","generateEventCacheAfterServerEvent_","changePath","oldEventSnap","shadowingWrite","newEventCache","serverCache","completeChildren","completeEventChildren","calcCompleteEventChildren","completeNode","calcCompleteEventCache","oldEventNode","updatedPriority","calcEventCacheAfterServerOverwrite","childChangePath","newEventChild","eventChildUpdate","changedSnap","newServerCache","oldServerSnap","serverFilter","newServerNode","newEventSnap","cacheHasChild_","changedChildren","curViewCache","writePath","applyMerge_","viewMergeTree","serverChild","childMergeTree","isUnknownDeepMerge","ackPath","changedChildren_1","changedChildren_2","mergePath","serverCachePath","oldServerNode","completeServerCache","oldEventCache","serverChildren","EventGenerator","query_","generateEventsForChanges","eventCache","eventRegistrations","moves","generateEventsForType_","registrations","filteredChanges","compareChanges_","materializedChange","materializeSingleChange_","registration","aWrapped","bWrapped","View","initialViewCache","eventRegistrations_","indexFilter","getNodeFilter","processor_","initialServerCache","initialEventCache","eventGenerator_","getQuery","getCompleteServerCache","loadsAllData","addEventRegistration","removeEventRegistration","cancelError","cancelEvents","path_1","maybeEvent","remaining","generateEventsForChanges_","getInitialEvents","initialChanges","eventNode","SyncPoint","views_","optCompleteServerCache","view","events_1","serverCacheComplete","eventCacheComplete","hadCompleteView","hasCompleteView","viewQueryId","getQueryViews","viewForQuery","getCompleteView","viewExistsForQuery","completeView","findValue","CompoundWrite","writeTree_","addWrite","rootmost","rootMostPath","newWriteTree","addWrites","updates","newWrite","removeWrite","hasCompleteWrite","getCompleteNode","getCompleteChildren","childCompoundWrite","shadowingNode","applySubtreeWrite_","writeTree","priorityWrite_1","WriteTree","visibleWrites_","allWrites_","lastWriteId_","childWrites","WriteTreeRef","addOverwrite","writeId","visible","addMerge","getWrite","record","findIndex","writeToRemove","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","recordContainsPath_","resetTree_","getCompleteWriteData","treePath","writeIdsToExclude","includeHiddenWrites","mergeAtPath","layerTree_","layeredCache","subMerge","completeServerChildren","topLevelSet","merge_1","existingEventSnap","existingServerSnap","childMerge","toIterate","writeRecord","findKey","DefaultFilter_","writes","treeRoot","compoundWrite","deepNode","treePath_","existingServerCache","SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap_","queryToTagMap_","applyUserOverwrite","newData","applyOperationToSyncPoints_","applyUserMerge","changeTree","needToReevaluate","affectedTree_1","applyServerOverwrite","applyServerMerge","applyListenComplete","applyTaggedQueryOverwrite","queryKey","queryKeyForTag_","r","parseQueryKey_","queryPath","op","applyTaggedOperation_","applyTaggedQueryMerge","applyTaggedListenComplete","foundAncestorDefaultView","pathToSyncPoint","sp","syncPoint","childSyncPoint","viewAlreadyExists","makeQueryKey_","getNextQueryTag_","setupListener_","maybeSyncPoint","removedAndEvents","removingDefault","covered","parentSyncPoint","newViews","collectDistinctViewsForSubTree_","newQuery","createListenerForView_","startListening","queryForListening_","tagForQuery_","hashFn","defaultTag","stopListening","queryToRemove","tagToRemove","removeTags_","includeHiddenSets","maybeChildSyncPoint","childMap","views_1","childViews","queries","removedQuery","removedQueryKey","removedQueryTag","isDefault","queriesToStop","queries_1","childQueries","queryToStop","status","splitIndex","nextQueryTag_","applyOperationHelper_","syncPointTree","applyOperationDescendantsHelper_","childOperation","childServerCache","childWritesCache","SnapshotHolder","rootNode_","updateSnapshot","newSnapshotNode","AuthTokenProvider","app_","getToken","forceRefresh","addTokenChangeListener","removeTokenChangeListener","notifyForInvalidToken","errorMessage","StatsCollection","counters_","incrementCounter","amount","deepCopy","StatsManager","getCollection","hashString","collections_","getOrCreateReporter","creatorFunction","reporters_","StatsListener","collection_","last_","newStats","delta","stat","FIRST_STATS_MIN_TIME","FIRST_STATS_MAX_TIME","REPORT_STATS_INTERVAL","StatsReporter","collection","server_","statsToReport_","statsListener_","reportStats_","includeStat","stats","reportedStats","haveStatsToReport","reportStats","EventQueue","eventLists_","recursionDepth_","queueEvents","eventDataList","currList","eventPath","EventList","raiseEventsAtPath","raiseQueuedEventsMatchingPredicate_","raiseEventsForChangedPath","changedPath","sentAll","eventList","raise","events_","eventFn","EventEmitter","allowedEvents_","listeners_","validateEventType_","getInitialEvent","et","VisibilityMonitor","hidden","visibilityChange","visible_","getInstance","OnlineMonitor","online_","isMobileCordova","currentlyOnline","PacketReceiver","onMessage_","pendingResponses","currentResponseNum","closeAfterResponse","onClose","closeAfter","responseNum","handleResponse","requestNum","_loop_1","toProcess","this_1","_loop_2","state_1","FIREBASE_LONGPOLL_START_PARAM","FIREBASE_LONGPOLL_CLOSE_COMMAND","FIREBASE_LONGPOLL_COMMAND_CB_NAME","FIREBASE_LONGPOLL_DATA_CB_NAME","FIREBASE_LONGPOLL_ID_PARAM","FIREBASE_LONGPOLL_PW_PARAM","FIREBASE_LONGPOLL_SERIAL_PARAM","FIREBASE_LONGPOLL_CALLBACK_ID_PARAM","FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM","FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET","FIREBASE_LONGPOLL_DATA_PARAM","FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM","FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM","MAX_URL_DATA_SIZE","SEG_HEADER_SIZE","MAX_PAYLOAD_SIZE","KEEPALIVE_REQUEST_INTERVAL","LP_CONNECT_TIMEOUT","BrowserPollConnection","connId","transportSessionId","lastSessionId","bytesSent","bytesReceived","everConnected_","log_","stats_","urlFn","onMessage","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","scriptTagHolder","FirebaseIFrameScriptHolder","command","arg1","arg2","incrementIncomingBytes_","clearTimeout","password","sendNewPolls","pN","urlParams","uniqueCallbackIdentifier","connectURL","addTag","startLongPoll","addDisconnectPingFrame","forceAllow","forceAllow_","forceDisallow","forceDisallow_","isAvailable","markConnectionHealthy","shutdown_","myDisconnFrame","send","dataStr","base64data","base64Encode","enqueueSegment","pw","commandCB","onMessageCB","outstandingRequests","pendingSegs","currentSerial","myIFrame","createIFrame_","script","currentDomain","iframeContents","doc","contentDocument","alive","myID","myPW","theURL","nodeRestRequest","newRequest_","curDataString","nextSeg","theSeg","seg","ts","addLongPollTag_","segnum","totalsegs","url","serial","doNewRequest","keepaliveTimeout","readyStateCB","loadCB","doNodeLongPoll","newScript_1","async","onload","onreadystatechange","rstate","onerror","WEBSOCKET_MAX_FRAME_SIZE","WEBSOCKET_KEEPALIVE_INTERVAL","WebSocketImpl","MozWebSocket","WebSocket","WebSocketConnection","keepaliveTimer","frames","totalFrames","connectionURL_","device","CONSTANTS","NODE_ADMIN","headers","User-Agent","SDK_VERSION","NODE_ENV","BASE_URL","origin","mySock","onopen","onclose","m","handleIncomingFrame","isOldAndroid","oldAndroidRegex","oldAndroidMatch","previouslyFailed","appendFrame_","fullMess","jsonMess","handleNewFrameCount_","frameCount","extractFrameCount_","mess","resetKeepAlive","remainingData","sendString_","clearInterval","setInterval","responsesRequiredToBeHealthy","healthyTimeout","TransportManager","initTransports_","isWebSocketsAvailable","isSkipPollConnection","transports_","transports_1","ALL_TRANSPORTS","transport","initialTransport","upgradeTransport","UPGRADE_TIMEOUT","DELAY_BEFORE_SENDING_EXTRA_REQUESTS","BYTES_SENT_HEALTHY_OVERRIDE","BYTES_RECEIVED_HEALTHY_OVERRIDE","MESSAGE_TYPE","MESSAGE_DATA","CONTROL_SHUTDOWN","CONTROL_RESET","CONTROL_ERROR","CONTROL_PONG","SWITCH_ACK","END_TRANSMISSION","PING","SERVER_HELLO","Connection","repoInfo_","onReady_","onKill_","connectionCount","pendingDataMessages","state_","transportManager_","start_","conn","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeout_ms","healthyTimeout_","everConnected","onConnectionLost_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","sendRequest","dataMsg","msg","t","sendData_","tryCleanupConnection","onSecondaryControl_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","proceedWithUpgrade_","onControl_","onDataMessage_","onPrimaryResponse_","payload","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","timestamp","sessionId","onConnectionEstablished_","tryStartUpgrade_","startUpgrade_","closeConnections_","ServerActions","put","refreshAuthToken","token","onDisconnectPut","onDisconnectMerge","RECONNECT_MIN_DELAY","RECONNECT_MAX_DELAY_DEFAULT","RECONNECT_MAX_DELAY_FOR_ADMINS","RECONNECT_DELAY_MULTIPLIER","RECONNECT_DELAY_RESET_TIMEOUT","SERVER_KILL_INTERRUPT_REASON","INVALID_AUTH_TOKEN_THRESHOLD","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","listens_","outstandingPuts_","outstandingPutCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","authToken_","forceTokenRefresh_","invalidAuthTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","scheduleConnect_","onVisible_","onOnline_","onResponse","curReqNum","listen","currentHashFn","listenSpec","sendListen_","req","warnOnListenWarnings_","currentListenSpec","removeListen_","warnings","indexSpec","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","isFirebaseSecret","isAdmin","token_1","authMethod","isValidFormat","requestData","cred","onAuthRevoked_","unlisten","sendUnlisten_","queryObj","sendOnDisconnect_","request","response","putInternal","sendPut_","queued","errorReason","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","handleTimestamp_","sendConnectStats_","restoreState_","establishConnection_","online","onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectSucceeded","timeSinceLastConnectAttempt","reconnectDelay","onDataMessage_1","onReady_1","onDisconnect_1","connId_1","nextConnectionId_","lastSessionId_1","canceled_1","connection_1","closeFn_1","sendRequestFn","accessToken","interrupt","resume","serverTimeOffset","q","normalizedPathString","statusCode","explanation","clientName","NODE_CLIENT","isReactNative","ReadonlyRestClient","getListenId_","listenId","thisListen","queryStringParamaters","toRestQueryStringParameters","restRequest_","status_1","queryStringParameters","authTokenData","authToken","querystring","xhr","XMLHttpRequest","responseText","INTERRUPT_REASON","Repo","forceRestClient","app","dataUpdateCount","eventQueue_","nextWriteId_","interceptServerDataCallback_","persistentConnection_","authTokenProvider","authOverride","statsReporter_","transactions_init_","infoData_","infoSyncTree_","infoEvents","updateInfo_","serverSyncTree_","serverTime","offsetNode","offset","generateServerValues","isMerge","taggedChildren","taggedSnap","rerunTransactions_","interceptServerData_","connectStatus","runOnDisconnectEvents_","getNextWriteId_","newNodeUnresolved","success","clearEvents","callOnCompleteCallback","abortTransactions_","childrenToMerge","empty","changedKey","changedValue","writeId_1","resolvedOnDisconnectTree","showDelta","longestName","reduce","previousValue","currentValue","statsIncrementCounter","metric","__database","Database","RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","getStartPost","getEndPost","self","LimitedFilter","rangedFilter_","limit_","getLimit","reverse_","isViewFromLeft","fullLimitUpdateChild_","inRange","indexCompare_1","foundStartPost","changeAccumulator","indexCmp_1","newChildNamedNode","windowBoundary","oldChildSnap","compareNext","remainsInWindow","nextChildInRange","QueryParams","limitSet_","startSet_","startNameSet_","endSet_","endNameSet_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","WIRE_PROTOCOL_CONSTANTS_","VIEW_FROM_LEFT","copy_","newLimit","VIEW_FROM_RIGHT","WIRE_PROTOCOL_CONSTANTS","INDEX_START_VALUE","INDEX_START_NAME","INDEX_END_VALUE","INDEX_END_NAME","LIMIT","viewFrom","VIEW_FROM","INDEX","REST_CONSTANTS","REST_QUERY_CONSTANTS_","qs","ORDER_BY","START_AT","END_AT","LIMIT_TO_FIRST","LIMIT_TO_LAST","Reference","parentPath","getRoot","databaseProp","database","transaction","transactionUpdate","applyLocally","promiseComplete","startTransaction","setPriority","thennablePushRef","pushRef","TransactionStatus","TreeNode","childCount","Tree","name_","parent_","subTree","pathObj","setValue","updateParents_","forEachDescendant","includeSelf","childrenFirst","forEachAncestor","forEachImmediateDescendantWithValue","updateChild_","childEmpty","childExists","MAX_TRANSACTION_RETRIES_","transactionQueueTree_","watchRef","unwatcher","order","retryCount","abortReason","currentWriteId","currentInputSnapshot","currentOutputSnapshotRaw","currentOutputSnapshotResolved","currentState","getLatestState_","RUN","queueNode","nodeQueue","priorityForNode","currentNode","sendReadyTransactions_","excludeSets","pruneCompletedTransactionsBelowNode_","buildTransactionQueue_","allRun","sendTransactionQueue_","setsToIgnore","txn","latestState","snapToSend","latestHash","SENT","dataToSend","pathToSend","COMPLETED","SENT_NEEDS_ABORT","NEEDS_ABORT","rootMostTransactionNode","getAncestorTransactionNode_","rerunTransactionQueue_","txnsToRerun","abortTransaction","newDataNode","hasExplicitPriority","oldWriteId","newNodeResolved","lastInput","transactionNode","transactionQueue","aggregateTransactionQueuesForNode_","abortTransactionsOnNode_","lastSent","_staticInstance","DATABASE_URL_OPTION","RepoManager","repos_","useRestClient_","appName","dbUrl","databaseFromApp","createRepo","deleteRepo","appRepos","INTERNAL","DatabaseInternals","checkDeleted_","refFromURL","apiName","parsedURL","goOffline","goOnline","ServerValue","TIMESTAMP",".sv","__awaiter","__generator","forceLongPolling","forceWebSockets","setSecurityDebugCallback","interceptServerData","DataConnection","simpleListen","echo","onEcho","RealTimeConnection","hijackHash","newHash","oldPut","opt_onComplete","opt_hash","ConnectionTarget","listens","firebaseRef","TEST_ACCESS","registerDatabase","instance","registerService","unused","ObjectProto","descriptor","arch","execPath","title","pid","browser","argv","cwd","chdir","exit","kill","umask","dlopen","uptime","memoryUsage","uvCounters","features","ceil","bitmap","isArrayIter","toLength","getIterFn","BREAK","RETURN","iterable","step","iterFn","TypeError","done","defined","fetch","support","searchParams","blob","Blob","formData","arrayBuffer","viewClasses","isDataView","DataView","isPrototypeOf","isArrayBufferView","ArrayBuffer","isView","Headers","append","normalizeName","normalizeValue","thisArg","iteratorFor","Request","_bodyInit","Body","Response","statusText","redirectStatuses","redirect","RangeError","input","parseHeaders","getAllResponseHeaders","responseURL","ontimeout","credentials","withCredentials","responseType","setRequestHeader","polyfill","header","consumed","bodyUsed","fileReaderReady","reader","readBlobAsArrayBuffer","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","Uint8Array","chars","fromCharCode","bufferClone","byteLength","buffer","_initBody","_bodyText","_bodyBlob","FormData","_bodyFormData","URLSearchParams","_bodyArrayBuffer","rejected","decode","parse","normalizeMethod","upcased","referrer","form","bytes","rawHeaders","preProcessedHeaders","line","bodyInit","ok","Internal","newGenericPromiseCapability","OwnPromiseCapability","Wrapper","aFunction","anInstance","forOf","task","microtask","newPromiseCapabilityModule","perform","PROMISE","versions","v8","$Promise","isNode","newPromiseCapability","USE_NATIVE","FakePromise","exec","PromiseRejectionEvent","isThenable","isReject","chain","reaction","exited","fail","_h","onHandleUnhandled","onUnhandled","unhandled","isUnhandled","onunhandledrejection","onrejectionhandled","$reject","_d","_w","$resolve","wrapper","executor","onFulfilled","onRejected","G","W","S","capability","$$reject","all","$index","alreadyCalled","race","SHARED","copyright","own","out","exp","IS_FORCED","IS_GLOBAL","IS_STATIC","IS_PROTO","IS_BIND","expProto","U","SAFE_CLOSING","riter","skipClosing","shared","propertyIsEnumerable","IObject","valueOf","__g","toInteger","DESCRIPTORS","SPECIES","KEY","macrotask","MutationObserver","WebKitMutationObserver","head","flush","standalone","toggle","characterData","__e","IE8_DOM_DEFINE","toPrimitive","Attributes","setTimeoutFunc","_state","_handled","_deferreds","doResolve","handle","_immediateFn","newValue","finale","_unhandledRejectionFn","Handler","prom","globalNS","createCommonjsModule","_global","_core","_isObject","_anObject","_fails","_descriptors","_domCreate","_ie8DomDefine","_toPrimitive","_objectDp","_propertyDesc","_hide","_has","px","_redefine","_aFunction","_ctx","_export","_cof","_iobject","_defined","_toObject","_toInteger","_toLength","_isArray","arg","_shared","_wks","_arraySpeciesConstructor","_arraySpeciesCreate","_arrayMethods","TYPE","$create","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","$this","callbackfn","UNSCOPABLES","_addToUnscopables","$find","forced","$find$1","KEY$1","forced$1","_toIobject","min$1","_toAbsoluteIndex","_arrayIncludes","IS_INCLUDES","fromIndex","_sharedKey","arrayIndexOf","_objectKeysInternal","names","_enumBugKeys","_objectKeys","f$1","getOwnPropertySymbols","_objectGops","f$2","_objectPie","$assign","assign","_objectAssign","A","K","aLen","getSymbols","isEnum","MATCH","_isRegexp","_stringContext","searchString","MATCH$1","_failsIsRegexp","re","STARTS_WITH","$startsWith","startsWith","_stringRepeat","repeat","_meta","META","setDesc","FREEZE","preventExtensions","setMeta","w","fastKey","getWeak","onFreeze","meta","NEED","_setToStringTag","f$3","_wksExt","_library","_wksDefine","$Symbol","_enumKeys","symbols","_objectDps","document$1","_html","documentElement","IE_PROTO$1","PROTOTYPE$1","_objectCreate","hiddenKeys","f$4","_objectGopn","gOPN","toString$1","windowNames","getWindowNames","f$5","_objectGopnExt","gOPD","f$6","_objectGopd","gOPD$1","dP$1","gOPN$1","$JSON","_stringify","PROTOTYPE$2","HIDDEN","TO_PRIMITIVE","SymbolRegistry","AllSymbols","OPSymbols","QObject","findChild","setSymbolDesc","D","protoDesc","wrap","sym","isSymbol","$defineProperty","$defineProperties","$propertyIsEnumerable","E","$getOwnPropertyDescriptor","$getOwnPropertyNames","$getOwnPropertySymbols","IS_OP","es6Symbols","wellKnownSymbols","for","keyFor","useSetter","useSimple","replacer","$replacer","TAG$1","_classof","_stringAt","_iterators","_iterCreate","IE_PROTO$2","ObjectProto$1","_objectGpo","_iterDefine","$at","iterated","point","_iterStep","es6_array_iterator","Arguments","ITERATOR$1","TO_STRING_TAG","ArrayValues","DOMIterables","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList","collections","explicit","Collection","__assign","__rest","__decorate","__param","__metadata","__exportStar","__values","__read","__spread","__await","__asyncGenerator","__asyncDelegator","__asyncValues","__makeTemplateObject","__importStar","__importDefault","extendStatics","setPrototypeOf","__","decorators","desc","decorate","paramIndex","decorator","metadataKey","metadataValue","metadata","_arguments","generator","fulfilled","y","g","label","sent","trys","ops","verb","throw","return","ar","asyncIterator","settle","fulfill","cooked","mod","PromiseCapability","$$resolve","setLogLevel","instances","defaultLogLevel","INFO","defaultLogHandler","logType","toISOString","DEBUG","WARN","ERROR","_logLevel","_logHandler","debug","level","inst","promiseCapability","DEFAULT_ENTRY_NAME","tokenListeners","FirebaseAppImpl","firebase_","isDeleted_","services_","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","options_","getUid","addAuthTokenListener","removeAuthTokenListener","checkDestroyed_","removeApp","services","serviceKey","instanceKey","service","_getService","instanceIdentifier","instanceSpecifier","factories","extendApp","deepExtend","createFirebaseNamespace","apps_","appHooks","initializeApp","apps","extendNamespace","createSubscribe","ErrorFactory","useAsService","callAppHooks","rawConfig","name_1","getApps","createService","serviceProperties","appHook","allowMultipleInstances","serviceNamespace","appArg","serviceFxn","eventName","serviceName","factoryName","useService","patchProperty","appErrors","errors","no-app","bad-app-name","duplicate-app","app-deleted","duplicate-service","sa-not-supported","invalid-app-argument","toIObject","toAbsoluteIndex","eval","addToUnscopables","assertion","byteArrayToString","c1","c2","c3","c4","u","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","atob","opt_webSafe","init_","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","encodeString","btoa","decodeString","decodeStringToByteArray","charToByteMap","haveByte4","byte4","base64Decode","dateValue","getUA","ERROR_NAME","captureStackTrace","patchCapture","captureFake","FirebaseError","template","fullCode","claims","signature","isValidTimestamp","validSince","validUntil","issuedAtTime","decoded","objTo","objFrom","isNonNullObject","rv","opt_obj","opt_this","querystringParams","arrayVal","querystringDecode","tokens","Hash","blockSize","chain_","buf_","W_","pad_","inbuf_","total_","reset","compress_","opt_offset","opt_length","lengthMinusBlock","inbuf","totalBits","onNoObservers","ObserverProxy","subscribe","observers","unsubscribes","observerCount","finalized","forEachObserver","observer","nextOrObserver","implementsAnyMethods","unsub","unsubscribeOne","finalError","sendOne","onError","methods_1","minCount","maxCount","argCount","argError","argName","validateNamespace","stringToByteArray$1","normalizeArray","allowAboveRoot","up","splitPathRe","splitPath","filename","xs","resolvedPath","resolvedAbsolute","isAbsolute","trailingSlash","paths","relative","fromParts","toParts","samePartsLength","outputParts","sep","delimiter","dirname","basename","ext","extname","forbiddenField"],"mappings":"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","file":"js/chunk-vendors.af759208.js","sourcesContent":["'use strict';\nvar LIBRARY = require('./_library');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar $iterCreate = require('./_iter-create');\nvar setToStringTag = require('./_set-to-string-tag');\nvar getPrototypeOf = require('./_object-gpo');\nvar ITERATOR = require('./_wks')('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n","// https://github.com/tc39/proposal-promise-finally\n'use strict';\nvar $export = require('./_export');\nvar core = require('./_core');\nvar global = require('./_global');\nvar speciesConstructor = require('./_species-constructor');\nvar promiseResolve = require('./_promise-resolve');\n\n$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {\n  var C = speciesConstructor(this, core.Promise || global.Promise);\n  var isFunction = typeof onFinally == 'function';\n  return this.then(\n    isFunction ? function (x) {\n      return promiseResolve(C, onFinally()).then(function () { return x; });\n    } : onFinally,\n    isFunction ? function (e) {\n      return promiseResolve(C, onFinally()).then(function () { throw e; });\n    } : onFinally\n  );\n} });\n","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n","var dP = require('./_object-dp');\nvar anObject = require('./_an-object');\nvar getKeys = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n","var ctx = require('./_ctx');\nvar invoke = require('./_invoke');\nvar html = require('./_html');\nvar cel = require('./_dom-create');\nvar global = require('./_global');\nvar process = global.process;\nvar setTask = global.setImmediate;\nvar clearTask = global.clearImmediate;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar defer, channel, port;\nvar run = function () {\n  var id = +this;\n  // eslint-disable-next-line no-prototype-builtins\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listener = function (event) {\n  run.call(event.data);\n};\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif (!setTask || !clearTask) {\n  setTask = function setImmediate(fn) {\n    var args = [];\n    var i = 1;\n    while (arguments.length > i) args.push(arguments[i++]);\n    queue[++counter] = function () {\n      // eslint-disable-next-line no-new-func\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id) {\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if (require('./_cof')(process) == 'process') {\n    defer = function (id) {\n      process.nextTick(ctx(run, id, 1));\n    };\n  // Sphere (JS game engine) Dispatch API\n  } else if (Dispatch && Dispatch.now) {\n    defer = function (id) {\n      Dispatch.now(ctx(run, id, 1));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  } else if (MessageChannel) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = ctx(port.postMessage, port, 1);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {\n    defer = function (id) {\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listener, false);\n  // IE8-\n  } else if (ONREADYSTATECHANGE in cel('script')) {\n    defer = function (id) {\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function (id) {\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set: setTask,\n  clear: clearTask\n};\n","// call something on iterator step with safe closing on error\nvar anObject = require('./_an-object');\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof');\nvar TAG = require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","var global = require('./_global');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar SRC = require('./_uid')('src');\nvar TO_STRING = 'toString';\nvar $toString = Function[TO_STRING];\nvar TPL = ('' + $toString).split(TO_STRING);\n\nrequire('./_core').inspectSource = function (it) {\n  return $toString.call(it);\n};\n\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    hide(O, key, val);\n  }\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = require('./_an-object');\nvar dPs = require('./_object-dps');\nvar enumBugKeys = require('./_enum-bug-keys');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n","/*!\n * Vue.js v2.5.17\n * (c) 2014-2018 Evan You\n * Released under the MIT License.\n */\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n// these helpers produces better vm code in JS engines due to their\n// explicitness and function inlining\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    // $flow-disable-line\n    typeof value === 'symbol' ||\n    typeof value === 'boolean'\n  )\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Get the raw type string of a value e.g. [object Object]\n */\nvar _toString = Object.prototype.toString;\n\nfunction toRawType (value) {\n  return _toString.call(value).slice(8, -1)\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(String(val));\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if a attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');\n\n/**\n * Remove an item from an array\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /\\B([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n});\n\n/**\n * Simple bind polyfill for environments that do not support it... e.g.\n * PhantomJS 1.x. Technically we don't need this anymore since native bind is\n * now more performant in most browsers, but removing it would be breaking for\n * code that was able to run in PhantomJS 1.x, so this must be kept for\n * backwards compatibility.\n */\n\n/* istanbul ignore next */\nfunction polyfillBind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n\n  boundFn._length = fn.length;\n  return boundFn\n}\n\nfunction nativeBind (fn, ctx) {\n  return fn.bind(ctx)\n}\n\nvar bind = Function.prototype.bind\n  ? nativeBind\n  : polyfillBind;\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/)\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\n\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  if (a === b) { return true }\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i])\n        })\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated',\n  'errorCaptured'\n];\n\n/*  */\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  // $flow-disable-line\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  // $flow-disable-line\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n})\n\n/*  */\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;\nvar weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');\nvar isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n\n// Firefox has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && !inWeex && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\nvar _Set;\n/* istanbul ignore if */ // $flow-disable-line\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar generateComponentTrace = (noop); // work around flow check\nvar formatComponentName = (noop);\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var options = typeof vm === 'function' && vm.cid != null\n      ? vm.options\n      : vm._isVue\n        ? vm.$options || vm.constructor.options\n        : vm || {};\n    var name = options.name || options._componentTag;\n    var file = options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.fnContext = undefined;\n  this.fnOptions = undefined;\n  this.fnScopeId = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: { configurable: true } };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.fnContext = vnode.fnContext;\n  cloned.fnOptions = vnode.fnOptions;\n  cloned.fnScopeId = vnode.fnScopeId;\n  cloned.isCloned = true;\n  return cloned\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);\n\nvar methodsToPatch = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n];\n\n/**\n * Intercept mutating methods and emit events\n */\nmethodsToPatch.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * In some cases we may want to disable observation inside a component's\n * update computation.\n */\nvar shouldObserve = true;\n\nfunction toggleObserving (value) {\n  shouldObserve = value;\n}\n\n/**\n * Observer class that is attached to each observed\n * object. Once attached, the observer converts the target\n * object's property keys into getter/setters that\n * collect dependencies and dispatch updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive(obj, keys[i]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src, keys) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value) || value instanceof VNode) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    shouldObserve &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  if (!getter && arguments.length === 2) {\n    val = obj[key];\n  }\n  var setter = property && property.set;\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n          if (Array.isArray(value)) {\n            dependArray(value);\n          }\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (process.env.NODE_ENV !== 'production' && customSetter) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot set reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (key in target && !(key in Object.prototype)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot delete reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (process.env.NODE_ENV !== 'production') {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this, this) : childVal,\n        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal\n      )\n    }\n  } else {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm, vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm, vm)\n        : parentVal;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn(parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  var res = Object.create(parentVal || null);\n  if (childVal) {\n    process.env.NODE_ENV !== 'production' && assertObjectType(key, childVal, vm);\n    return extend(res, childVal)\n  } else {\n    return res\n  }\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key$1 in childVal) {\n    var parent = ret[key$1];\n    var child = childVal[key$1];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key$1] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  if (childVal && process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  if (childVal) { extend(ret, childVal); }\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    validateComponentName(key);\n  }\n}\n\nfunction validateComponentName (name) {\n  if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n    warn(\n      'Invalid component name: \"' + name + '\". Component names ' +\n      'can only contain alphanumeric characters and the hyphen, ' +\n      'and must start with a letter.'\n    );\n  }\n  if (isBuiltInTag(name) || config.isReservedTag(name)) {\n    warn(\n      'Do not use built-in or reserved HTML elements as component ' +\n      'id: ' + name\n    );\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options, vm) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"props\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(props)) + \".\",\n      vm\n    );\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options, vm) {\n  var inject = options.inject;\n  if (!inject) { return }\n  var normalized = options.inject = {};\n  if (Array.isArray(inject)) {\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = { from: inject[i] };\n    }\n  } else if (isPlainObject(inject)) {\n    for (var key in inject) {\n      var val = inject[key];\n      normalized[key] = isPlainObject(val)\n        ? extend({ from: key }, val)\n        : { from: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"inject\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(inject)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\nfunction assertObjectType (name, value, vm) {\n  if (!isPlainObject(value)) {\n    warn(\n      \"Invalid value for option \\\"\" + name + \"\\\": expected an Object, \" +\n      \"but got \" + (toRawType(value)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child, vm);\n  normalizeInject(child, vm);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // boolean casting\n  var booleanIndex = getTypeIndex(Boolean, prop.type);\n  if (booleanIndex > -1) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (value === '' || value === hyphenate(key)) {\n      // only cast empty string / same name to boolean if\n      // boolean has higher priority\n      var stringIndex = getTypeIndex(String, prop.type);\n      if (stringIndex < 0 || booleanIndex < stringIndex) {\n        value = true;\n      }\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldObserve = shouldObserve;\n    toggleObserving(true);\n    observe(value);\n    toggleObserving(prevShouldObserve);\n  }\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    // skip validation for weex recycle-list child component props\n    !(false && isObject(value) && ('@binding' in value))\n  ) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (process.env.NODE_ENV !== 'production' && isObject(def)) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      \"Invalid prop: type check failed for prop \\\"\" + name + \"\\\".\" +\n      \" Expected \" + (expectedTypes.map(capitalize).join(', ')) +\n      \", got \" + (toRawType(value)) + \".\",\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    var t = typeof value;\n    valid = t === expectedType.toLowerCase();\n    // for primitive wrapper objects\n    if (!valid && t === 'object') {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isSameType (a, b) {\n  return getType(a) === getType(b)\n}\n\nfunction getTypeIndex (type, expectedTypes) {\n  if (!Array.isArray(expectedTypes)) {\n    return isSameType(expectedTypes, type) ? 0 : -1\n  }\n  for (var i = 0, len = expectedTypes.length; i < len; i++) {\n    if (isSameType(expectedTypes[i], type)) {\n      return i\n    }\n  }\n  return -1\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  if (vm) {\n    var cur = vm;\n    while ((cur = cur.$parent)) {\n      var hooks = cur.$options.errorCaptured;\n      if (hooks) {\n        for (var i = 0; i < hooks.length; i++) {\n          try {\n            var capture = hooks[i].call(cur, err, vm, info) === false;\n            if (capture) { return }\n          } catch (e) {\n            globalHandleError(e, cur, 'errorCaptured hook');\n          }\n        }\n      }\n    }\n  }\n  globalHandleError(err, vm, info);\n}\n\nfunction globalHandleError (err, vm, info) {\n  if (config.errorHandler) {\n    try {\n      return config.errorHandler.call(null, err, vm, info)\n    } catch (e) {\n      logError(e, null, 'config.errorHandler');\n    }\n  }\n  logError(err, vm, info);\n}\n\nfunction logError (err, vm, info) {\n  if (process.env.NODE_ENV !== 'production') {\n    warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n  }\n  /* istanbul ignore else */\n  if ((inBrowser || inWeex) && typeof console !== 'undefined') {\n    console.error(err);\n  } else {\n    throw err\n  }\n}\n\n/*  */\n/* globals MessageChannel */\n\nvar callbacks = [];\nvar pending = false;\n\nfunction flushCallbacks () {\n  pending = false;\n  var copies = callbacks.slice(0);\n  callbacks.length = 0;\n  for (var i = 0; i < copies.length; i++) {\n    copies[i]();\n  }\n}\n\n// Here we have async deferring wrappers using both microtasks and (macro) tasks.\n// In < 2.4 we used microtasks everywhere, but there are some scenarios where\n// microtasks have too high a priority and fire in between supposedly\n// sequential events (e.g. #4521, #6690) or even between bubbling of the same\n// event (#6566). However, using (macro) tasks everywhere also has subtle problems\n// when state is changed right before repaint (e.g. #6813, out-in transitions).\n// Here we use microtask by default, but expose a way to force (macro) task when\n// needed (e.g. in event handlers attached by v-on).\nvar microTimerFunc;\nvar macroTimerFunc;\nvar useMacroTask = false;\n\n// Determine (macro) task defer implementation.\n// Technically setImmediate should be the ideal choice, but it's only available\n// in IE. The only polyfill that consistently queues the callback after all DOM\n// events triggered in the same loop is by using MessageChannel.\n/* istanbul ignore if */\nif (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {\n  macroTimerFunc = function () {\n    setImmediate(flushCallbacks);\n  };\n} else if (typeof MessageChannel !== 'undefined' && (\n  isNative(MessageChannel) ||\n  // PhantomJS\n  MessageChannel.toString() === '[object MessageChannelConstructor]'\n)) {\n  var channel = new MessageChannel();\n  var port = channel.port2;\n  channel.port1.onmessage = flushCallbacks;\n  macroTimerFunc = function () {\n    port.postMessage(1);\n  };\n} else {\n  /* istanbul ignore next */\n  macroTimerFunc = function () {\n    setTimeout(flushCallbacks, 0);\n  };\n}\n\n// Determine microtask defer implementation.\n/* istanbul ignore next, $flow-disable-line */\nif (typeof Promise !== 'undefined' && isNative(Promise)) {\n  var p = Promise.resolve();\n  microTimerFunc = function () {\n    p.then(flushCallbacks);\n    // in problematic UIWebViews, Promise.then doesn't completely break, but\n    // it can get stuck in a weird state where callbacks are pushed into the\n    // microtask queue but the queue isn't being flushed, until the browser\n    // needs to do some other work, e.g. handle a timer. Therefore we can\n    // \"force\" the microtask queue to be flushed by adding an empty timer.\n    if (isIOS) { setTimeout(noop); }\n  };\n} else {\n  // fallback to macro\n  microTimerFunc = macroTimerFunc;\n}\n\n/**\n * Wrap a function so that if any code inside triggers state change,\n * the changes are queued using a (macro) task instead of a microtask.\n */\nfunction withMacroTask (fn) {\n  return fn._withTask || (fn._withTask = function () {\n    useMacroTask = true;\n    var res = fn.apply(null, arguments);\n    useMacroTask = false;\n    return res\n  })\n}\n\nfunction nextTick (cb, ctx) {\n  var _resolve;\n  callbacks.push(function () {\n    if (cb) {\n      try {\n        cb.call(ctx);\n      } catch (e) {\n        handleError(e, ctx, 'nextTick');\n      }\n    } else if (_resolve) {\n      _resolve(ctx);\n    }\n  });\n  if (!pending) {\n    pending = true;\n    if (useMacroTask) {\n      macroTimerFunc();\n    } else {\n      microTimerFunc();\n    }\n  }\n  // $flow-disable-line\n  if (!cb && typeof Promise !== 'undefined') {\n    return new Promise(function (resolve) {\n      _resolve = resolve;\n    })\n  }\n}\n\n/*  */\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (process.env.NODE_ENV !== 'production') {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      'referenced during render. Make sure that this property is reactive, ' +\n      'either in the data option, or for class-based components, by ' +\n      'initializing the property. ' +\n      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' && isNative(Proxy);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar seenObjects = new _Set();\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nfunction traverse (val) {\n  _traverse(val, seenObjects);\n  seenObjects.clear();\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\nvar mark;\nvar measure;\n\nif (process.env.NODE_ENV !== 'production') {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      perf.clearMeasures(name);\n    };\n  }\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        cloned[i].apply(null, arguments$1);\n      }\n    } else {\n      // return handler return value for single handlers\n      return fns.apply(null, arguments)\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, def, cur, old, event;\n  for (name in on) {\n    def = cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    /* istanbul ignore if */\n    if (isUndef(cur)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur);\n      }\n      add(event.name, cur, event.once, event.capture, event.passive, event.params);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  if (def instanceof VNode) {\n    def = def.data.hook || (def.data.hook = {});\n  }\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (process.env.NODE_ENV !== 'production') {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, lastIndex, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    lastIndex = res.length - 1;\n    last = res[lastIndex];\n    //  nested\n    if (Array.isArray(c)) {\n      if (c.length > 0) {\n        c = normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i));\n        // merge adjacent text nodes\n        if (isTextNode(c[0]) && isTextNode(last)) {\n          res[lastIndex] = createTextVNode(last.text + (c[0]).text);\n          c.shift();\n        }\n        res.push.apply(res, c);\n      }\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        res[lastIndex] = createTextVNode(last.text + c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[lastIndex] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (\n    comp.__esModule ||\n    (hasSymbol && comp[Symbol.toStringTag] === 'Module')\n  ) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  context\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (isDef(factory.contexts)) {\n    // already pending\n    factory.contexts.push(context);\n  } else {\n    var contexts = factory.contexts = [context];\n    var sync = true;\n\n    var forceRender = function () {\n      for (var i = 0, l = contexts.length; i < l; i++) {\n        contexts[i].$forceUpdate();\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender();\n      }\n    });\n\n    var reject = once(function (reason) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender();\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (typeof res.then === 'function') {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isDef(res.component) && typeof res.component.then === 'function') {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            setTimeout(function () {\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender();\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          setTimeout(function () {\n            if (isUndef(factory.resolved)) {\n              reject(\n                process.env.NODE_ENV !== 'production'\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn, once) {\n  if (once) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);\n  target = undefined;\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$off(event[i], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (!fn) {\n      vm._events[event] = null;\n      return vm\n    }\n    if (fn) {\n      // specific handler\n      var cb;\n      var i$1 = cbs.length;\n      while (i$1--) {\n        cb = cbs[i$1];\n        if (cb === fn || cb.fn === fn) {\n          cbs.splice(i$1, 1);\n          break\n        }\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (process.env.NODE_ENV !== 'production') {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        try {\n          cbs[i].apply(vm, args);\n        } catch (e) {\n          handleError(e, vm, (\"event handler for \\\"\" + event + \"\\\"\"));\n        }\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\n\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    var data = child.data;\n    // remove slot attribute if the node is resolved as a Vue slot node\n    if (data && data.attrs && data.attrs.slot) {\n      delete data.attrs.slot;\n    }\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.fnContext === context) &&\n      data && data.slot != null\n    ) {\n      var name = data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children || []);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      (slots.default || (slots.default = [])).push(child);\n    }\n  }\n  // ignore slots that contains only whitespace\n  for (var name$1 in slots) {\n    if (slots[name$1].every(isWhitespace)) {\n      delete slots[name$1];\n    }\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return (node.isComment && !node.asyncFactory) || node.text === ' '\n}\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res\n) {\n  res = res || {};\n  for (var i = 0; i < fns.length; i++) {\n    if (Array.isArray(fns[i])) {\n      resolveScopedSlots(fns[i], res);\n    } else {\n      res[fns[i].key] = fns[i].fn;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n      // no need for the ref nodes after initial patch\n      // this prevents keeping a detached DOM tree in memory (#5851)\n      vm.$options._parentElm = vm.$options._refElm = null;\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // release circular reference (#6759)\n    if (vm.$vnode) {\n      vm.$vnode.parent = null;\n    }\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((\"vue \" + name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((\"vue \" + name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  // we set this to vm._watcher inside the watcher's constructor\n  // since the watcher's initial patch may call $forceUpdate (e.g. inside child\n  // component's mounted hook), which relies on vm._watcher being already defined\n  new Watcher(vm, updateComponent, noop, null, true /* isRenderWatcher */);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren\n  var hasChildren = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    parentVnode.data.scopedSlots || // has new scoped slots\n    vm.$scopedSlots !== emptyObject // has old scoped slots\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listeners hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = parentVnode.data.attrs || emptyObject;\n  vm.$listeners = listeners || emptyObject;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    toggleObserving(false);\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      var propOptions = vm.$options.props; // wtf flow?\n      props[key] = validateProp(key, propOptions, propsData, vm);\n    }\n    toggleObserving(true);\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  listeners = listeners || emptyObject;\n  var oldListeners = vm.$options._parentListeners;\n  vm.$options._parentListeners = listeners;\n  updateComponentListeners(vm, listeners, oldListeners);\n\n  // resolve slots + force update if has children\n  if (hasChildren) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  // #7573 disable dep collection when invoking lifecycle hooks\n  pushTarget();\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      try {\n        handlers[i].call(vm);\n      } catch (e) {\n        handleError(e, vm, (hook + \" hook\"));\n      }\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n  popTarget();\n}\n\n/*  */\n\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (process.env.NODE_ENV !== 'production') {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$1 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options,\n  isRenderWatcher\n) {\n  this.vm = vm;\n  if (isRenderWatcher) {\n    vm._watcher = this;\n  }\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$1; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression = process.env.NODE_ENV !== 'production'\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  if (!isRoot) {\n    toggleObserving(false);\n  }\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      var hyphenatedKey = hyphenate(key);\n      if (isReservedAttribute(hyphenatedKey) ||\n          config.isReservedAttr(hyphenatedKey)) {\n        warn(\n          (\"\\\"\" + hyphenatedKey + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive(props, key, value, function () {\n        if (vm.$parent && !isUpdatingChildComponent) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  toggleObserving(true);\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    process.env.NODE_ENV !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  // #7573 disable dep collection when invoking data getters\n  pushTarget();\n  try {\n    return data.call(vm, vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  } finally {\n    popTarget();\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  // $flow-disable-line\n  var watchers = vm._computedWatchers = Object.create(null);\n  // computed properties are just getters during SSR\n  var isSSR = isServerRendering();\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (process.env.NODE_ENV !== 'production' && getter == null) {\n      warn(\n        (\"Getter is missing for computed property \\\"\" + key + \"\\\".\"),\n        vm\n      );\n    }\n\n    if (!isSSR) {\n      // create internal watcher for the computed property.\n      watchers[key] = new Watcher(\n        vm,\n        getter || noop,\n        noop,\n        computedWatcherOptions\n      );\n    }\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (process.env.NODE_ENV !== 'production') {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (\n  target,\n  key,\n  userDef\n) {\n  var shouldCache = !isServerRendering();\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = shouldCache\n      ? createComputedGetter(key)\n      : userDef;\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? shouldCache && userDef.cache !== false\n        ? createComputedGetter(key)\n        : userDef.get\n      : noop;\n    sharedPropertyDefinition.set = userDef.set\n      ? userDef.set\n      : noop;\n  }\n  if (process.env.NODE_ENV !== 'production' &&\n      sharedPropertyDefinition.set === noop) {\n    sharedPropertyDefinition.set = function () {\n      warn(\n        (\"Computed property \\\"\" + key + \"\\\" was assigned to but it has no setter.\"),\n        this\n      );\n    };\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods[key] == null) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n      if ((key in vm) && isReserved(key)) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" conflicts with an existing Vue instance method. \" +\n          \"Avoid defining component methods that start with _ or $.\"\n        );\n      }\n    }\n    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  expOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(expOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (process.env.NODE_ENV !== 'production') {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    toggleObserving(false);\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        defineReactive(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive(vm, key, result[key]);\n      }\n    });\n    toggleObserving(true);\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n      ? Reflect.ownKeys(inject).filter(function (key) {\n        /* istanbul ignore next */\n        return Object.getOwnPropertyDescriptor(inject, key).enumerable\n      })\n      : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var provideKey = inject[key].from;\n      var source = vm;\n      while (source) {\n        if (source._provided && hasOwn(source._provided, provideKey)) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (!source) {\n        if ('default' in inject[key]) {\n          var provideDefault = inject[key].default;\n          result[key] = typeof provideDefault === 'function'\n            ? provideDefault.call(vm)\n            : provideDefault;\n        } else if (process.env.NODE_ENV !== 'production') {\n          warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n        }\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    ret = new Array(keys.length);\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      ret[i] = render(val[key], key, i);\n    }\n  }\n  if (isDef(ret)) {\n    (ret)._isVList = true;\n  }\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  var nodes;\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      if (process.env.NODE_ENV !== 'production' && !isObject(bindObject)) {\n        warn(\n          'slot v-bind without argument expects an Object',\n          this\n        );\n      }\n      props = extend(extend({}, bindObject), props);\n    }\n    nodes = scopedSlotFn(props) || fallback;\n  } else {\n    var slotNodes = this.$slots[name];\n    // warn duplicate slot usage\n    if (slotNodes) {\n      if (process.env.NODE_ENV !== 'production' && slotNodes._rendered) {\n        warn(\n          \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n          \"- this will likely cause render errors.\",\n          this\n        );\n      }\n      slotNodes._rendered = true;\n    }\n    nodes = slotNodes || fallback;\n  }\n\n  var target = props && props.slot;\n  if (target) {\n    return this.$createElement('template', { slot: target }, nodes)\n  } else {\n    return nodes\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\nfunction isKeyNotMatch (expect, actual) {\n  if (Array.isArray(expect)) {\n    return expect.indexOf(actual) === -1\n  } else {\n    return expect !== actual\n  }\n}\n\n/**\n * Runtime helper for checking keyCodes from config.\n * exposed as Vue.prototype._k\n * passing in eventKeyName as last argument separately for backwards compat\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInKeyCode,\n  eventKeyName,\n  builtInKeyName\n) {\n  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;\n  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {\n    return isKeyNotMatch(builtInKeyName, eventKeyName)\n  } else if (mappedKeyCode) {\n    return isKeyNotMatch(mappedKeyCode, eventKeyCode)\n  } else if (eventKeyName) {\n    return hyphenate(eventKeyName) !== key\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        if (!(key in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + key)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var cached = this._staticTrees || (this._staticTrees = []);\n  var tree = cached[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree.\n  if (tree && !isInFor) {\n    return tree\n  }\n  // otherwise, render a fresh tree.\n  tree = cached[index] = this.$options.staticRenderFns[index].call(\n    this._renderProxy,\n    null,\n    this // for render fns generated for functional component templates\n  );\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(existing, ours) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction installRenderHelpers (target) {\n  target._o = markOnce;\n  target._n = toNumber;\n  target._s = toString;\n  target._l = renderList;\n  target._t = renderSlot;\n  target._q = looseEqual;\n  target._i = looseIndexOf;\n  target._m = renderStatic;\n  target._f = resolveFilter;\n  target._k = checkKeyCodes;\n  target._b = bindObjectProps;\n  target._v = createTextVNode;\n  target._e = createEmptyVNode;\n  target._u = resolveScopedSlots;\n  target._g = bindObjectListeners;\n}\n\n/*  */\n\nfunction FunctionalRenderContext (\n  data,\n  props,\n  children,\n  parent,\n  Ctor\n) {\n  var options = Ctor.options;\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var contextVm;\n  if (hasOwn(parent, '_uid')) {\n    contextVm = Object.create(parent);\n    // $flow-disable-line\n    contextVm._original = parent;\n  } else {\n    // the context vm passed in is a functional context as well.\n    // in this case we want to make sure we are able to get a hold to the\n    // real context instance.\n    contextVm = parent;\n    // $flow-disable-line\n    parent = parent._original;\n  }\n  var isCompiled = isTrue(options._compiled);\n  var needNormalization = !isCompiled;\n\n  this.data = data;\n  this.props = props;\n  this.children = children;\n  this.parent = parent;\n  this.listeners = data.on || emptyObject;\n  this.injections = resolveInject(options.inject, parent);\n  this.slots = function () { return resolveSlots(children, parent); };\n\n  // support for compiled functional template\n  if (isCompiled) {\n    // exposing $options for renderStatic()\n    this.$options = options;\n    // pre-resolve slots for renderSlot()\n    this.$slots = this.slots();\n    this.$scopedSlots = data.scopedSlots || emptyObject;\n  }\n\n  if (options._scopeId) {\n    this._c = function (a, b, c, d) {\n      var vnode = createElement(contextVm, a, b, c, d, needNormalization);\n      if (vnode && !Array.isArray(vnode)) {\n        vnode.fnScopeId = options._scopeId;\n        vnode.fnContext = parent;\n      }\n      return vnode\n    };\n  } else {\n    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };\n  }\n}\n\ninstallRenderHelpers(FunctionalRenderContext.prototype);\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  contextVm,\n  children\n) {\n  var options = Ctor.options;\n  var props = {};\n  var propOptions = options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || emptyObject);\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n\n  var renderContext = new FunctionalRenderContext(\n    data,\n    props,\n    children,\n    contextVm,\n    Ctor\n  );\n\n  var vnode = options.render.call(null, renderContext._c, renderContext);\n\n  if (vnode instanceof VNode) {\n    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options)\n  } else if (Array.isArray(vnode)) {\n    var vnodes = normalizeChildren(vnode) || [];\n    var res = new Array(vnodes.length);\n    for (var i = 0; i < vnodes.length; i++) {\n      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options);\n    }\n    return res\n  }\n}\n\nfunction cloneAndMarkFunctionalResult (vnode, data, contextVm, options) {\n  // #7817 clone node before setting fnContext, otherwise if the node is reused\n  // (e.g. it was from a cached normal slot) the fnContext causes named slots\n  // that should not be matched to match.\n  var clone = cloneVNode(vnode);\n  clone.fnContext = contextVm;\n  clone.fnOptions = options;\n  if (data.slot) {\n    (clone.data || (clone.data = {})).slot = data.slot;\n  }\n  return clone\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n\n\n\n// Register the component hook to weex native render engine.\n// The hook will be triggered by native, not javascript.\n\n\n// Updates the state of the component to weex native render engine.\n\n/*  */\n\n// https://github.com/Hanks10100/weex-native-directive/tree/master/component\n\n// listening on native callback\n\n/*  */\n\n/*  */\n\n// inline hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (\n    vnode,\n    hydrating,\n    parentElm,\n    refElm\n  ) {\n    if (\n      vnode.componentInstance &&\n      !vnode.componentInstance._isDestroyed &&\n      vnode.data.keepAlive\n    ) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    } else {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance,\n        parentElm,\n        refElm\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor, context);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // install component management hooks onto the placeholder node\n  installComponentHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n\n  // Weex specific: invoke recycle-list optimized @render function for\n  // extracting cell-slot template.\n  // https://github.com/Hanks10100/weex-native-directive/tree/master/component\n  /* istanbul ignore if */\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    _parentVnode: vnode,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnode.componentOptions.Ctor(options)\n}\n\nfunction installComponentHooks (data) {\n  var hooks = data.hook || (data.hook = {});\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    hooks[key] = componentVNodeHooks[key];\n  }\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  if (isDef(on[event])) {\n    on[event] = [data.model.callback].concat(on[event]);\n  } else {\n    on[event] = data.model.callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if (process.env.NODE_ENV !== 'production' &&\n    isDef(data) && isDef(data.key) && !isPrimitive(data.key)\n  ) {\n    {\n      warn(\n        'Avoid using non-primitive value as key, ' +\n        'use string/number value instead.',\n        context\n      );\n    }\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (Array.isArray(vnode)) {\n    return vnode\n  } else if (isDef(vnode)) {\n    if (isDef(ns)) { applyNS(vnode, ns); }\n    if (isDef(data)) { registerDeepBindings(data); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns, force) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    ns = undefined;\n    force = true;\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && (\n        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {\n        applyNS(child, ns, force);\n      }\n    }\n  }\n}\n\n// ref #5318\n// necessary to ensure parent re-render when deep bindings like :style and\n// :class are used on slot nodes\nfunction registerDeepBindings (data) {\n  if (isObject(data.style)) {\n    traverse(data.style);\n  }\n  if (isObject(data.class)) {\n    traverse(data.class);\n  }\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null; // v-once cached trees\n  var options = vm.$options;\n  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== 'production') {\n    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {\n    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, null, true);\n    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, null, true);\n  }\n}\n\nfunction renderMixin (Vue) {\n  // install runtime convenience helpers\n  installRenderHelpers(Vue.prototype);\n\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var _parentVnode = ref._parentVnode;\n\n    // reset _rendered flag on slots for duplicate slot check\n    if (process.env.NODE_ENV !== 'production') {\n      for (var key in vm.$slots) {\n        // $flow-disable-line\n        vm.$slots[key]._rendered = false;\n      }\n    }\n\n    if (_parentVnode) {\n      vm.$scopedSlots = _parentVnode.data.scopedSlots || emptyObject;\n    }\n\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        if (vm.$options.renderError) {\n          try {\n            vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);\n          } catch (e) {\n            handleError(e, vm, \"renderError\");\n            vnode = vm._vnode;\n          }\n        } else {\n          vnode = vm._vnode;\n        }\n      } else {\n        vnode = vm._vnode;\n      }\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n}\n\n/*  */\n\nvar uid$3 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$3++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      startTag = \"vue-perf-start:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure((\"vue \" + (vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  var parentVnode = options._parentVnode;\n  opts.parent = options.parent;\n  opts._parentVnode = parentVnode;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n\n  var vnodeComponentOptions = parentVnode.componentOptions;\n  opts.propsData = vnodeComponentOptions.propsData;\n  opts._parentListeners = vnodeComponentOptions.listeners;\n  opts._renderChildren = vnodeComponentOptions.children;\n  opts._componentTag = vnodeComponentOptions.tag;\n\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var extended = Ctor.extendOptions;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = dedupe(latest[key], extended[key], sealed[key]);\n    }\n  }\n  return modified\n}\n\nfunction dedupe (latest, extended, sealed) {\n  // compare latest and sealed to ensure lifecycle hooks won't be duplicated\n  // between merges\n  if (Array.isArray(latest)) {\n    var res = [];\n    sealed = Array.isArray(sealed) ? sealed : [sealed];\n    extended = Array.isArray(extended) ? extended : [extended];\n    for (var i = 0; i < latest.length; i++) {\n      // push original options and not sealed options to exclude duplicated options\n      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {\n        res.push(latest[i]);\n      }\n    }\n    return res\n  } else {\n    return latest\n  }\n}\n\nfunction Vue (options) {\n  if (process.env.NODE_ENV !== 'production' &&\n    !(this instanceof Vue)\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nrenderMixin(Vue);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production' && name) {\n      validateComponentName(name);\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production' && type === 'component') {\n          validateComponentName(id);\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (keepAliveInstance, filter) {\n  var cache = keepAliveInstance.cache;\n  var keys = keepAliveInstance.keys;\n  var _vnode = keepAliveInstance._vnode;\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cache, key, keys, _vnode);\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (\n  cache,\n  key,\n  keys,\n  current\n) {\n  var cached$$1 = cache[key];\n  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {\n    cached$$1.componentInstance.$destroy();\n  }\n  cache[key] = null;\n  remove(keys, key);\n}\n\nvar patternTypes = [String, RegExp, Array];\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes,\n    max: [String, Number]\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n    this.keys = [];\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this$1.cache) {\n      pruneCacheEntry(this$1.cache, key, this$1.keys);\n    }\n  },\n\n  mounted: function mounted () {\n    var this$1 = this;\n\n    this.$watch('include', function (val) {\n      pruneCache(this$1, function (name) { return matches(val, name); });\n    });\n    this.$watch('exclude', function (val) {\n      pruneCache(this$1, function (name) { return !matches(val, name); });\n    });\n  },\n\n  render: function render () {\n    var slot = this.$slots.default;\n    var vnode = getFirstComponentChild(slot);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      var ref = this;\n      var include = ref.include;\n      var exclude = ref.exclude;\n      if (\n        // not included\n        (include && (!name || !matches(include, name))) ||\n        // excluded\n        (exclude && name && matches(exclude, name))\n      ) {\n        return vnode\n      }\n\n      var ref$1 = this;\n      var cache = ref$1.cache;\n      var keys = ref$1.keys;\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (cache[key]) {\n        vnode.componentInstance = cache[key].componentInstance;\n        // make current key freshest\n        remove(keys, key);\n        keys.push(key);\n      } else {\n        cache[key] = vnode;\n        keys.push(key);\n        // prune oldest entry\n        if (this.max && keys.length > parseInt(this.max)) {\n          pruneCacheEntry(cache, keys[0], keys, this._vnode);\n        }\n      }\n\n      vnode.data.keepAlive = true;\n    }\n    return vnode || (slot && slot[0])\n  }\n}\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n}\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (process.env.NODE_ENV !== 'production') {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue);\n\nObject.defineProperty(Vue.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\n// expose FunctionalRenderContext for ssr runtime helper installation\nObject.defineProperty(Vue, 'FunctionalRenderContext', {\n  value: FunctionalRenderContext\n});\n\nVue.version = '2.5.17';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select,progress');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode && childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode && parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return renderClass(data.staticClass, data.class)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template,blockquote,iframe,tfoot'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\n\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\nvar isTextInputType = makeMap('text,number,password,search,email,tel,url');\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setStyleScope (node, scopeId) {\n  node.setAttribute(scopeId, '');\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetStyleScope: setStyleScope\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n}\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!isDef(key)) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (!Array.isArray(refs[key])) {\n        refs[key] = [ref];\n      } else if (refs[key].indexOf(ref) < 0) {\n        // $flow-disable-line\n        refs[key].push(ref);\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key && (\n      (\n        a.tag === b.tag &&\n        a.isComment === b.isComment &&\n        isDef(a.data) === isDef(b.data) &&\n        sameInputType(a, b)\n      ) || (\n        isTrue(a.isAsyncPlaceholder) &&\n        a.asyncFactory === b.asyncFactory &&\n        isUndef(b.asyncFactory.error)\n      )\n    )\n  )\n}\n\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove () {\n      if (--remove.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove.listeners = listeners;\n    return remove\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  function isUnknownElement$$1 (vnode, inVPre) {\n    return (\n      !inVPre &&\n      !vnode.ns &&\n      !(\n        config.ignoredElements.length &&\n        config.ignoredElements.some(function (ignore) {\n          return isRegExp(ignore)\n            ? ignore.test(vnode.tag)\n            : ignore === vnode.tag\n        })\n      ) &&\n      config.isUnknownElement(vnode.tag)\n    )\n  }\n\n  var creatingElmInVPre = 0;\n\n  function createElm (\n    vnode,\n    insertedVnodeQueue,\n    parentElm,\n    refElm,\n    nested,\n    ownerArray,\n    index\n  ) {\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // This vnode was used in a previous render!\n      // now it's used as a new node, overwriting its elm would cause\n      // potential patch errors down the road when it's used as an insertion\n      // reference node. Instead, we clone the node on-demand before creating\n      // associated DOM element for it.\n      vnode = ownerArray[index] = cloneVNode(vnode);\n    }\n\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (data && data.pre) {\n          creatingElmInVPre++;\n        }\n        if (isUnknownElement$$1(vnode, creatingElmInVPre)) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (process.env.NODE_ENV !== 'production' && data && data.pre) {\n        creatingElmInVPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref$$1) {\n    if (isDef(parent)) {\n      if (isDef(ref$$1)) {\n        if (ref$$1.parentNode === parent) {\n          nodeOps.insertBefore(parent, elm, ref$$1);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      if (process.env.NODE_ENV !== 'production') {\n        checkDuplicateKeys(children);\n      }\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    if (isDef(i = vnode.fnScopeId)) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    } else {\n      var ancestor = vnode;\n      while (ancestor) {\n        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n          nodeOps.setStyleScope(vnode.elm, i);\n        }\n        ancestor = ancestor.parent;\n      }\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      i !== vnode.fnContext &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, vnodeToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    if (process.env.NODE_ENV !== 'production') {\n      checkDuplicateKeys(newCh);\n    }\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key)\n          ? oldKeyToIdx[newStartVnode.key]\n          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n        } else {\n          vnodeToMove = oldCh[idxInOld];\n          if (sameVnode(vnodeToMove, newStartVnode)) {\n            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n          }\n        }\n        newStartVnode = newCh[++newStartIdx];\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function checkDuplicateKeys (children) {\n    var seenKeys = {};\n    for (var i = 0; i < children.length; i++) {\n      var vnode = children[i];\n      var key = vnode.key;\n      if (isDef(key)) {\n        if (seenKeys[key]) {\n          warn(\n            (\"Duplicate keys detected: '\" + key + \"'. This may cause an update error.\"),\n            vnode.context\n          );\n        } else {\n          seenKeys[key] = true;\n        }\n      }\n    }\n  }\n\n  function findIdxInOld (node, oldCh, start, end) {\n    for (var i = start; i < end; i++) {\n      var c = oldCh[i];\n      if (isDef(c) && sameVnode(node, c)) { return i }\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n\n    var elm = vnode.elm = oldVnode.elm;\n\n    if (isTrue(oldVnode.isAsyncPlaceholder)) {\n      if (isDef(vnode.asyncFactory.resolved)) {\n        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);\n      } else {\n        vnode.isAsyncPlaceholder = true;\n      }\n      return\n    }\n\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var hydrationBailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  // Note: style is excluded because it relies on initial clone for future\n  // deep updates (#7063).\n  var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue, inVPre) {\n    var i;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    inVPre = inVPre || (data && data.pre);\n    vnode.elm = elm;\n\n    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n      vnode.isAsyncPlaceholder = true;\n      return true\n    }\n    // assert node match\n    if (process.env.NODE_ENV !== 'production') {\n      if (!assertNodeMatch(elm, vnode, inVPre)) {\n        return false\n      }\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          // v-html and domProps: innerHTML\n          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {\n            if (i !== elm.innerHTML) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('server innerHTML: ', i);\n                console.warn('client innerHTML: ', elm.innerHTML);\n              }\n              return false\n            }\n          } else {\n            // iterate and compare children lists\n            var childrenMatch = true;\n            var childNode = elm.firstChild;\n            for (var i$1 = 0; i$1 < children.length; i$1++) {\n              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {\n                childrenMatch = false;\n                break\n              }\n              childNode = childNode.nextSibling;\n            }\n            // if childNode is not null, it means the actual childNodes list is\n            // longer than the virtual children list.\n            if (!childrenMatch || childNode) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n              }\n              return false\n            }\n          }\n        }\n      }\n      if (isDef(data)) {\n        var fullInvoke = false;\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            fullInvoke = true;\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n        if (!fullInvoke && data['class']) {\n          // ensure collecting deps for deep class bindings for future updates\n          traverse(data['class']);\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode, inVPre) {\n    if (isDef(vnode.tag)) {\n      return vnode.tag.indexOf('vue-component') === 0 || (\n        !isUnknownElement$$1(vnode, inVPre) &&\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (process.env.NODE_ENV !== 'production') {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n\n        // create new node\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        // update parent placeholder node element, recursively\n        if (isDef(vnode.parent)) {\n          var ancestor = vnode.parent;\n          var patchable = isPatchable(vnode);\n          while (ancestor) {\n            for (var i = 0; i < cbs.destroy.length; ++i) {\n              cbs.destroy[i](ancestor);\n            }\n            ancestor.elm = vnode.elm;\n            if (patchable) {\n              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n                cbs.create[i$1](emptyNode, ancestor);\n              }\n              // #6513\n              // invoke insert hooks that may have been merged by create hooks.\n              // e.g. for directives that uses the \"inserted\" hook.\n              var insert = ancestor.data.hook.insert;\n              if (insert.merged) {\n                // start at index 1 to avoid re-invoking component mounted hook\n                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {\n                  insert.fns[i$2]();\n                }\n              }\n            } else {\n              registerRef(ancestor);\n            }\n            ancestor = ancestor.parent;\n          }\n        }\n\n        // destroy old node\n        if (isDef(parentElm$1)) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n}\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode, 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode, 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    // $flow-disable-line\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      // $flow-disable-line\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  // $flow-disable-line\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n]\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  var opts = vnode.componentOptions;\n  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {\n    return\n  }\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  // #6666: IE/Edge forces progress value down to 1 before setting a max\n  /* istanbul ignore if */\n  if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (el.tagName.indexOf('-') > -1) {\n    baseSetAttr(el, key, value);\n  } else if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      // technically allowfullscreen is a boolean attribute for <iframe>,\n      // but Flash expects a value of \"true\" when used on <embed> tag\n      value = key === 'allowfullscreen' && el.tagName === 'EMBED'\n        ? 'true'\n        : key;\n      el.setAttribute(key, value);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    baseSetAttr(el, key, value);\n  }\n}\n\nfunction baseSetAttr (el, key, value) {\n  if (isFalsyAttrValue(value)) {\n    el.removeAttribute(key);\n  } else {\n    // #7138: IE10 & 11 fires input event when setting placeholder on\n    // <textarea>... block the first input event and remove the blocker\n    // immediately.\n    /* istanbul ignore if */\n    if (\n      isIE && !isIE9 &&\n      el.tagName === 'TEXTAREA' &&\n      key === 'placeholder' && !el.__ieph\n    ) {\n      var blocker = function (e) {\n        e.stopImmediatePropagation();\n        el.removeEventListener('input', blocker);\n      };\n      el.addEventListener('input', blocker);\n      // $flow-disable-line\n      el.__ieph = true; /* IE placeholder patched */\n    }\n    el.setAttribute(key, value);\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n}\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n}\n\n/*  */\n\n/*  */\n\n\n\n\n\n\n\n\n\n// add a raw attr (use this in preTransforms)\n\n\n\n\n\n\n\n\n// note: this only removes the attr from the Array (attrsList) so that it\n// doesn't get processed by processAttrs.\n// By default it does NOT remove it from the map (attrsMap) because the map is\n// needed during codegen.\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\n\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\n\n/*  */\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    var event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  // This was originally intended to fix #4521 but no longer necessary\n  // after 2.5. Keeping it for backwards compat with generated code from < 2.4\n  /* istanbul ignore if */\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction createOnceHandler (handler, event, capture) {\n  var _target = target$1; // save current target element in closure\n  return function onceHandler () {\n    var res = handler.apply(null, arguments);\n    if (res !== null) {\n      remove$2(event, onceHandler, capture, _target);\n    }\n  }\n}\n\nfunction add$1 (\n  event,\n  handler,\n  once$$1,\n  capture,\n  passive\n) {\n  handler = withMacroTask(handler);\n  if (once$$1) { handler = createOnceHandler(handler, event, capture); }\n  target$1.addEventListener(\n    event,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(\n    event,\n    handler._withTask || handler,\n    capture\n  );\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, vnode.context);\n  target$1 = undefined;\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n}\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (isUndef(props[key])) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n      // #6601 work around Chrome version <= 55 bug where single textNode\n      // replaced by innerHTML/textContent retains its parentNode property\n      if (elm.childNodes.length === 1) {\n        elm.removeChild(elm.childNodes[0]);\n      }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (elm, checkVal) {\n  return (!elm.composing && (\n    elm.tagName === 'OPTION' ||\n    isNotInFocusAndDirty(elm, checkVal) ||\n    isDirtyWithModifiers(elm, checkVal)\n  ))\n}\n\nfunction isNotInFocusAndDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is\n  // not equal to the updated value\n  var notInFocus = true;\n  // #6157\n  // work around IE bug when accessing document.activeElement in an iframe\n  try { notInFocus = document.activeElement !== elm; } catch (e) {}\n  return notInFocus && elm.value !== checkVal\n}\n\nfunction isDirtyWithModifiers (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if (isDef(modifiers)) {\n    if (modifiers.lazy) {\n      // inputs with lazy should only be updated when not in focus\n      return false\n    }\n    if (modifiers.number) {\n      return toNumber(value) !== toNumber(newVal)\n    }\n    if (modifiers.trim) {\n      return value.trim() !== newVal.trim()\n    }\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n}\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (\n        childNode && childNode.data &&\n        (styleData = normalizeStyleData(childNode.data))\n      ) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar vendorNames = ['Webkit', 'Moz', 'ms'];\n\nvar emptyStyle;\nvar normalize = cached(function (prop) {\n  emptyStyle = emptyStyle || document.createElement('div').style;\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in emptyStyle)) {\n    return prop\n  }\n  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < vendorNames.length; i++) {\n    var name = vendorNames[i] + capName;\n    if (name in emptyStyle) {\n      return name\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likely wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n}\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n    if (!el.classList.length) {\n      el.removeAttribute('class');\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    cur = cur.trim();\n    if (cur) {\n      el.setAttribute('class', cur);\n    } else {\n      el.removeAttribute('class');\n    }\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def) {\n  if (!def) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def === 'object') {\n    var res = {};\n    if (def.css !== false) {\n      extend(res, autoCssTransition(def.name || 'v'));\n    }\n    extend(res, def);\n    return res\n  } else if (typeof def === 'string') {\n    return autoCssTransition(def)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser\n  ? window.requestAnimationFrame\n    ? window.requestAnimationFrame.bind(window)\n    : setTimeout\n  : /* istanbul ignore next */ function (fn) { return fn(); };\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);\n  if (transitionClasses.indexOf(cls) < 0) {\n    transitionClasses.push(cls);\n    addClass(el, cls);\n  }\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && explicitEnterDuration != null) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode, 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled) {\n        addTransitionClass(el, toClass);\n        if (!userWantsControl) {\n          if (isValidDuration(explicitEnterDuration)) {\n            setTimeout(cb, explicitEnterDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data) || el.nodeType !== 1) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb)) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && isDef(explicitLeaveDuration)) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled) {\n          addTransitionClass(el, leaveToClass);\n          if (!userWantsControl) {\n            if (isValidDuration(explicitLeaveDuration)) {\n              setTimeout(cb, explicitLeaveDuration);\n            } else {\n              whenTransitionEnds(el, type, cb);\n            }\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {}\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n]\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar directive = {\n  inserted: function inserted (el, binding, vnode, oldVnode) {\n    if (vnode.tag === 'select') {\n      // #6903\n      if (oldVnode.elm && !oldVnode.elm._vOptions) {\n        mergeVNodeHook(vnode, 'postpatch', function () {\n          directive.componentUpdated(el, binding, vnode);\n        });\n      } else {\n        setSelected(el, binding, vnode.context);\n      }\n      el._vOptions = [].map.call(el.options, getValue);\n    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        el.addEventListener('compositionstart', onCompositionStart);\n        el.addEventListener('compositionend', onCompositionEnd);\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var prevOptions = el._vOptions;\n      var curOptions = el._vOptions = [].map.call(el.options, getValue);\n      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {\n        // trigger change event if\n        // no matching option found for at least one value\n        var needReset = el.multiple\n          ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })\n          : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);\n        if (needReset) {\n          trigger(el, 'change');\n        }\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  actuallySetSelected(el, binding, vm);\n  /* istanbul ignore if */\n  if (isIE || isEdge) {\n    setTimeout(function () {\n      actuallySetSelected(el, binding, vm);\n    }, 0);\n  }\n}\n\nfunction actuallySetSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  return options.every(function (o) { return !looseEqual(o, value); })\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition$$1) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (!value === !oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    if (transition$$1) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n}\n\nvar platformDirectives = {\n  model: directive,\n  show: show\n}\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag || isAsyncPlaceholder(c); });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (process.env.NODE_ENV !== 'production' && children.length > 1) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (process.env.NODE_ENV !== 'production' &&\n      mode && mode !== 'in-out' && mode !== 'out-in'\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? child.isComment\n        ? id + 'comment'\n        : id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (\n      oldChild &&\n      oldChild.data &&\n      !isSameChild(child, oldChild) &&\n      !isAsyncPlaceholder(oldChild) &&\n      // #6687 component root is a comment node\n      !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)\n    ) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild.data.transition = extend({}, data);\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        if (isAsyncPlaceholder(child)) {\n          return oldRawChild\n        }\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n}\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final desired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (process.env.NODE_ENV !== 'production') {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    // assign to this to avoid being removed in tree-shaking\n    // $flow-disable-line\n    this._reflow = document.body.offsetHeight;\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      /* istanbul ignore if */\n      if (this._hasMove) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n}\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n}\n\n/*  */\n\n// install platform specific utils\nVue.config.mustUseProp = mustUseProp;\nVue.config.isReservedTag = isReservedTag;\nVue.config.isReservedAttr = isReservedAttr;\nVue.config.getTagNamespace = getTagNamespace;\nVue.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue.options.directives, platformDirectives);\nextend(Vue.options.components, platformComponents);\n\n// install platform patch function\nVue.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nif (inBrowser) {\n  setTimeout(function () {\n    if (config.devtools) {\n      if (devtools) {\n        devtools.emit('init', Vue);\n      } else if (\n        process.env.NODE_ENV !== 'production' &&\n        process.env.NODE_ENV !== 'test' &&\n        isChrome\n      ) {\n        console[console.info ? 'info' : 'log'](\n          'Download the Vue Devtools extension for a better development experience:\\n' +\n          'https://github.com/vuejs/vue-devtools'\n        );\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' &&\n      process.env.NODE_ENV !== 'test' &&\n      config.productionTip !== false &&\n      typeof console !== 'undefined'\n    ) {\n      console[console.info ? 'info' : 'log'](\n        \"You are running Vue in development mode.\\n\" +\n        \"Make sure to turn on production mode when deploying for production.\\n\" +\n        \"See more tips at https://vuejs.org/guide/deployment.html\"\n      );\n    }\n  }, 0);\n}\n\n/*  */\n\nexport default Vue;\n","var store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n","module.exports = false;\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","// fast apply, http://jsperf.lnkit.com/fast-apply/5\nmodule.exports = function (fn, args, that) {\n  var un = that === undefined;\n  switch (args.length) {\n    case 0: return un ? fn()\n                      : fn.call(that);\n    case 1: return un ? fn(args[0])\n                      : fn.call(that, args[0]);\n    case 2: return un ? fn(args[0], args[1])\n                      : fn.call(that, args[0], args[1]);\n    case 3: return un ? fn(args[0], args[1], args[2])\n                      : fn.call(that, args[0], args[1], args[2]);\n    case 4: return un ? fn(args[0], args[1], args[2], args[3])\n                      : fn.call(that, args[0], args[1], args[2], args[3]);\n  } return fn.apply(that, args);\n};\n","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","// check on default Array iterator\nvar Iterators = require('./_iterators');\nvar ITERATOR = require('./_wks')('iterator');\nvar ArrayProto = Array.prototype;\n\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar util = require('@firebase/util');\nvar logger = require('@firebase/logger');\nvar tslib_1 = require('tslib');\nvar firebase = _interopDefault(require('@firebase/app'));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n * @constructor\r\n */\r\nvar DOMStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * @param {Storage} domStorage_ The underlying storage object (e.g. localStorage or sessionStorage)\r\n     */\r\n    function DOMStorageWrapper(domStorage_) {\r\n        this.domStorage_ = domStorage_;\r\n        // Use a prefix to avoid collisions with other stuff saved by the app.\r\n        this.prefix_ = 'firebase:';\r\n    }\r\n    /**\r\n     * @param {string} key The key to save the value under\r\n     * @param {?Object} value The value being stored, or null to remove the key.\r\n     */\r\n    DOMStorageWrapper.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            this.domStorage_.removeItem(this.prefixedName_(key));\r\n        }\r\n        else {\r\n            this.domStorage_.setItem(this.prefixedName_(key), util.stringify(value));\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} key\r\n     * @return {*} The value that was stored under this key, or null\r\n     */\r\n    DOMStorageWrapper.prototype.get = function (key) {\r\n        var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\r\n        if (storedVal == null) {\r\n            return null;\r\n        }\r\n        else {\r\n            return util.jsonEval(storedVal);\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} key\r\n     */\r\n    DOMStorageWrapper.prototype.remove = function (key) {\r\n        this.domStorage_.removeItem(this.prefixedName_(key));\r\n    };\r\n    /**\r\n     * @param {string} name\r\n     * @return {string}\r\n     */\r\n    DOMStorageWrapper.prototype.prefixedName_ = function (name) {\r\n        return this.prefix_ + name;\r\n    };\r\n    DOMStorageWrapper.prototype.toString = function () {\r\n        return this.domStorage_.toString();\r\n    };\r\n    return DOMStorageWrapper;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n *\r\n * @constructor\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage() {\r\n        this.cache_ = {};\r\n        this.isInMemoryStorage = true;\r\n    }\r\n    MemoryStorage.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            delete this.cache_[key];\r\n        }\r\n        else {\r\n            this.cache_[key] = value;\r\n        }\r\n    };\r\n    MemoryStorage.prototype.get = function (key) {\r\n        if (util.contains(this.cache_, key)) {\r\n            return this.cache_[key];\r\n        }\r\n        return null;\r\n    };\r\n    MemoryStorage.prototype.remove = function (key) {\r\n        delete this.cache_[key];\r\n    };\r\n    return MemoryStorage;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param {string} domStorageName Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @return {?} Turning off type information until a common interface is defined.\r\n */\r\nvar createStoragefor = function (domStorageName) {\r\n    try {\r\n        // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\r\n        // so it must be inside the try/catch.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window[domStorageName] !== 'undefined') {\r\n            // Need to test cache. Just because it's here doesn't mean it works\r\n            var domStorage = window[domStorageName];\r\n            domStorage.setItem('firebase:sentinel', 'cache');\r\n            domStorage.removeItem('firebase:sentinel');\r\n            return new DOMStorageWrapper(domStorage);\r\n        }\r\n    }\r\n    catch (e) { }\r\n    // Failed to create wrapper.  Just return in-memory storage.\r\n    // TODO: log?\r\n    return new MemoryStorage();\r\n};\r\n/** A storage object that lasts across sessions */\r\nvar PersistentStorage = createStoragefor('localStorage');\r\n/** A storage object that only lasts one session */\r\nvar SessionStorage = createStoragefor('sessionStorage');\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar logClient = new logger.Logger('@firebase/database');\r\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n * @type {function(): number} Generated ID.\r\n */\r\nvar LUIDGenerator = (function () {\r\n    var id = 1;\r\n    return function () {\r\n        return id++;\r\n    };\r\n})();\r\n/**\r\n * Sha1 hash of the input string\r\n * @param {!string} str The string to hash\r\n * @return {!string} The resulting hash\r\n */\r\nvar sha1 = function (str) {\r\n    var utf8Bytes = util.stringToByteArray(str);\r\n    var sha1 = new util.Sha1();\r\n    sha1.update(utf8Bytes);\r\n    var sha1Bytes = sha1.digest();\r\n    return util.base64.encodeByteArray(sha1Bytes);\r\n};\r\n/**\r\n * @param {...*} var_args\r\n * @return {string}\r\n * @private\r\n */\r\nvar buildLogMessage_ = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = '';\r\n    for (var i = 0; i < var_args.length; i++) {\r\n        if (Array.isArray(var_args[i]) ||\r\n            (var_args[i] &&\r\n                typeof var_args[i] === 'object' &&\r\n                typeof var_args[i].length === 'number')) {\r\n            message += buildLogMessage_.apply(null, var_args[i]);\r\n        }\r\n        else if (typeof var_args[i] === 'object') {\r\n            message += util.stringify(var_args[i]);\r\n        }\r\n        else {\r\n            message += var_args[i];\r\n        }\r\n        message += ' ';\r\n    }\r\n    return message;\r\n};\r\n/**\r\n * Use this for all debug messages in Firebase.\r\n * @type {?function(string)}\r\n */\r\nvar logger$1 = null;\r\n/**\r\n * Flag to check for log availability on first log message\r\n * @type {boolean}\r\n * @private\r\n */\r\nvar firstLog_ = true;\r\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param {boolean|?function(string)} logger_ A flag to turn on logging, or a custom logger\r\n * @param {boolean=} persistent Whether or not to persist logging settings across refreshes\r\n */\r\nvar enableLogging = function (logger_, persistent) {\r\n    util.assert(!persistent || (logger_ === true || logger_ === false), \"Can't turn on custom loggers persistently.\");\r\n    if (logger_ === true) {\r\n        logClient.logLevel = logger.LogLevel.VERBOSE;\r\n        logger$1 = logClient.log.bind(logClient);\r\n        if (persistent)\r\n            SessionStorage.set('logging_enabled', true);\r\n    }\r\n    else if (typeof logger_ === 'function') {\r\n        logger$1 = logger_;\r\n    }\r\n    else {\r\n        logger$1 = null;\r\n        SessionStorage.remove('logging_enabled');\r\n    }\r\n};\r\n/**\r\n *\r\n * @param {...(string|Arguments)} var_args\r\n */\r\nvar log = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    if (firstLog_ === true) {\r\n        firstLog_ = false;\r\n        if (logger$1 === null && SessionStorage.get('logging_enabled') === true)\r\n            enableLogging(true);\r\n    }\r\n    if (logger$1) {\r\n        var message = buildLogMessage_.apply(null, var_args);\r\n        logger$1(message);\r\n    }\r\n};\r\n/**\r\n * @param {!string} prefix\r\n * @return {function(...[*])}\r\n */\r\nvar logWrapper = function (prefix) {\r\n    return function () {\r\n        var var_args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            var_args[_i] = arguments[_i];\r\n        }\r\n        log.apply(void 0, [prefix].concat(var_args));\r\n    };\r\n};\r\n/**\r\n * @param {...string} var_args\r\n */\r\nvar error = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, var_args);\r\n    logClient.error(message);\r\n};\r\n/**\r\n * @param {...string} var_args\r\n */\r\nvar fatal = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = \"FIREBASE FATAL ERROR: \" + buildLogMessage_.apply(void 0, var_args);\r\n    logClient.error(message);\r\n    throw new Error(message);\r\n};\r\n/**\r\n * @param {...*} var_args\r\n */\r\nvar warn = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, var_args);\r\n    logClient.warn(message);\r\n};\r\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\r\nvar warnIfPageIsSecure = function () {\r\n    // Be very careful accessing browser globals. Who knows what may or may not exist.\r\n    if (typeof window !== 'undefined' &&\r\n        window.location &&\r\n        window.location.protocol &&\r\n        window.location.protocol.indexOf('https:') !== -1) {\r\n        warn('Insecure Firebase access from a secure page. ' +\r\n            'Please use https in calls to new Firebase().');\r\n    }\r\n};\r\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n * @param {*} data\r\n * @return {boolean}\r\n */\r\nvar isInvalidJSONNumber = function (data) {\r\n    return (typeof data === 'number' &&\r\n        (data != data || // NaN\r\n            data == Number.POSITIVE_INFINITY ||\r\n            data == Number.NEGATIVE_INFINITY));\r\n};\r\n/**\r\n * @param {function()} fn\r\n */\r\nvar executeWhenDOMReady = function (fn) {\r\n    if (util.isNodeSdk() || document.readyState === 'complete') {\r\n        fn();\r\n    }\r\n    else {\r\n        // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\r\n        // fire before onload), but fall back to onload.\r\n        var called_1 = false;\r\n        var wrappedFn_1 = function () {\r\n            if (!document.body) {\r\n                setTimeout(wrappedFn_1, Math.floor(10));\r\n                return;\r\n            }\r\n            if (!called_1) {\r\n                called_1 = true;\r\n                fn();\r\n            }\r\n        };\r\n        if (document.addEventListener) {\r\n            document.addEventListener('DOMContentLoaded', wrappedFn_1, false);\r\n            // fallback to onload.\r\n            window.addEventListener('load', wrappedFn_1, false);\r\n        }\r\n        else if (document.attachEvent) {\r\n            // IE.\r\n            document.attachEvent('onreadystatechange', function () {\r\n                if (document.readyState === 'complete')\r\n                    wrappedFn_1();\r\n            });\r\n            // fallback to onload.\r\n            window.attachEvent('onload', wrappedFn_1);\r\n            // jQuery has an extra hack for IE that we could employ (based on\r\n            // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\r\n            // I'm hoping we don't need it.\r\n        }\r\n    }\r\n};\r\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n * @type {!string}\r\n */\r\nvar MIN_NAME = '[MIN_NAME]';\r\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n * @type {!string}\r\n */\r\nvar MAX_NAME = '[MAX_NAME]';\r\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number}\r\n */\r\nvar nameCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a === MIN_NAME || b === MAX_NAME) {\r\n        return -1;\r\n    }\r\n    else if (b === MIN_NAME || a === MAX_NAME) {\r\n        return 1;\r\n    }\r\n    else {\r\n        var aAsInt = tryParseInt(a), bAsInt = tryParseInt(b);\r\n        if (aAsInt !== null) {\r\n            if (bAsInt !== null) {\r\n                return aAsInt - bAsInt == 0 ? a.length - b.length : aAsInt - bAsInt;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (bAsInt !== null) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return a < b ? -1 : 1;\r\n        }\r\n    }\r\n};\r\n/**\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number} comparison result.\r\n */\r\nvar stringCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a < b) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n};\r\n/**\r\n * @param {string} key\r\n * @param {Object} obj\r\n * @return {*}\r\n */\r\nvar requireKey = function (key, obj) {\r\n    if (obj && key in obj) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        throw new Error('Missing required key (' + key + ') in object: ' + util.stringify(obj));\r\n    }\r\n};\r\n/**\r\n * @param {*} obj\r\n * @return {string}\r\n */\r\nvar ObjectToUniqueKey = function (obj) {\r\n    if (typeof obj !== 'object' || obj === null)\r\n        return util.stringify(obj);\r\n    var keys = [];\r\n    for (var k in obj) {\r\n        keys.push(k);\r\n    }\r\n    // Export as json, but with the keys sorted.\r\n    keys.sort();\r\n    var key = '{';\r\n    for (var i = 0; i < keys.length; i++) {\r\n        if (i !== 0)\r\n            key += ',';\r\n        key += util.stringify(keys[i]);\r\n        key += ':';\r\n        key += ObjectToUniqueKey(obj[keys[i]]);\r\n    }\r\n    key += '}';\r\n    return key;\r\n};\r\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param {!string} str The string\r\n * @param {!number} segsize The maximum number of chars in the string.\r\n * @return {Array.<string>} The string, split into appropriately-sized chunks\r\n */\r\nvar splitStringBySize = function (str, segsize) {\r\n    var len = str.length;\r\n    if (len <= segsize) {\r\n        return [str];\r\n    }\r\n    var dataSegs = [];\r\n    for (var c = 0; c < len; c += segsize) {\r\n        if (c + segsize > len) {\r\n            dataSegs.push(str.substring(c, len));\r\n        }\r\n        else {\r\n            dataSegs.push(str.substring(c, c + segsize));\r\n        }\r\n    }\r\n    return dataSegs;\r\n};\r\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param {!(Object|Array)} obj The object or array to iterate over\r\n * @param {function(?, ?)} fn The function to apply\r\n */\r\nvar each = function (obj, fn) {\r\n    if (Array.isArray(obj)) {\r\n        for (var i = 0; i < obj.length; ++i) {\r\n            fn(i, obj[i]);\r\n        }\r\n    }\r\n    else {\r\n        /**\r\n         * in the conversion of code we removed the goog.object.forEach\r\n         * function which did a value,key callback. We standardized on\r\n         * a single impl that does a key, value callback. So we invert\r\n         * to not have to touch the `each` code points\r\n         */\r\n        util.forEach(obj, function (key, val) { return fn(val, key); });\r\n    }\r\n};\r\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param {!number} v A double\r\n * @return {string}\r\n */\r\nvar doubleToIEEE754String = function (v) {\r\n    util.assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\r\n    var ebits = 11, fbits = 52;\r\n    var bias = (1 << (ebits - 1)) - 1, s, e, f, ln, i, bits, str;\r\n    // Compute sign, exponent, fraction\r\n    // Skip NaN / Infinity handling --MJL.\r\n    if (v === 0) {\r\n        e = 0;\r\n        f = 0;\r\n        s = 1 / v === -Infinity ? 1 : 0;\r\n    }\r\n    else {\r\n        s = v < 0;\r\n        v = Math.abs(v);\r\n        if (v >= Math.pow(2, 1 - bias)) {\r\n            // Normalized\r\n            ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\r\n            e = ln + bias;\r\n            f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\r\n        }\r\n        else {\r\n            // Denormalized\r\n            e = 0;\r\n            f = Math.round(v / Math.pow(2, 1 - bias - fbits));\r\n        }\r\n    }\r\n    // Pack sign, exponent, fraction\r\n    bits = [];\r\n    for (i = fbits; i; i -= 1) {\r\n        bits.push(f % 2 ? 1 : 0);\r\n        f = Math.floor(f / 2);\r\n    }\r\n    for (i = ebits; i; i -= 1) {\r\n        bits.push(e % 2 ? 1 : 0);\r\n        e = Math.floor(e / 2);\r\n    }\r\n    bits.push(s ? 1 : 0);\r\n    bits.reverse();\r\n    str = bits.join('');\r\n    // Return the data as a hex string. --MJL\r\n    var hexByteString = '';\r\n    for (i = 0; i < 64; i += 8) {\r\n        var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\r\n        if (hexByte.length === 1)\r\n            hexByte = '0' + hexByte;\r\n        hexByteString = hexByteString + hexByte;\r\n    }\r\n    return hexByteString.toLowerCase();\r\n};\r\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n * @return {boolean}\r\n */\r\nvar isChromeExtensionContentScript = function () {\r\n    return !!(typeof window === 'object' &&\r\n        window['chrome'] &&\r\n        window['chrome']['extension'] &&\r\n        !/^chrome/.test(window.location.href));\r\n};\r\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n * @return {boolean}\r\n */\r\nvar isWindowsStoreApp = function () {\r\n    // Check for the presence of a couple WinRT globals\r\n    return typeof Windows === 'object' && typeof Windows.UI === 'object';\r\n};\r\n/**\r\n * Converts a server error code to a Javascript Error\r\n * @param {!string} code\r\n * @param {!Query} query\r\n * @return {Error}\r\n */\r\nvar errorForServerCode = function (code, query) {\r\n    var reason = 'Unknown Error';\r\n    if (code === 'too_big') {\r\n        reason =\r\n            'The data requested exceeds the maximum size ' +\r\n                'that can be accessed with a single request.';\r\n    }\r\n    else if (code == 'permission_denied') {\r\n        reason = \"Client doesn't have permission to access the desired data.\";\r\n    }\r\n    else if (code == 'unavailable') {\r\n        reason = 'The service is unavailable';\r\n    }\r\n    var error = new Error(code + ' at ' + query.path.toString() + ': ' + reason);\r\n    error.code = code.toUpperCase();\r\n    return error;\r\n};\r\n/**\r\n * Used to test for integer-looking strings\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INTEGER_REGEXP_ = new RegExp('^-?\\\\d{1,10}$');\r\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n * @param {!string} str\r\n * @return {?number}\r\n */\r\nvar tryParseInt = function (str) {\r\n    if (INTEGER_REGEXP_.test(str)) {\r\n        var intVal = Number(str);\r\n        if (intVal >= -2147483648 && intVal <= 2147483647) {\r\n            return intVal;\r\n        }\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param {!function()} fn The code to guard.\r\n */\r\nvar exceptionGuard = function (fn) {\r\n    try {\r\n        fn();\r\n    }\r\n    catch (e) {\r\n        // Re-throw exception when it's safe.\r\n        setTimeout(function () {\r\n            // It used to be that \"throw e\" would result in a good console error with\r\n            // relevant context, but as of Chrome 39, you just get the firebase.js\r\n            // file/line number where we re-throw it, which is useless. So we log\r\n            // e.stack explicitly.\r\n            var stack = e.stack || '';\r\n            warn('Exception was thrown by user callback.', stack);\r\n            throw e;\r\n        }, Math.floor(0));\r\n    }\r\n};\r\n/**\r\n * @return {boolean} true if we think we're currently being crawled.\r\n */\r\nvar beingCrawled = function () {\r\n    var userAgent = (typeof window === 'object' &&\r\n        window['navigator'] &&\r\n        window['navigator']['userAgent']) ||\r\n        '';\r\n    // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\r\n    // believe to support JavaScript/AJAX rendering.\r\n    // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\r\n    // would have seen the page\" is flaky if we don't treat it as a crawler.\r\n    return (userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0);\r\n};\r\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param {Function} fn Function to run.\r\n * @param {number} time Milliseconds to wait before running.\r\n * @return {number|Object} The setTimeout() return value.\r\n */\r\nvar setTimeoutNonBlocking = function (fn, time) {\r\n    var timeout = setTimeout(fn, time);\r\n    if (typeof timeout === 'object' && timeout['unref']) {\r\n        timeout['unref']();\r\n    }\r\n    return timeout;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\r\nvar Path = /** @class */ (function () {\r\n    /**\r\n     * @param {string|Array.<string>} pathOrString Path string to parse,\r\n     *      or another path, or the raw tokens array\r\n     * @param {number=} pieceNum\r\n     */\r\n    function Path(pathOrString, pieceNum) {\r\n        if (pieceNum === void 0) {\r\n            this.pieces_ = pathOrString.split('/');\r\n            // Remove empty pieces.\r\n            var copyTo = 0;\r\n            for (var i = 0; i < this.pieces_.length; i++) {\r\n                if (this.pieces_[i].length > 0) {\r\n                    this.pieces_[copyTo] = this.pieces_[i];\r\n                    copyTo++;\r\n                }\r\n            }\r\n            this.pieces_.length = copyTo;\r\n            this.pieceNum_ = 0;\r\n        }\r\n        else {\r\n            this.pieces_ = pathOrString;\r\n            this.pieceNum_ = pieceNum;\r\n        }\r\n    }\r\n    Object.defineProperty(Path, \"Empty\", {\r\n        /**\r\n         * Singleton to represent an empty path\r\n         *\r\n         * @const\r\n         */\r\n        get: function () {\r\n            return new Path('');\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Path.prototype.getFront = function () {\r\n        if (this.pieceNum_ >= this.pieces_.length)\r\n            return null;\r\n        return this.pieces_[this.pieceNum_];\r\n    };\r\n    /**\r\n     * @return {number} The number of segments in this path\r\n     */\r\n    Path.prototype.getLength = function () {\r\n        return this.pieces_.length - this.pieceNum_;\r\n    };\r\n    /**\r\n     * @return {!Path}\r\n     */\r\n    Path.prototype.popFront = function () {\r\n        var pieceNum = this.pieceNum_;\r\n        if (pieceNum < this.pieces_.length) {\r\n            pieceNum++;\r\n        }\r\n        return new Path(this.pieces_, pieceNum);\r\n    };\r\n    /**\r\n     * @return {?string}\r\n     */\r\n    Path.prototype.getBack = function () {\r\n        if (this.pieceNum_ < this.pieces_.length)\r\n            return this.pieces_[this.pieces_.length - 1];\r\n        return null;\r\n    };\r\n    Path.prototype.toString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '')\r\n                pathString += '/' + this.pieces_[i];\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    Path.prototype.toUrlEncodedString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '')\r\n                pathString += '/' + encodeURIComponent(String(this.pieces_[i]));\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    /**\r\n     * Shallow copy of the parts of the path.\r\n     *\r\n     * @param {number=} begin\r\n     * @return {!Array<string>}\r\n     */\r\n    Path.prototype.slice = function (begin) {\r\n        if (begin === void 0) { begin = 0; }\r\n        return this.pieces_.slice(this.pieceNum_ + begin);\r\n    };\r\n    /**\r\n     * @return {?Path}\r\n     */\r\n    Path.prototype.parent = function () {\r\n        if (this.pieceNum_ >= this.pieces_.length)\r\n            return null;\r\n        var pieces = [];\r\n        for (var i = this.pieceNum_; i < this.pieces_.length - 1; i++)\r\n            pieces.push(this.pieces_[i]);\r\n        return new Path(pieces, 0);\r\n    };\r\n    /**\r\n     * @param {string|!Path} childPathObj\r\n     * @return {!Path}\r\n     */\r\n    Path.prototype.child = function (childPathObj) {\r\n        var pieces = [];\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++)\r\n            pieces.push(this.pieces_[i]);\r\n        if (childPathObj instanceof Path) {\r\n            for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\r\n                pieces.push(childPathObj.pieces_[i]);\r\n            }\r\n        }\r\n        else {\r\n            var childPieces = childPathObj.split('/');\r\n            for (var i = 0; i < childPieces.length; i++) {\r\n                if (childPieces[i].length > 0)\r\n                    pieces.push(childPieces[i]);\r\n            }\r\n        }\r\n        return new Path(pieces, 0);\r\n    };\r\n    /**\r\n     * @return {boolean} True if there are no segments in this path\r\n     */\r\n    Path.prototype.isEmpty = function () {\r\n        return this.pieceNum_ >= this.pieces_.length;\r\n    };\r\n    /**\r\n     * @param {!Path} outerPath\r\n     * @param {!Path} innerPath\r\n     * @return {!Path} The path from outerPath to innerPath\r\n     */\r\n    Path.relativePath = function (outerPath, innerPath) {\r\n        var outer = outerPath.getFront(), inner = innerPath.getFront();\r\n        if (outer === null) {\r\n            return innerPath;\r\n        }\r\n        else if (outer === inner) {\r\n            return Path.relativePath(outerPath.popFront(), innerPath.popFront());\r\n        }\r\n        else {\r\n            throw new Error('INTERNAL ERROR: innerPath (' +\r\n                innerPath +\r\n                ') is not within ' +\r\n                'outerPath (' +\r\n                outerPath +\r\n                ')');\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Path} left\r\n     * @param {!Path} right\r\n     * @return {number} -1, 0, 1 if left is less, equal, or greater than the right.\r\n     */\r\n    Path.comparePaths = function (left, right) {\r\n        var leftKeys = left.slice();\r\n        var rightKeys = right.slice();\r\n        for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\r\n            var cmp = nameCompare(leftKeys[i], rightKeys[i]);\r\n            if (cmp !== 0)\r\n                return cmp;\r\n        }\r\n        if (leftKeys.length === rightKeys.length)\r\n            return 0;\r\n        return leftKeys.length < rightKeys.length ? -1 : 1;\r\n    };\r\n    /**\r\n     *\r\n     * @param {Path} other\r\n     * @return {boolean} true if paths are the same.\r\n     */\r\n    Path.prototype.equals = function (other) {\r\n        if (this.getLength() !== other.getLength()) {\r\n            return false;\r\n        }\r\n        for (var i = this.pieceNum_, j = other.pieceNum_; i <= this.pieces_.length; i++, j++) {\r\n            if (this.pieces_[i] !== other.pieces_[j]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} other\r\n     * @return {boolean} True if this path is a parent (or the same as) other\r\n     */\r\n    Path.prototype.contains = function (other) {\r\n        var i = this.pieceNum_;\r\n        var j = other.pieceNum_;\r\n        if (this.getLength() > other.getLength()) {\r\n            return false;\r\n        }\r\n        while (i < this.pieces_.length) {\r\n            if (this.pieces_[i] !== other.pieces_[j]) {\r\n                return false;\r\n            }\r\n            ++i;\r\n            ++j;\r\n        }\r\n        return true;\r\n    };\r\n    return Path;\r\n}()); // end Path\r\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\r\nvar ValidationPath = /** @class */ (function () {\r\n    /**\r\n     * @param {!Path} path Initial Path.\r\n     * @param {string} errorPrefix_ Prefix for any error messages.\r\n     */\r\n    function ValidationPath(path, errorPrefix_) {\r\n        this.errorPrefix_ = errorPrefix_;\r\n        /** @type {!Array<string>} */\r\n        this.parts_ = path.slice();\r\n        /** @type {number} Initialize to number of '/' chars needed in path. */\r\n        this.byteLength_ = Math.max(1, this.parts_.length);\r\n        for (var i = 0; i < this.parts_.length; i++) {\r\n            this.byteLength_ += util.stringLength(this.parts_[i]);\r\n        }\r\n        this.checkValid_();\r\n    }\r\n    Object.defineProperty(ValidationPath, \"MAX_PATH_DEPTH\", {\r\n        /** @const {number} Maximum key depth. */\r\n        get: function () {\r\n            return 32;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ValidationPath, \"MAX_PATH_LENGTH_BYTES\", {\r\n        /** @const {number} Maximum number of (UTF8) bytes in a Firebase path. */\r\n        get: function () {\r\n            return 768;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** @param {string} child */\r\n    ValidationPath.prototype.push = function (child) {\r\n        // Count the needed '/'\r\n        if (this.parts_.length > 0) {\r\n            this.byteLength_ += 1;\r\n        }\r\n        this.parts_.push(child);\r\n        this.byteLength_ += util.stringLength(child);\r\n        this.checkValid_();\r\n    };\r\n    ValidationPath.prototype.pop = function () {\r\n        var last = this.parts_.pop();\r\n        this.byteLength_ -= util.stringLength(last);\r\n        // Un-count the previous '/'\r\n        if (this.parts_.length > 0) {\r\n            this.byteLength_ -= 1;\r\n        }\r\n    };\r\n    ValidationPath.prototype.checkValid_ = function () {\r\n        if (this.byteLength_ > ValidationPath.MAX_PATH_LENGTH_BYTES) {\r\n            throw new Error(this.errorPrefix_ +\r\n                'has a key path longer than ' +\r\n                ValidationPath.MAX_PATH_LENGTH_BYTES +\r\n                ' bytes (' +\r\n                this.byteLength_ +\r\n                ').');\r\n        }\r\n        if (this.parts_.length > ValidationPath.MAX_PATH_DEPTH) {\r\n            throw new Error(this.errorPrefix_ +\r\n                'path specified exceeds the maximum depth that can be written (' +\r\n                ValidationPath.MAX_PATH_DEPTH +\r\n                ') or object contains a cycle ' +\r\n                this.toErrorString());\r\n        }\r\n    };\r\n    /**\r\n     * String for use in error messages - uses '.' notation for path.\r\n     *\r\n     * @return {string}\r\n     */\r\n    ValidationPath.prototype.toErrorString = function () {\r\n        if (this.parts_.length == 0) {\r\n            return '';\r\n        }\r\n        return \"in property '\" + this.parts_.join('.') + \"'\";\r\n    };\r\n    return ValidationPath;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PROTOCOL_VERSION = '5';\r\nvar VERSION_PARAM = 'v';\r\nvar TRANSPORT_SESSION_PARAM = 's';\r\nvar REFERER_PARAM = 'r';\r\nvar FORGE_REF = 'f';\r\nvar FORGE_DOMAIN = 'firebaseio.com';\r\nvar LAST_SESSION_PARAM = 'ls';\r\nvar WEBSOCKET = 'websocket';\r\nvar LONG_POLLING = 'long_polling';\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A class that holds metadata about a Repo object\r\n *\r\n * @constructor\r\n */\r\nvar RepoInfo = /** @class */ (function () {\r\n    /**\r\n     * @param {string} host Hostname portion of the url for the repo\r\n     * @param {boolean} secure Whether or not this repo is accessed over ssl\r\n     * @param {string} namespace The namespace represented by the repo\r\n     * @param {boolean} webSocketOnly Whether to prefer websockets over all other transports (used by Nest).\r\n     * @param {string=} persistenceKey Override the default session persistence storage key\r\n     */\r\n    function RepoInfo(host, secure, namespace, webSocketOnly, persistenceKey) {\r\n        if (persistenceKey === void 0) { persistenceKey = ''; }\r\n        this.secure = secure;\r\n        this.namespace = namespace;\r\n        this.webSocketOnly = webSocketOnly;\r\n        this.persistenceKey = persistenceKey;\r\n        this.host = host.toLowerCase();\r\n        this.domain = this.host.substr(this.host.indexOf('.') + 1);\r\n        this.internalHost = PersistentStorage.get('host:' + host) || this.host;\r\n    }\r\n    RepoInfo.prototype.needsQueryParam = function () {\r\n        return this.host !== this.internalHost || this.isCustomHost();\r\n    };\r\n    RepoInfo.prototype.isCacheableHost = function () {\r\n        return this.internalHost.substr(0, 2) === 's-';\r\n    };\r\n    RepoInfo.prototype.isDemoHost = function () {\r\n        return this.domain === 'firebaseio-demo.com';\r\n    };\r\n    RepoInfo.prototype.isCustomHost = function () {\r\n        return (this.domain !== 'firebaseio.com' && this.domain !== 'firebaseio-demo.com');\r\n    };\r\n    RepoInfo.prototype.updateHost = function (newHost) {\r\n        if (newHost !== this.internalHost) {\r\n            this.internalHost = newHost;\r\n            if (this.isCacheableHost()) {\r\n                PersistentStorage.set('host:' + this.host, this.internalHost);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns the websocket URL for this repo\r\n     * @param {string} type of connection\r\n     * @param {Object} params list\r\n     * @return {string} The URL for this repo\r\n     */\r\n    RepoInfo.prototype.connectionURL = function (type, params) {\r\n        util.assert(typeof type === 'string', 'typeof type must == string');\r\n        util.assert(typeof params === 'object', 'typeof params must == object');\r\n        var connURL;\r\n        if (type === WEBSOCKET) {\r\n            connURL =\r\n                (this.secure ? 'wss://' : 'ws://') + this.internalHost + '/.ws?';\r\n        }\r\n        else if (type === LONG_POLLING) {\r\n            connURL =\r\n                (this.secure ? 'https://' : 'http://') + this.internalHost + '/.lp?';\r\n        }\r\n        else {\r\n            throw new Error('Unknown connection type: ' + type);\r\n        }\r\n        if (this.needsQueryParam()) {\r\n            params['ns'] = this.namespace;\r\n        }\r\n        var pairs = [];\r\n        util.forEach(params, function (key, value) {\r\n            pairs.push(key + '=' + value);\r\n        });\r\n        return connURL + pairs.join('&');\r\n    };\r\n    /** @return {string} */\r\n    RepoInfo.prototype.toString = function () {\r\n        var str = this.toURLString();\r\n        if (this.persistenceKey) {\r\n            str += '<' + this.persistenceKey + '>';\r\n        }\r\n        return str;\r\n    };\r\n    /** @return {string} */\r\n    RepoInfo.prototype.toURLString = function () {\r\n        return (this.secure ? 'https://' : 'http://') + this.host;\r\n    };\r\n    return RepoInfo;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!string} pathString\r\n * @return {string}\r\n */\r\nfunction decodePath(pathString) {\r\n    var pathStringDecoded = '';\r\n    var pieces = pathString.split('/');\r\n    for (var i = 0; i < pieces.length; i++) {\r\n        if (pieces[i].length > 0) {\r\n            var piece = pieces[i];\r\n            try {\r\n                piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\r\n            }\r\n            catch (e) { }\r\n            pathStringDecoded += '/' + piece;\r\n        }\r\n    }\r\n    return pathStringDecoded;\r\n}\r\n/**\r\n * @param {!string} queryString\r\n * @return {!{[key:string]:string}} key value hash\r\n */\r\nfunction decodeQuery(queryString) {\r\n    var results = {};\r\n    if (queryString.charAt(0) === '?') {\r\n        queryString = queryString.substring(1);\r\n    }\r\n    for (var _i = 0, _a = queryString.split('&'); _i < _a.length; _i++) {\r\n        var segment = _a[_i];\r\n        if (segment.length === 0) {\r\n            continue;\r\n        }\r\n        var kv = segment.split('=');\r\n        if (kv.length === 2) {\r\n            results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\r\n        }\r\n        else {\r\n            warn(\"Invalid query segment '\" + segment + \"' in query '\" + queryString + \"'\");\r\n        }\r\n    }\r\n    return results;\r\n}\r\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{repoInfo: !RepoInfo, path: !Path}}\r\n */\r\nvar parseRepoInfo = function (dataURL) {\r\n    var parsedUrl = parseURL(dataURL), namespace = parsedUrl.subdomain;\r\n    if (parsedUrl.domain === 'firebase') {\r\n        fatal(parsedUrl.host +\r\n            ' is no longer supported. ' +\r\n            'Please use <YOUR FIREBASE>.firebaseio.com instead');\r\n    }\r\n    // Catch common error of uninitialized namespace value.\r\n    if ((!namespace || namespace == 'undefined') &&\r\n        parsedUrl.domain !== 'localhost') {\r\n        fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\r\n    }\r\n    if (!parsedUrl.secure) {\r\n        warnIfPageIsSecure();\r\n    }\r\n    var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\r\n    return {\r\n        repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, webSocketOnly),\r\n        path: new Path(parsedUrl.pathString)\r\n    };\r\n};\r\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{host: string, port: number, domain: string, subdomain: string, secure: boolean, scheme: string, pathString: string}}\r\n */\r\nvar parseURL = function (dataURL) {\r\n    // Default to empty strings in the event of a malformed string.\r\n    var host = '', domain = '', subdomain = '', pathString = '';\r\n    // Always default to SSL, unless otherwise specified.\r\n    var secure = true, scheme = 'https', port = 443;\r\n    // Don't do any validation here. The caller is responsible for validating the result of parsing.\r\n    if (typeof dataURL === 'string') {\r\n        // Parse scheme.\r\n        var colonInd = dataURL.indexOf('//');\r\n        if (colonInd >= 0) {\r\n            scheme = dataURL.substring(0, colonInd - 1);\r\n            dataURL = dataURL.substring(colonInd + 2);\r\n        }\r\n        // Parse host, path, and query string.\r\n        var slashInd = dataURL.indexOf('/');\r\n        if (slashInd === -1) {\r\n            slashInd = dataURL.length;\r\n        }\r\n        var questionMarkInd = dataURL.indexOf('?');\r\n        if (questionMarkInd === -1) {\r\n            questionMarkInd = dataURL.length;\r\n        }\r\n        host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\r\n        if (slashInd < questionMarkInd) {\r\n            // For pathString, questionMarkInd will always come after slashInd\r\n            pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\r\n        }\r\n        var queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd)));\r\n        // If we have a port, use scheme for determining if it's secure.\r\n        colonInd = host.indexOf(':');\r\n        if (colonInd >= 0) {\r\n            secure = scheme === 'https' || scheme === 'wss';\r\n            port = parseInt(host.substring(colonInd + 1), 10);\r\n        }\r\n        else {\r\n            colonInd = dataURL.length;\r\n        }\r\n        var parts = host.split('.');\r\n        if (parts.length === 3) {\r\n            // Normalize namespaces to lowercase to share storage / connection.\r\n            domain = parts[1];\r\n            subdomain = parts[0].toLowerCase();\r\n        }\r\n        else if (parts.length === 2) {\r\n            domain = parts[0];\r\n        }\r\n        else if (parts[0].slice(0, colonInd).toLowerCase() === 'localhost') {\r\n            domain = 'localhost';\r\n        }\r\n        // Support `ns` query param if subdomain not already set\r\n        if (subdomain === '' && 'ns' in queryParams) {\r\n            subdomain = queryParams['ns'];\r\n        }\r\n    }\r\n    return {\r\n        host: host,\r\n        port: port,\r\n        domain: domain,\r\n        subdomain: subdomain,\r\n        secure: secure,\r\n        scheme: scheme,\r\n        pathString: pathString\r\n    };\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * True for invalid Firebase keys\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * Maximum number of characters to allow in leaf value\r\n * @type {number}\r\n * @private\r\n */\r\nvar MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\r\n/**\r\n * @param {*} key\r\n * @return {boolean}\r\n */\r\nvar isValidKey = function (key) {\r\n    return (typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key));\r\n};\r\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\r\nvar isValidPathString = function (pathString) {\r\n    return (typeof pathString === 'string' &&\r\n        pathString.length !== 0 &&\r\n        !INVALID_PATH_REGEX_.test(pathString));\r\n};\r\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\r\nvar isValidRootPathString = function (pathString) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    return isValidPathString(pathString);\r\n};\r\n/**\r\n * @param {*} priority\r\n * @return {boolean}\r\n */\r\nvar isValidPriority = function (priority) {\r\n    return (priority === null ||\r\n        typeof priority === 'string' ||\r\n        (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\r\n        (priority && typeof priority === 'object' && util.contains(priority, '.sv')));\r\n};\r\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\r\nvar validateFirebaseDataArg = function (fnName, argumentNumber, data, path, optional) {\r\n    if (optional && data === undefined)\r\n        return;\r\n    validateFirebaseData(util.errorPrefix(fnName, argumentNumber, optional), data, path);\r\n};\r\n/**\r\n * Validate a data object client-side before sending to server.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {*} data\r\n * @param {!Path|!ValidationPath} path_\r\n */\r\nvar validateFirebaseData = function (errorPrefix, data, path_) {\r\n    var path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\r\n    if (data === undefined) {\r\n        throw new Error(errorPrefix + 'contains undefined ' + path.toErrorString());\r\n    }\r\n    if (typeof data === 'function') {\r\n        throw new Error(errorPrefix +\r\n            'contains a function ' +\r\n            path.toErrorString() +\r\n            ' with contents = ' +\r\n            data.toString());\r\n    }\r\n    if (isInvalidJSONNumber(data)) {\r\n        throw new Error(errorPrefix + 'contains ' + data.toString() + ' ' + path.toErrorString());\r\n    }\r\n    // Check max leaf size, but try to avoid the utf8 conversion if we can.\r\n    if (typeof data === 'string' &&\r\n        data.length > MAX_LEAF_SIZE_ / 3 &&\r\n        util.stringLength(data) > MAX_LEAF_SIZE_) {\r\n        throw new Error(errorPrefix +\r\n            'contains a string greater than ' +\r\n            MAX_LEAF_SIZE_ +\r\n            ' utf8 bytes ' +\r\n            path.toErrorString() +\r\n            \" ('\" +\r\n            data.substring(0, 50) +\r\n            \"...')\");\r\n    }\r\n    // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\r\n    // to save extra walking of large objects.\r\n    if (data && typeof data === 'object') {\r\n        var hasDotValue_1 = false, hasActualChild_1 = false;\r\n        util.forEach(data, function (key, value) {\r\n            if (key === '.value') {\r\n                hasDotValue_1 = true;\r\n            }\r\n            else if (key !== '.priority' && key !== '.sv') {\r\n                hasActualChild_1 = true;\r\n                if (!isValidKey(key)) {\r\n                    throw new Error(errorPrefix +\r\n                        ' contains an invalid key (' +\r\n                        key +\r\n                        ') ' +\r\n                        path.toErrorString() +\r\n                        '.  Keys must be non-empty strings ' +\r\n                        'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n                }\r\n            }\r\n            path.push(key);\r\n            validateFirebaseData(errorPrefix, value, path);\r\n            path.pop();\r\n        });\r\n        if (hasDotValue_1 && hasActualChild_1) {\r\n            throw new Error(errorPrefix +\r\n                ' contains \".value\" child ' +\r\n                path.toErrorString() +\r\n                ' in addition to actual children.');\r\n        }\r\n    }\r\n};\r\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {Array<!Path>} mergePaths\r\n */\r\nvar validateFirebaseMergePaths = function (errorPrefix, mergePaths) {\r\n    var i, curPath;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        var keys = curPath.slice();\r\n        for (var j = 0; j < keys.length; j++) {\r\n            if (keys[j] === '.priority' && j === keys.length - 1) {\r\n                // .priority is OK\r\n            }\r\n            else if (!isValidKey(keys[j])) {\r\n                throw new Error(errorPrefix +\r\n                    'contains an invalid key (' +\r\n                    keys[j] +\r\n                    ') in path ' +\r\n                    curPath.toString() +\r\n                    '. Keys must be non-empty strings ' +\r\n                    'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n            }\r\n        }\r\n    }\r\n    // Check that update keys are not descendants of each other.\r\n    // We rely on the property that sorting guarantees that ancestors come\r\n    // right before descendants.\r\n    mergePaths.sort(Path.comparePaths);\r\n    var prevPath = null;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        if (prevPath !== null && prevPath.contains(curPath)) {\r\n            throw new Error(errorPrefix +\r\n                'contains a path ' +\r\n                prevPath.toString() +\r\n                ' that is ancestor of another path ' +\r\n                curPath.toString());\r\n        }\r\n        prevPath = curPath;\r\n    }\r\n};\r\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\r\nvar validateFirebaseMergeDataArg = function (fnName, argumentNumber, data, path, optional) {\r\n    if (optional && data === undefined)\r\n        return;\r\n    var errorPrefix = util.errorPrefix(fnName, argumentNumber, optional);\r\n    if (!(data && typeof data === 'object') || Array.isArray(data)) {\r\n        throw new Error(errorPrefix + ' must be an object containing the children to replace.');\r\n    }\r\n    var mergePaths = [];\r\n    util.forEach(data, function (key, value) {\r\n        var curPath = new Path(key);\r\n        validateFirebaseData(errorPrefix, value, path.child(curPath));\r\n        if (curPath.getBack() === '.priority') {\r\n            if (!isValidPriority(value)) {\r\n                throw new Error(errorPrefix +\r\n                    \"contains an invalid value for '\" +\r\n                    curPath.toString() +\r\n                    \"', which must be a valid \" +\r\n                    'Firebase priority (a string, finite number, server value, or null).');\r\n            }\r\n        }\r\n        mergePaths.push(curPath);\r\n    });\r\n    validateFirebaseMergePaths(errorPrefix, mergePaths);\r\n};\r\nvar validatePriority = function (fnName, argumentNumber, priority, optional) {\r\n    if (optional && priority === undefined)\r\n        return;\r\n    if (isInvalidJSONNumber(priority))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'is ' +\r\n            priority.toString() +\r\n            ', but must be a valid Firebase priority (a string, finite number, ' +\r\n            'server value, or null).');\r\n    // Special case to allow importing data with a .sv.\r\n    if (!isValidPriority(priority))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid Firebase priority ' +\r\n            '(a string, finite number, server value, or null).');\r\n};\r\nvar validateEventType = function (fnName, argumentNumber, eventType, optional) {\r\n    if (optional && eventType === undefined)\r\n        return;\r\n    switch (eventType) {\r\n        case 'value':\r\n        case 'child_added':\r\n        case 'child_removed':\r\n        case 'child_changed':\r\n        case 'child_moved':\r\n            break;\r\n        default:\r\n            throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n                'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                '\"child_changed\", or \"child_moved\".');\r\n    }\r\n};\r\nvar validateKey = function (fnName, argumentNumber, key, optional) {\r\n    if (optional && key === undefined)\r\n        return;\r\n    if (!isValidKey(key))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'was an invalid key = \"' +\r\n            key +\r\n            '\".  Firebase keys must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\r\n};\r\nvar validatePathString = function (fnName, argumentNumber, pathString, optional) {\r\n    if (optional && pathString === undefined)\r\n        return;\r\n    if (!isValidPathString(pathString))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'was an invalid path = \"' +\r\n            pathString +\r\n            '\". Paths must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\r\n};\r\nvar validateRootPathString = function (fnName, argumentNumber, pathString, optional) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    validatePathString(fnName, argumentNumber, pathString, optional);\r\n};\r\nvar validateWritablePath = function (fnName, path) {\r\n    if (path.getFront() === '.info') {\r\n        throw new Error(fnName + \" failed = Can't modify data under /.info/\");\r\n    }\r\n};\r\nvar validateUrl = function (fnName, argumentNumber, parsedUrl) {\r\n    // TODO = Validate server better.\r\n    var pathString = parsedUrl.path.toString();\r\n    if (!(typeof parsedUrl.repoInfo.host === 'string') ||\r\n        parsedUrl.repoInfo.host.length === 0 ||\r\n        (!isValidKey(parsedUrl.repoInfo.namespace) &&\r\n            parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\r\n        (pathString.length !== 0 && !isValidRootPathString(pathString))) {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, false) +\r\n            'must be a valid firebase URL and ' +\r\n            'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\r\n    }\r\n};\r\nvar validateBoolean = function (fnName, argumentNumber, bool, optional) {\r\n    if (optional && bool === undefined)\r\n        return;\r\n    if (typeof bool !== 'boolean')\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) + 'must be a boolean.');\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n */\r\nvar OnDisconnect = /** @class */ (function () {\r\n    /**\r\n     * @param {!Repo} repo_\r\n     * @param {!Path} path_\r\n     */\r\n    function OnDisconnect(repo_, path_) {\r\n        this.repo_ = repo_;\r\n        this.path_ = path_;\r\n    }\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.cancel = function (onComplete) {\r\n        util.validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\r\n        util.validateCallback('OnDisconnect.cancel', 1, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectCancel(this.path_, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.remove = function (onComplete) {\r\n        util.validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\r\n        validateWritablePath('OnDisconnect.remove', this.path_);\r\n        util.validateCallback('OnDisconnect.remove', 1, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSet(this.path_, null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.set = function (value, onComplete) {\r\n        util.validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\r\n        validateWritablePath('OnDisconnect.set', this.path_);\r\n        validateFirebaseDataArg('OnDisconnect.set', 1, value, this.path_, false);\r\n        util.validateCallback('OnDisconnect.set', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSet(this.path_, value, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} value\r\n     * @param {number|string|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {\r\n        util.validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\r\n        validateWritablePath('OnDisconnect.setWithPriority', this.path_);\r\n        validateFirebaseDataArg('OnDisconnect.setWithPriority', 1, value, this.path_, false);\r\n        validatePriority('OnDisconnect.setWithPriority', 2, priority, false);\r\n        util.validateCallback('OnDisconnect.setWithPriority', 3, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSetWithPriority(this.path_, value, priority, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.update = function (objectToMerge, onComplete) {\r\n        util.validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\r\n        validateWritablePath('OnDisconnect.update', this.path_);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' +\r\n                'existing data, or an Object with integer keys if you really do want to only update some of the children.');\r\n        }\r\n        validateFirebaseMergeDataArg('OnDisconnect.update', 1, objectToMerge, this.path_, false);\r\n        util.validateCallback('OnDisconnect.update', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectUpdate(this.path_, objectToMerge, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    return OnDisconnect;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TransactionResult = /** @class */ (function () {\r\n    /**\r\n     * A type for the resolve value of Firebase.transaction.\r\n     * @constructor\r\n     * @dict\r\n     * @param {boolean} committed\r\n     * @param {DataSnapshot} snapshot\r\n     */\r\n    function TransactionResult(committed, snapshot) {\r\n        this.committed = committed;\r\n        this.snapshot = snapshot;\r\n    }\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    TransactionResult.prototype.toJSON = function () {\r\n        util.validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\r\n        return { committed: this.committed, snapshot: this.snapshot.toJSON() };\r\n    };\r\n    return TransactionResult;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\r\nvar nextPushId = (function () {\r\n    // Modeled after base64 web-safe chars, but ordered by ASCII.\r\n    var PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\r\n    // Timestamp of last push, used to prevent local collisions if you push twice\r\n    // in one ms.\r\n    var lastPushTime = 0;\r\n    // We generate 72-bits of randomness which get turned into 12 characters and\r\n    // appended to the timestamp to prevent collisions with other clients. We\r\n    // store the last characters we generated because in the event of a collision,\r\n    // we'll use those same characters except \"incremented\" by one.\r\n    var lastRandChars = [];\r\n    return function (now) {\r\n        var duplicateTime = now === lastPushTime;\r\n        lastPushTime = now;\r\n        var i;\r\n        var timeStampChars = new Array(8);\r\n        for (i = 7; i >= 0; i--) {\r\n            timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\r\n            // NOTE: Can't use << here because javascript will convert to int and lose\r\n            // the upper bits.\r\n            now = Math.floor(now / 64);\r\n        }\r\n        util.assert(now === 0, 'Cannot push at time == 0');\r\n        var id = timeStampChars.join('');\r\n        if (!duplicateTime) {\r\n            for (i = 0; i < 12; i++) {\r\n                lastRandChars[i] = Math.floor(Math.random() * 64);\r\n            }\r\n        }\r\n        else {\r\n            // If the timestamp hasn't changed since last push, use the same random\r\n            // number, except incremented by 1.\r\n            for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\r\n                lastRandChars[i] = 0;\r\n            }\r\n            lastRandChars[i]++;\r\n        }\r\n        for (i = 0; i < 12; i++) {\r\n            id += PUSH_CHARS.charAt(lastRandChars[i]);\r\n        }\r\n        util.assert(id.length === 20, 'nextPushId: Length should be 20.');\r\n        return id;\r\n    };\r\n})();\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @param {!string} name\r\n * @param {!Node} node\r\n * @constructor\r\n * @struct\r\n */\r\nvar NamedNode = /** @class */ (function () {\r\n    function NamedNode(name, node) {\r\n        this.name = name;\r\n        this.node = node;\r\n    }\r\n    /**\r\n     *\r\n     * @param {!string} name\r\n     * @param {!Node} node\r\n     * @return {NamedNode}\r\n     */\r\n    NamedNode.Wrap = function (name, node) {\r\n        return new NamedNode(name, node);\r\n    };\r\n    return NamedNode;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @constructor\r\n */\r\nvar Index = /** @class */ (function () {\r\n    function Index() {\r\n    }\r\n    /**\r\n     * @return {function(!NamedNode, !NamedNode):number} A standalone comparison function for\r\n     * this index\r\n     */\r\n    Index.prototype.getCompare = function () {\r\n        return this.compare.bind(this);\r\n    };\r\n    /**\r\n     * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n     * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n     *\r\n     * @param {!Node} oldNode\r\n     * @param {!Node} newNode\r\n     * @return {boolean} True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n     */\r\n    Index.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        var oldWrapped = new NamedNode(MIN_NAME, oldNode);\r\n        var newWrapped = new NamedNode(MIN_NAME, newNode);\r\n        return this.compare(oldWrapped, newWrapped) !== 0;\r\n    };\r\n    /**\r\n     * @return {!NamedNode} a node wrapper that will sort equal to or less than\r\n     * any other node wrapper, using this index\r\n     */\r\n    Index.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    return Index;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __EMPTY_NODE;\r\nvar KeyIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(KeyIndex, _super);\r\n    function KeyIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(KeyIndex, \"__EMPTY_NODE\", {\r\n        get: function () {\r\n            return __EMPTY_NODE;\r\n        },\r\n        set: function (val) {\r\n            __EMPTY_NODE = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.compare = function (a, b) {\r\n        return nameCompare(a.name, b.name);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.isDefinedOn = function (node) {\r\n        // We could probably return true here (since every node has a key), but it's never called\r\n        // so just leaving unimplemented for now.\r\n        throw util.assertionError('KeyIndex.isDefinedOn not expected to be called.');\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return false; // The key for a node never changes.\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.maxPost = function () {\r\n        // TODO: This should really be created once and cached in a static property, but\r\n        // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\r\n        return new NamedNode(MAX_NAME, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    KeyIndex.prototype.makePost = function (indexValue, name) {\r\n        util.assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.');\r\n        // We just use empty node, but it'll never be compared, since our comparator only looks at name.\r\n        return new NamedNode(indexValue, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    KeyIndex.prototype.toString = function () {\r\n        return '.key';\r\n    };\r\n    return KeyIndex;\r\n}(Index));\r\nvar KEY_INDEX = new KeyIndex();\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MAX_NODE;\r\nfunction setMaxNode(val) {\r\n    MAX_NODE = val;\r\n}\r\n/**\r\n * @param {(!string|!number)} priority\r\n * @return {!string}\r\n */\r\nvar priorityHashText = function (priority) {\r\n    if (typeof priority === 'number')\r\n        return 'number:' + doubleToIEEE754String(priority);\r\n    else\r\n        return 'string:' + priority;\r\n};\r\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n *\r\n * @param {!Node} priorityNode\r\n */\r\nvar validatePriorityNode = function (priorityNode) {\r\n    if (priorityNode.isLeafNode()) {\r\n        var val = priorityNode.val();\r\n        util.assert(typeof val === 'string' ||\r\n            typeof val === 'number' ||\r\n            (typeof val === 'object' && util.contains(val, '.sv')), 'Priority must be a string or number.');\r\n    }\r\n    else {\r\n        util.assert(priorityNode === MAX_NODE || priorityNode.isEmpty(), 'priority of unexpected type.');\r\n    }\r\n    // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\r\n    util.assert(priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __childrenNodeConstructor;\r\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\r\nvar LeafNode = /** @class */ (function () {\r\n    /**\r\n     * @implements {Node}\r\n     * @param {!(string|number|boolean|Object)} value_ The value to store in this leaf node.\r\n     *                                         The object type is possible in the event of a deferred value\r\n     * @param {!Node=} priorityNode_ The priority of this node.\r\n     */\r\n    function LeafNode(value_, priorityNode_) {\r\n        if (priorityNode_ === void 0) { priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE; }\r\n        this.value_ = value_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.lazyHash_ = null;\r\n        util.assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\r\n        validatePriorityNode(this.priorityNode_);\r\n    }\r\n    Object.defineProperty(LeafNode, \"__childrenNodeConstructor\", {\r\n        get: function () {\r\n            return __childrenNodeConstructor;\r\n        },\r\n        set: function (val) {\r\n            __childrenNodeConstructor = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isLeafNode = function () {\r\n        return true;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPriority = function () {\r\n        return this.priorityNode_;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updatePriority = function (newPriorityNode) {\r\n        return new LeafNode(this.value_, newPriorityNode);\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getChild = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this;\r\n        }\r\n        else if (path.getFront() === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.hasChild = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {\r\n        return null;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else if (newChildNode.isEmpty() && childName !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else if (newChildNode.isEmpty() && front !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            util.assert(front !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\r\n            return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(path.popFront(), newChildNode));\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.numChildren = function () {\r\n        return 0;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.forEachChild = function (index, action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.val = function (exportFormat) {\r\n        if (exportFormat && !this.getPriority().isEmpty())\r\n            return {\r\n                '.value': this.getValue(),\r\n                '.priority': this.getPriority().val()\r\n            };\r\n        else\r\n            return this.getValue();\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash = '';\r\n            if (!this.priorityNode_.isEmpty())\r\n                toHash +=\r\n                    'priority:' +\r\n                        priorityHashText(this.priorityNode_.val()) +\r\n                        ':';\r\n            var type = typeof this.value_;\r\n            toHash += type + ':';\r\n            if (type === 'number') {\r\n                toHash += doubleToIEEE754String(this.value_);\r\n            }\r\n            else {\r\n                toHash += this.value_;\r\n            }\r\n            this.lazyHash_ = sha1(toHash);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /**\r\n     * Returns the value of the leaf node.\r\n     * @return {Object|string|number|boolean} The value of the node.\r\n     */\r\n    LeafNode.prototype.getValue = function () {\r\n        return this.value_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.compareTo = function (other) {\r\n        if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\r\n            return 1;\r\n        }\r\n        else if (other instanceof LeafNode.__childrenNodeConstructor) {\r\n            return -1;\r\n        }\r\n        else {\r\n            util.assert(other.isLeafNode(), 'Unknown node type');\r\n            return this.compareToLeafNode_(other);\r\n        }\r\n    };\r\n    /**\r\n     * Comparison specifically for two leaf nodes\r\n     * @param {!LeafNode} otherLeaf\r\n     * @return {!number}\r\n     * @private\r\n     */\r\n    LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {\r\n        var otherLeafType = typeof otherLeaf.value_;\r\n        var thisLeafType = typeof this.value_;\r\n        var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\r\n        var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\r\n        util.assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\r\n        util.assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\r\n        if (otherIndex === thisIndex) {\r\n            // Same type, compare values\r\n            if (thisLeafType === 'object') {\r\n                // Deferred value nodes are all equal, but we should also never get to this point...\r\n                return 0;\r\n            }\r\n            else {\r\n                // Note that this works because true > false, all others are number or string comparisons\r\n                if (this.value_ < otherLeaf.value_) {\r\n                    return -1;\r\n                }\r\n                else if (this.value_ === otherLeaf.value_) {\r\n                    return 0;\r\n                }\r\n                else {\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return thisIndex - otherIndex;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.withIndex = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.isIndexed = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.equals = function (other) {\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            var otherLeaf = other;\r\n            return (this.value_ === otherLeaf.value_ &&\r\n                this.priorityNode_.equals(otherLeaf.priorityNode_));\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n     * the same type, the comparison falls back to their value\r\n     * @type {Array.<!string>}\r\n     * @const\r\n     */\r\n    LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\r\n    return LeafNode;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar nodeFromJSON;\r\nvar MAX_NODE$1;\r\nfunction setNodeFromJSON(val) {\r\n    nodeFromJSON = val;\r\n}\r\nfunction setMaxNode$1(val) {\r\n    MAX_NODE$1 = val;\r\n}\r\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\r\nvar PriorityIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PriorityIndex, _super);\r\n    function PriorityIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.compare = function (a, b) {\r\n        var aPriority = a.node.getPriority();\r\n        var bPriority = b.node.getPriority();\r\n        var indexCmp = aPriority.compareTo(bPriority);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getPriority().isEmpty();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.getPriority().equals(newNode.getPriority());\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.maxPost = function () {\r\n        return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    PriorityIndex.prototype.makePost = function (indexValue, name) {\r\n        var priorityNode = nodeFromJSON(indexValue);\r\n        return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    PriorityIndex.prototype.toString = function () {\r\n        return '.priority';\r\n    };\r\n    return PriorityIndex;\r\n}(Index));\r\nvar PRIORITY_INDEX = new PriorityIndex();\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An iterator over an LLRBNode.\r\n */\r\nvar SortedMapIterator = /** @class */ (function () {\r\n    /**\r\n     * @template K, V, T\r\n     * @param {LLRBNode|LLRBEmptyNode} node Node to iterate.\r\n     * @param {?K} startKey\r\n     * @param {function(K, K): number} comparator\r\n     * @param {boolean} isReverse_ Whether or not to iterate in reverse\r\n     * @param {(function(K, V):T)=} resultGenerator_\r\n     */\r\n    function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {\r\n        if (resultGenerator_ === void 0) { resultGenerator_ = null; }\r\n        this.isReverse_ = isReverse_;\r\n        this.resultGenerator_ = resultGenerator_;\r\n        /** @private\r\n         * @type {Array.<!LLRBNode>}\r\n         */\r\n        this.nodeStack_ = [];\r\n        var cmp = 1;\r\n        while (!node.isEmpty()) {\r\n            node = node;\r\n            cmp = startKey ? comparator(node.key, startKey) : 1;\r\n            // flip the comparison if we're going in reverse\r\n            if (isReverse_)\r\n                cmp *= -1;\r\n            if (cmp < 0) {\r\n                // This node is less than our start key. ignore it\r\n                if (this.isReverse_) {\r\n                    node = node.left;\r\n                }\r\n                else {\r\n                    node = node.right;\r\n                }\r\n            }\r\n            else if (cmp === 0) {\r\n                // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\r\n                this.nodeStack_.push(node);\r\n                break;\r\n            }\r\n            else {\r\n                // This node is greater than our start key, add it to the stack and move to the next one\r\n                this.nodeStack_.push(node);\r\n                if (this.isReverse_) {\r\n                    node = node.right;\r\n                }\r\n                else {\r\n                    node = node.left;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SortedMapIterator.prototype.getNext = function () {\r\n        if (this.nodeStack_.length === 0)\r\n            return null;\r\n        var node = this.nodeStack_.pop();\r\n        var result;\r\n        if (this.resultGenerator_)\r\n            result = this.resultGenerator_(node.key, node.value);\r\n        else\r\n            result = { key: node.key, value: node.value };\r\n        if (this.isReverse_) {\r\n            node = node.left;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.right;\r\n            }\r\n        }\r\n        else {\r\n            node = node.right;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.left;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    SortedMapIterator.prototype.hasNext = function () {\r\n        return this.nodeStack_.length > 0;\r\n    };\r\n    SortedMapIterator.prototype.peek = function () {\r\n        if (this.nodeStack_.length === 0)\r\n            return null;\r\n        var node = this.nodeStack_[this.nodeStack_.length - 1];\r\n        if (this.resultGenerator_) {\r\n            return this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            return { key: node.key, value: node.value };\r\n        }\r\n    };\r\n    return SortedMapIterator;\r\n}());\r\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\r\nvar LLRBNode = /** @class */ (function () {\r\n    /**\r\n     * @template K, V\r\n     * @param {!K} key Key associated with this node.\r\n     * @param {!V} value Value associated with this node.\r\n     * @param {?boolean} color Whether this node is red.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} left Left child.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} right Right child.\r\n     */\r\n    function LLRBNode(key, value, color, left, right) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.color = color != null ? color : LLRBNode.RED;\r\n        this.left =\r\n            left != null ? left : SortedMap.EMPTY_NODE;\r\n        this.right =\r\n            right != null ? right : SortedMap.EMPTY_NODE;\r\n    }\r\n    /**\r\n     * Returns a copy of the current node, optionally replacing pieces of it.\r\n     *\r\n     * @param {?K} key New key for the node, or null.\r\n     * @param {?V} value New value for the node, or null.\r\n     * @param {?boolean} color New color for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} left New left child for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} right New right child for the node, or null.\r\n     * @return {!LLRBNode} The node copy.\r\n     */\r\n    LLRBNode.prototype.copy = function (key, value, color, left, right) {\r\n        return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */\r\n    LLRBNode.prototype.count = function () {\r\n        return this.left.count() + 1 + this.right.count();\r\n    };\r\n    /**\r\n     * @return {boolean} True if the tree is empty.\r\n     */\r\n    LLRBNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     *   node.  If it returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    LLRBNode.prototype.inorderTraversal = function (action) {\r\n        return (this.left.inorderTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.right.inorderTraversal(action));\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {*} True if traversal was aborted.\r\n     */\r\n    LLRBNode.prototype.reverseTraversal = function (action) {\r\n        return (this.right.reverseTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.left.reverseTraversal(action));\r\n    };\r\n    /**\r\n     * @return {!Object} The minimum node in the tree.\r\n     * @private\r\n     */\r\n    LLRBNode.prototype.min_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            return this.left.min_();\r\n        }\r\n    };\r\n    /**\r\n     * @return {!K} The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.minKey = function () {\r\n        return this.min_().key;\r\n    };\r\n    /**\r\n     * @return {!K} The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.maxKey = function () {\r\n        if (this.right.isEmpty()) {\r\n            return this.key;\r\n        }\r\n        else {\r\n            return this.right.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Object} key Key to insert.\r\n     * @param {!Object} value Value to insert.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with the key/value added.\r\n     */\r\n    LLRBNode.prototype.insert = function (key, value, comparator) {\r\n        var cmp, n;\r\n        n = this;\r\n        cmp = comparator(key, n.key);\r\n        if (cmp < 0) {\r\n            n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\r\n        }\r\n        else if (cmp === 0) {\r\n            n = n.copy(null, value, null, null, null);\r\n        }\r\n        else {\r\n            n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the minimum key removed.\r\n     */\r\n    LLRBNode.prototype.removeMin_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return SortedMap.EMPTY_NODE;\r\n        }\r\n        var n = this;\r\n        if (!n.left.isRed_() && !n.left.left.isRed_())\r\n            n = n.moveRedLeft_();\r\n        n = n.copy(null, null, null, n.left.removeMin_(), null);\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @param {!Object} key The key of the item to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the specified item removed.\r\n     */\r\n    LLRBNode.prototype.remove = function (key, comparator) {\r\n        var n, smallest;\r\n        n = this;\r\n        if (comparator(key, n.key) < 0) {\r\n            if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\r\n                n = n.moveRedLeft_();\r\n            }\r\n            n = n.copy(null, null, null, n.left.remove(key, comparator), null);\r\n        }\r\n        else {\r\n            if (n.left.isRed_())\r\n                n = n.rotateRight_();\r\n            if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\r\n                n = n.moveRedRight_();\r\n            }\r\n            if (comparator(key, n.key) === 0) {\r\n                if (n.right.isEmpty()) {\r\n                    return SortedMap.EMPTY_NODE;\r\n                }\r\n                else {\r\n                    smallest = n.right.min_();\r\n                    n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\r\n                }\r\n            }\r\n            n = n.copy(null, null, null, null, n.right.remove(key, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {boolean} Whether this is a RED node.\r\n     */\r\n    LLRBNode.prototype.isRed_ = function () {\r\n        return this.color;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree after performing any needed rotations.\r\n     */\r\n    LLRBNode.prototype.fixUp_ = function () {\r\n        var n = this;\r\n        if (n.right.isRed_() && !n.left.isRed_())\r\n            n = n.rotateLeft_();\r\n        if (n.left.isRed_() && n.left.left.isRed_())\r\n            n = n.rotateRight_();\r\n        if (n.left.isRed_() && n.right.isRed_())\r\n            n = n.colorFlip_();\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedLeft.\r\n     */\r\n    LLRBNode.prototype.moveRedLeft_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.right.left.isRed_()) {\r\n            n = n.copy(null, null, null, null, n.right.rotateRight_());\r\n            n = n.rotateLeft_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedRight.\r\n     */\r\n    LLRBNode.prototype.moveRedRight_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateLeft.\r\n     */\r\n    LLRBNode.prototype.rotateLeft_ = function () {\r\n        var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\r\n        return this.right.copy(null, null, this.color, nl, null);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateRight.\r\n     */\r\n    LLRBNode.prototype.rotateRight_ = function () {\r\n        var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\r\n        return this.left.copy(null, null, this.color, null, nr);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after colorFlip.\r\n     */\r\n    LLRBNode.prototype.colorFlip_ = function () {\r\n        var left = this.left.copy(null, null, !this.left.color, null, null);\r\n        var right = this.right.copy(null, null, !this.right.color, null, null);\r\n        return this.copy(null, null, !this.color, left, right);\r\n    };\r\n    /**\r\n     * For testing.\r\n     *\r\n     * @private\r\n     * @return {boolean} True if all is well.\r\n     */\r\n    LLRBNode.prototype.checkMaxDepth_ = function () {\r\n        var blackDepth = this.check_();\r\n        return Math.pow(2.0, blackDepth) <= this.count() + 1;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */\r\n    LLRBNode.prototype.check_ = function () {\r\n        var blackDepth;\r\n        if (this.isRed_() && this.left.isRed_()) {\r\n            throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\r\n        }\r\n        if (this.right.isRed_()) {\r\n            throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\r\n        }\r\n        blackDepth = this.left.check_();\r\n        if (blackDepth !== this.right.check_()) {\r\n            throw new Error('Black depths differ');\r\n        }\r\n        else {\r\n            return blackDepth + (this.isRed_() ? 0 : 1);\r\n        }\r\n    };\r\n    LLRBNode.RED = true;\r\n    LLRBNode.BLACK = false;\r\n    return LLRBNode;\r\n}());\r\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\r\nvar LLRBEmptyNode = /** @class */ (function () {\r\n    function LLRBEmptyNode() {\r\n    }\r\n    /**\r\n     * Returns a copy of the current node.\r\n     *\r\n     * @return {!LLRBEmptyNode} The node copy.\r\n     */\r\n    LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key/value added.\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with item added.\r\n     */\r\n    LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\r\n        return new LLRBNode(key, value, null);\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBEmptyNode} New tree, with item removed.\r\n     */\r\n    LLRBEmptyNode.prototype.remove = function (key, comparator) {\r\n        return this;\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */\r\n    LLRBEmptyNode.prototype.count = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @return {boolean} True if the tree is empty.\r\n     */\r\n    LLRBEmptyNode.prototype.isEmpty = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.inorderTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.reverseTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * @return {null}\r\n     */\r\n    LLRBEmptyNode.prototype.minKey = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {null}\r\n     */\r\n    LLRBEmptyNode.prototype.maxKey = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */\r\n    LLRBEmptyNode.prototype.check_ = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {boolean} Whether this node is red.\r\n     */\r\n    LLRBEmptyNode.prototype.isRed_ = function () {\r\n        return false;\r\n    };\r\n    return LLRBEmptyNode;\r\n}());\r\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\r\nvar SortedMap = /** @class */ (function () {\r\n    /**\r\n     * @template K, V\r\n     * @param {function(K, K):number} comparator_ Key comparator.\r\n     * @param {LLRBNode=} root_ (Optional) Root node for the map.\r\n     */\r\n    function SortedMap(comparator_, root_) {\r\n        if (root_ === void 0) { root_ = SortedMap.EMPTY_NODE; }\r\n        this.comparator_ = comparator_;\r\n        this.root_ = root_;\r\n    }\r\n    /**\r\n     * Returns a copy of the map, with the specified key/value added or replaced.\r\n     * (TODO: We should perhaps rename this method to 'put')\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @return {!SortedMap.<K, V>} New map, with item added.\r\n     */\r\n    SortedMap.prototype.insert = function (key, value) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .insert(key, value, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns a copy of the map, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @return {!SortedMap.<K, V>} New map, with item removed.\r\n     */\r\n    SortedMap.prototype.remove = function (key) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .remove(key, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns the value of the node with the given key, or null.\r\n     *\r\n     * @param {!K} key The key to look up.\r\n     * @return {?V} The value of the node with the given key, or null if the\r\n     * key doesn't exist.\r\n     */\r\n    SortedMap.prototype.get = function (key) {\r\n        var cmp;\r\n        var node = this.root_;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                return node.value;\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                node = node.right;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n     * @param {K} key The key to find the predecessor of\r\n     * @return {?K} The predecessor key.\r\n     */\r\n    SortedMap.prototype.getPredecessorKey = function (key) {\r\n        var cmp, node = this.root_, rightParent = null;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                if (!node.left.isEmpty()) {\r\n                    node = node.left;\r\n                    while (!node.right.isEmpty())\r\n                        node = node.right;\r\n                    return node.key;\r\n                }\r\n                else if (rightParent) {\r\n                    return rightParent.key;\r\n                }\r\n                else {\r\n                    return null; // first item.\r\n                }\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                rightParent = node;\r\n                node = node.right;\r\n            }\r\n        }\r\n        throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\r\n    };\r\n    /**\r\n     * @return {boolean} True if the map is empty.\r\n     */\r\n    SortedMap.prototype.isEmpty = function () {\r\n        return this.root_.isEmpty();\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the map.\r\n     */\r\n    SortedMap.prototype.count = function () {\r\n        return this.root_.count();\r\n    };\r\n    /**\r\n     * @return {?K} The minimum key in the map.\r\n     */\r\n    SortedMap.prototype.minKey = function () {\r\n        return this.root_.minKey();\r\n    };\r\n    /**\r\n     * @return {?K} The maximum key in the map.\r\n     */\r\n    SortedMap.prototype.maxKey = function () {\r\n        return this.root_.maxKey();\r\n    };\r\n    /**\r\n     * Traverses the map in key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    SortedMap.prototype.inorderTraversal = function (action) {\r\n        return this.root_.inorderTraversal(action);\r\n    };\r\n    /**\r\n     * Traverses the map in reverse key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} True if the traversal was aborted.\r\n     */\r\n    SortedMap.prototype.reverseTraversal = function (action) {\r\n        return this.root_.reverseTraversal(action);\r\n    };\r\n    /**\r\n     * Returns an iterator over the SortedMap.\r\n     * @template T\r\n     * @param {(function(K, V):T)=} resultGenerator\r\n     * @return {SortedMapIterator.<K, V, T>} The iterator.\r\n     */\r\n    SortedMap.prototype.getIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\r\n    };\r\n    /**\r\n     * Always use the same empty node, to reduce memory.\r\n     * @const\r\n     */\r\n    SortedMap.EMPTY_NODE = new LLRBEmptyNode();\r\n    return SortedMap;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LOG_2 = Math.log(2);\r\n/**\r\n * @constructor\r\n */\r\nvar Base12Num = /** @class */ (function () {\r\n    /**\r\n     * @param {number} length\r\n     */\r\n    function Base12Num(length) {\r\n        var logBase2 = function (num) {\r\n            return parseInt((Math.log(num) / LOG_2), 10);\r\n        };\r\n        var bitMask = function (bits) { return parseInt(Array(bits + 1).join('1'), 2); };\r\n        this.count = logBase2(length + 1);\r\n        this.current_ = this.count - 1;\r\n        var mask = bitMask(this.count);\r\n        this.bits_ = (length + 1) & mask;\r\n    }\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    Base12Num.prototype.nextBitIsOne = function () {\r\n        //noinspection JSBitwiseOperatorUsage\r\n        var result = !(this.bits_ & (0x1 << this.current_));\r\n        this.current_--;\r\n        return result;\r\n    };\r\n    return Base12Num;\r\n}());\r\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @template K, V\r\n * @param {Array.<!NamedNode>} childList Unsorted list of children\r\n * @param {function(!NamedNode, !NamedNode):number} cmp The comparison method to be used\r\n * @param {(function(NamedNode):K)=} keyFn An optional function to extract K from a node wrapper, if K's\r\n *                                                        type is not NamedNode\r\n * @param {(function(K, K):number)=} mapSortFn An optional override for comparator used by the generated sorted map\r\n * @return {SortedMap.<K, V>}\r\n */\r\nvar buildChildSet = function (childList, cmp, keyFn, mapSortFn) {\r\n    childList.sort(cmp);\r\n    var buildBalancedTree = function (low, high) {\r\n        var length = high - low;\r\n        var namedNode;\r\n        var key;\r\n        if (length == 0) {\r\n            return null;\r\n        }\r\n        else if (length == 1) {\r\n            namedNode = childList[low];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\r\n        }\r\n        else {\r\n            var middle = parseInt((length / 2), 10) + low;\r\n            var left = buildBalancedTree(low, middle);\r\n            var right = buildBalancedTree(middle + 1, high);\r\n            namedNode = childList[middle];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\r\n        }\r\n    };\r\n    var buildFrom12Array = function (base12) {\r\n        var node = null;\r\n        var root = null;\r\n        var index = childList.length;\r\n        var buildPennant = function (chunkSize, color) {\r\n            var low = index - chunkSize;\r\n            var high = index;\r\n            index -= chunkSize;\r\n            var childTree = buildBalancedTree(low + 1, high);\r\n            var namedNode = childList[low];\r\n            var key = keyFn ? keyFn(namedNode) : namedNode;\r\n            attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\r\n        };\r\n        var attachPennant = function (pennant) {\r\n            if (node) {\r\n                node.left = pennant;\r\n                node = pennant;\r\n            }\r\n            else {\r\n                root = pennant;\r\n                node = pennant;\r\n            }\r\n        };\r\n        for (var i = 0; i < base12.count; ++i) {\r\n            var isOne = base12.nextBitIsOne();\r\n            // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\r\n            var chunkSize = Math.pow(2, base12.count - (i + 1));\r\n            if (isOne) {\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n            }\r\n            else {\r\n                // current == 2\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n                buildPennant(chunkSize, LLRBNode.RED);\r\n            }\r\n        }\r\n        return root;\r\n    };\r\n    var base12 = new Base12Num(childList.length);\r\n    var root = buildFrom12Array(base12);\r\n    return new SortedMap(mapSortFn || cmp, root);\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _defaultIndexMap;\r\nvar fallbackObject = {};\r\n/**\r\n *\r\n * @param {Object.<string, FallbackType|SortedMap.<NamedNode, Node>>} indexes\r\n * @param {Object.<string, Index>} indexSet\r\n * @constructor\r\n */\r\nvar IndexMap = /** @class */ (function () {\r\n    function IndexMap(indexes_, indexSet_) {\r\n        this.indexes_ = indexes_;\r\n        this.indexSet_ = indexSet_;\r\n    }\r\n    Object.defineProperty(IndexMap, \"Default\", {\r\n        /**\r\n         * The default IndexMap for nodes without a priority\r\n         * @type {!IndexMap}\r\n         * @const\r\n         */\r\n        get: function () {\r\n            util.assert(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\r\n            _defaultIndexMap =\r\n                _defaultIndexMap ||\r\n                    new IndexMap({ '.priority': fallbackObject }, { '.priority': PRIORITY_INDEX });\r\n            return _defaultIndexMap;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     * @param {!string} indexKey\r\n     * @return {?SortedMap.<NamedNode, Node>}\r\n     */\r\n    IndexMap.prototype.get = function (indexKey) {\r\n        var sortedMap = util.safeGet(this.indexes_, indexKey);\r\n        if (!sortedMap)\r\n            throw new Error('No index defined for ' + indexKey);\r\n        if (sortedMap === fallbackObject) {\r\n            // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\r\n            // regular child map\r\n            return null;\r\n        }\r\n        else {\r\n            return sortedMap;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {boolean}\r\n     */\r\n    IndexMap.prototype.hasIndex = function (indexDefinition) {\r\n        return util.contains(this.indexSet_, indexDefinition.toString());\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @param {!SortedMap.<string, !Node>} existingChildren\r\n     * @return {!IndexMap}\r\n     */\r\n    IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {\r\n        util.assert(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\r\n        var childList = [];\r\n        var sawIndexedValue = false;\r\n        var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n        var next = iter.getNext();\r\n        while (next) {\r\n            sawIndexedValue =\r\n                sawIndexedValue || indexDefinition.isDefinedOn(next.node);\r\n            childList.push(next);\r\n            next = iter.getNext();\r\n        }\r\n        var newIndex;\r\n        if (sawIndexedValue) {\r\n            newIndex = buildChildSet(childList, indexDefinition.getCompare());\r\n        }\r\n        else {\r\n            newIndex = fallbackObject;\r\n        }\r\n        var indexName = indexDefinition.toString();\r\n        var newIndexSet = util.clone(this.indexSet_);\r\n        newIndexSet[indexName] = indexDefinition;\r\n        var newIndexes = util.clone(this.indexes_);\r\n        newIndexes[indexName] = newIndex;\r\n        return new IndexMap(newIndexes, newIndexSet);\r\n    };\r\n    /**\r\n     * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n     * @param {!NamedNode} namedNode\r\n     * @param {!SortedMap.<string, !Node>} existingChildren\r\n     * @return {!IndexMap}\r\n     */\r\n    IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {\r\n        var _this = this;\r\n        var newIndexes = util.map(this.indexes_, function (indexedChildren, indexName) {\r\n            var index = util.safeGet(_this.indexSet_, indexName);\r\n            util.assert(index, 'Missing index implementation for ' + indexName);\r\n            if (indexedChildren === fallbackObject) {\r\n                // Check to see if we need to index everything\r\n                if (index.isDefinedOn(namedNode.node)) {\r\n                    // We need to build this index\r\n                    var childList = [];\r\n                    var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n                    var next = iter.getNext();\r\n                    while (next) {\r\n                        if (next.name != namedNode.name) {\r\n                            childList.push(next);\r\n                        }\r\n                        next = iter.getNext();\r\n                    }\r\n                    childList.push(namedNode);\r\n                    return buildChildSet(childList, index.getCompare());\r\n                }\r\n                else {\r\n                    // No change, this remains a fallback\r\n                    return fallbackObject;\r\n                }\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                var newChildren = indexedChildren;\r\n                if (existingSnap) {\r\n                    newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                return newChildren.insert(namedNode, namedNode.node);\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    /**\r\n     * Create a new IndexMap instance with the given value removed\r\n     * @param {!NamedNode} namedNode\r\n     * @param {!SortedMap.<string, !Node>} existingChildren\r\n     * @return {!IndexMap}\r\n     */\r\n    IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {\r\n        var newIndexes = util.map(this.indexes_, function (indexedChildren) {\r\n            if (indexedChildren === fallbackObject) {\r\n                // This is the fallback. Just return it, nothing to do in this case\r\n                return indexedChildren;\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                if (existingSnap) {\r\n                    return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                else {\r\n                    // No record of this child\r\n                    return indexedChildren;\r\n                }\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    return IndexMap;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction NAME_ONLY_COMPARATOR(left, right) {\r\n    return nameCompare(left.name, right.name);\r\n}\r\nfunction NAME_COMPARATOR(left, right) {\r\n    return nameCompare(left, right);\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\r\nvar EMPTY_NODE;\r\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n *\r\n * @constructor\r\n * @implements {Node}\r\n */\r\nvar ChildrenNode = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!SortedMap.<string, !Node>} children_ List of children\r\n     * of this node..\r\n     * @param {?Node} priorityNode_ The priority of this node (as a snapshot node).\r\n     * @param {!IndexMap} indexMap_\r\n     */\r\n    function ChildrenNode(children_, priorityNode_, indexMap_) {\r\n        this.children_ = children_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.indexMap_ = indexMap_;\r\n        this.lazyHash_ = null;\r\n        /**\r\n         * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n         * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n         * class instead of an empty ChildrenNode.\r\n         */\r\n        if (this.priorityNode_) {\r\n            validatePriorityNode(this.priorityNode_);\r\n        }\r\n        if (this.children_.isEmpty()) {\r\n            util.assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\r\n        }\r\n    }\r\n    Object.defineProperty(ChildrenNode, \"EMPTY_NODE\", {\r\n        get: function () {\r\n            return (EMPTY_NODE ||\r\n                (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default)));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isLeafNode = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPriority = function () {\r\n        return this.priorityNode_ || EMPTY_NODE;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updatePriority = function (newPriorityNode) {\r\n        if (this.children_.isEmpty()) {\r\n            // Don't allow priorities on empty nodes\r\n            return this;\r\n        }\r\n        else {\r\n            return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.getPriority();\r\n        }\r\n        else {\r\n            var child = this.children_.get(childName);\r\n            return child === null ? EMPTY_NODE : child;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getChild = function (path) {\r\n        var front = path.getFront();\r\n        if (front === null)\r\n            return this;\r\n        return this.getImmediateChild(front).getChild(path.popFront());\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hasChild = function (childName) {\r\n        return this.children_.get(childName) !== null;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        util.assert(newChildNode, 'We should always be passing snapshot nodes');\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else {\r\n            var namedNode = new NamedNode(childName, newChildNode);\r\n            var newChildren = void 0, newIndexMap = void 0, newPriority = void 0;\r\n            if (newChildNode.isEmpty()) {\r\n                newChildren = this.children_.remove(childName);\r\n                newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\r\n            }\r\n            else {\r\n                newChildren = this.children_.insert(childName, newChildNode);\r\n                newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\r\n            }\r\n            newPriority = newChildren.isEmpty() ? EMPTY_NODE : this.priorityNode_;\r\n            return new ChildrenNode(newChildren, newPriority, newIndexMap);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else {\r\n            util.assert(path.getFront() !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\r\n            var newImmediateChild = this.getImmediateChild(front).updateChild(path.popFront(), newChildNode);\r\n            return this.updateImmediateChild(front, newImmediateChild);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isEmpty = function () {\r\n        return this.children_.isEmpty();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.numChildren = function () {\r\n        return this.children_.count();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.val = function (exportFormat) {\r\n        if (this.isEmpty())\r\n            return null;\r\n        var obj = {};\r\n        var numKeys = 0, maxKey = 0, allIntegerKeys = true;\r\n        this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            obj[key] = childNode.val(exportFormat);\r\n            numKeys++;\r\n            if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\r\n                maxKey = Math.max(maxKey, Number(key));\r\n            }\r\n            else {\r\n                allIntegerKeys = false;\r\n            }\r\n        });\r\n        if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\r\n            // convert to array.\r\n            var array = [];\r\n            for (var key in obj)\r\n                array[key] = obj[key];\r\n            return array;\r\n        }\r\n        else {\r\n            if (exportFormat && !this.getPriority().isEmpty()) {\r\n                obj['.priority'] = this.getPriority().val();\r\n            }\r\n            return obj;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash_1 = '';\r\n            if (!this.getPriority().isEmpty())\r\n                toHash_1 +=\r\n                    'priority:' +\r\n                        priorityHashText(this.getPriority().val()) +\r\n                        ':';\r\n            this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                var childHash = childNode.hash();\r\n                if (childHash !== '')\r\n                    toHash_1 += ':' + key + ':' + childHash;\r\n            });\r\n            this.lazyHash_ = toHash_1 === '' ? '' : sha1(toHash_1);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            var predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\r\n            return predecessor ? predecessor.name : null;\r\n        }\r\n        else {\r\n            return this.children_.getPredecessorKey(childName);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */\r\n    ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var minKey = idx.minKey();\r\n            return minKey && minKey.name;\r\n        }\r\n        else {\r\n            return this.children_.minKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */\r\n    ChildrenNode.prototype.getFirstChild = function (indexDefinition) {\r\n        var minKey = this.getFirstChildName(indexDefinition);\r\n        if (minKey) {\r\n            return new NamedNode(minKey, this.children_.get(minKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Given an index, return the key name of the largest value we have, according to that index\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */\r\n    ChildrenNode.prototype.getLastChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var maxKey = idx.maxKey();\r\n            return maxKey && maxKey.name;\r\n        }\r\n        else {\r\n            return this.children_.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */\r\n    ChildrenNode.prototype.getLastChild = function (indexDefinition) {\r\n        var maxKey = this.getLastChildName(indexDefinition);\r\n        if (maxKey) {\r\n            return new NamedNode(maxKey, this.children_.get(maxKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.forEachChild = function (index, action) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            return idx.inorderTraversal(function (wrappedNode) {\r\n                return action(wrappedNode.name, wrappedNode.node);\r\n            });\r\n        }\r\n        else {\r\n            return this.children_.inorderTraversal(action);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getIterator = function (indexDefinition) {\r\n        return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\r\n    };\r\n    /**\r\n     *\r\n     * @param {!NamedNode} startPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getIteratorFrom(startPost, function (key) { return key; });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, startPost) < 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {\r\n        return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\r\n    };\r\n    /**\r\n     * @param {!NamedNode} endPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getReverseIteratorFrom(endPost, function (key) {\r\n                return key;\r\n            });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, endPost) > 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.compareTo = function (other) {\r\n        if (this.isEmpty()) {\r\n            if (other.isEmpty()) {\r\n                return 0;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (other.isLeafNode() || other.isEmpty()) {\r\n            return 1;\r\n        }\r\n        else if (other === MAX_NODE$2) {\r\n            return -1;\r\n        }\r\n        else {\r\n            // Must be another node with children.\r\n            return 0;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.withIndex = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX ||\r\n            this.indexMap_.hasIndex(indexDefinition)) {\r\n            return this;\r\n        }\r\n        else {\r\n            var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\r\n            return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.isIndexed = function (index) {\r\n        return index === KEY_INDEX || this.indexMap_.hasIndex(index);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.equals = function (other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            var otherChildrenNode = other;\r\n            if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\r\n                return false;\r\n            }\r\n            else if (this.children_.count() === otherChildrenNode.children_.count()) {\r\n                var thisIter = this.getIterator(PRIORITY_INDEX);\r\n                var otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\r\n                var thisCurrent = thisIter.getNext();\r\n                var otherCurrent = otherIter.getNext();\r\n                while (thisCurrent && otherCurrent) {\r\n                    if (thisCurrent.name !== otherCurrent.name ||\r\n                        !thisCurrent.node.equals(otherCurrent.node)) {\r\n                        return false;\r\n                    }\r\n                    thisCurrent = thisIter.getNext();\r\n                    otherCurrent = otherIter.getNext();\r\n                }\r\n                return thisCurrent === null && otherCurrent === null;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n     * instead.\r\n     *\r\n     * @private\r\n     * @param {!Index} indexDefinition\r\n     * @return {?SortedMap.<NamedNode, Node>}\r\n     */\r\n    ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX) {\r\n            return null;\r\n        }\r\n        else {\r\n            return this.indexMap_.get(indexDefinition.toString());\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @type {RegExp}\r\n     */\r\n    ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\r\n    return ChildrenNode;\r\n}());\r\n/**\r\n * @constructor\r\n * @extends {ChildrenNode}\r\n * @private\r\n */\r\nvar MaxNode = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MaxNode, _super);\r\n    function MaxNode() {\r\n        return _super.call(this, new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default) || this;\r\n    }\r\n    MaxNode.prototype.compareTo = function (other) {\r\n        if (other === this) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return 1;\r\n        }\r\n    };\r\n    MaxNode.prototype.equals = function (other) {\r\n        // Not that we every compare it, but MAX_NODE is only ever equal to itself\r\n        return other === this;\r\n    };\r\n    MaxNode.prototype.getPriority = function () {\r\n        return this;\r\n    };\r\n    MaxNode.prototype.getImmediateChild = function (childName) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    };\r\n    MaxNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    return MaxNode;\r\n}(ChildrenNode));\r\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n * @type {!MAX_NODE}\r\n * @const\r\n */\r\nvar MAX_NODE$2 = new MaxNode();\r\nObject.defineProperties(NamedNode, {\r\n    MIN: {\r\n        value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\r\n    },\r\n    MAX: {\r\n        value: new NamedNode(MAX_NAME, MAX_NODE$2)\r\n    }\r\n});\r\n/**\r\n * Reference Extensions\r\n */\r\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\r\nLeafNode.__childrenNodeConstructor = ChildrenNode;\r\nsetMaxNode(MAX_NODE$2);\r\nsetMaxNode$1(MAX_NODE$2);\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar USE_HINZE = true;\r\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param {*} json JSON to create a node for.\r\n * @param {?string|?number=} priority Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n * @return {!Node}\r\n */\r\nfunction nodeFromJSON$1(json, priority) {\r\n    if (priority === void 0) { priority = null; }\r\n    if (json === null) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    }\r\n    if (typeof json === 'object' && '.priority' in json) {\r\n        priority = json['.priority'];\r\n    }\r\n    util.assert(priority === null ||\r\n        typeof priority === 'string' ||\r\n        typeof priority === 'number' ||\r\n        (typeof priority === 'object' && '.sv' in priority), 'Invalid priority type found: ' + typeof priority);\r\n    if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\r\n        json = json['.value'];\r\n    }\r\n    // Valid leaf nodes include non-objects or server-value wrapper objects\r\n    if (typeof json !== 'object' || '.sv' in json) {\r\n        var jsonLeaf = json;\r\n        return new LeafNode(jsonLeaf, nodeFromJSON$1(priority));\r\n    }\r\n    if (!(json instanceof Array) && USE_HINZE) {\r\n        var children_1 = [];\r\n        var childrenHavePriority_1 = false;\r\n        var hinzeJsonObj_1 = json;\r\n        util.forEach(hinzeJsonObj_1, function (key, child) {\r\n            if (typeof key !== 'string' || key.substring(0, 1) !== '.') {\r\n                // Ignore metadata nodes\r\n                var childNode = nodeFromJSON$1(hinzeJsonObj_1[key]);\r\n                if (!childNode.isEmpty()) {\r\n                    childrenHavePriority_1 =\r\n                        childrenHavePriority_1 || !childNode.getPriority().isEmpty();\r\n                    children_1.push(new NamedNode(key, childNode));\r\n                }\r\n            }\r\n        });\r\n        if (children_1.length == 0) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var childSet = buildChildSet(children_1, NAME_ONLY_COMPARATOR, function (namedNode) { return namedNode.name; }, NAME_COMPARATOR);\r\n        if (childrenHavePriority_1) {\r\n            var sortedChildSet = buildChildSet(children_1, PRIORITY_INDEX.getCompare());\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), new IndexMap({ '.priority': sortedChildSet }, { '.priority': PRIORITY_INDEX }));\r\n        }\r\n        else {\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), IndexMap.Default);\r\n        }\r\n    }\r\n    else {\r\n        var node_1 = ChildrenNode.EMPTY_NODE;\r\n        var jsonObj_1 = json;\r\n        util.forEach(jsonObj_1, function (key, childData) {\r\n            if (util.contains(jsonObj_1, key)) {\r\n                if (key.substring(0, 1) !== '.') {\r\n                    // ignore metadata nodes.\r\n                    var childNode = nodeFromJSON$1(childData);\r\n                    if (childNode.isLeafNode() || !childNode.isEmpty())\r\n                        node_1 = node_1.updateImmediateChild(key, childNode);\r\n                }\r\n            }\r\n        });\r\n        return node_1.updatePriority(nodeFromJSON$1(priority));\r\n    }\r\n}\r\nsetNodeFromJSON(nodeFromJSON$1);\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\r\nvar ValueIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ValueIndex, _super);\r\n    function ValueIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.compare = function (a, b) {\r\n        var indexCmp = a.node.compareTo(b.node);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.isDefinedOn = function (node) {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.equals(newNode);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.maxPost = function () {\r\n        return NamedNode.MAX;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    ValueIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        return new NamedNode(name, valueNode);\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    ValueIndex.prototype.toString = function () {\r\n        return '.value';\r\n    };\r\n    return ValueIndex;\r\n}(Index));\r\nvar VALUE_INDEX = new ValueIndex();\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!Path} indexPath\r\n * @constructor\r\n * @extends {Index}\r\n */\r\nvar PathIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PathIndex, _super);\r\n    function PathIndex(indexPath_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.indexPath_ = indexPath_;\r\n        util.assert(!indexPath_.isEmpty() && indexPath_.getFront() !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {!Node} snap\r\n     * @return {!Node}\r\n     * @protected\r\n     */\r\n    PathIndex.prototype.extractChild = function (snap) {\r\n        return snap.getChild(this.indexPath_);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getChild(this.indexPath_).isEmpty();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.compare = function (a, b) {\r\n        var aChild = this.extractChild(a.node);\r\n        var bChild = this.extractChild(b.node);\r\n        var indexCmp = aChild.compareTo(bChild);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\r\n        return new NamedNode(name, node);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.maxPost = function () {\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE$2);\r\n        return new NamedNode(MAX_NAME, node);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.toString = function () {\r\n        return this.indexPath_.slice().join('/');\r\n    };\r\n    return PathIndex;\r\n}(Index));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */\r\nvar DataSnapshot = /** @class */ (function () {\r\n    /**\r\n     * @param {!Node} node_ A SnapshotNode to wrap.\r\n     * @param {!Reference} ref_ The ref of the location this snapshot came from.\r\n     * @param {!Index} index_ The iteration order for this snapshot\r\n     */\r\n    function DataSnapshot(node_, ref_, index_) {\r\n        this.node_ = node_;\r\n        this.ref_ = ref_;\r\n        this.index_ = index_;\r\n    }\r\n    /**\r\n     * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n     * empty.\r\n     *\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.val = function () {\r\n        util.validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\r\n        return this.node_.val();\r\n    };\r\n    /**\r\n     * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n     * the entire node contents.\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.exportVal = function () {\r\n        util.validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\r\n        return this.node_.val(true);\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    DataSnapshot.prototype.toJSON = function () {\r\n        // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\r\n        util.validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\r\n        return this.exportVal();\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a non-null value.\r\n     *\r\n     * @return {boolean} Whether the snapshot contains a non-null value, or is empty.\r\n     */\r\n    DataSnapshot.prototype.exists = function () {\r\n        util.validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\r\n        return !this.node_.isEmpty();\r\n    };\r\n    /**\r\n     * Returns a DataSnapshot of the specified child node's contents.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {!DataSnapshot} DataSnapshot for child node.\r\n     */\r\n    DataSnapshot.prototype.child = function (childPathString) {\r\n        util.validateArgCount('DataSnapshot.child', 0, 1, arguments.length);\r\n        // Ensure the childPath is a string (can be a number)\r\n        childPathString = String(childPathString);\r\n        validatePathString('DataSnapshot.child', 1, childPathString, false);\r\n        var childPath = new Path(childPathString);\r\n        var childRef = this.ref_.child(childPath);\r\n        return new DataSnapshot(this.node_.getChild(childPath), childRef, PRIORITY_INDEX);\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a child at the specified path.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {boolean} Whether the child exists.\r\n     */\r\n    DataSnapshot.prototype.hasChild = function (childPathString) {\r\n        util.validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\r\n        validatePathString('DataSnapshot.hasChild', 1, childPathString, false);\r\n        var childPath = new Path(childPathString);\r\n        return !this.node_.getChild(childPath).isEmpty();\r\n    };\r\n    /**\r\n     * Returns the priority of the object, or null if no priority was set.\r\n     *\r\n     * @return {string|number|null} The priority.\r\n     */\r\n    DataSnapshot.prototype.getPriority = function () {\r\n        util.validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\r\n        // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\r\n        return this.node_.getPriority().val();\r\n    };\r\n    /**\r\n     * Iterates through child nodes and calls the specified action for each one.\r\n     *\r\n     * @param {function(!DataSnapshot)} action Callback function to be called\r\n     * for each child.\r\n     * @return {boolean} True if forEach was canceled by action returning true for\r\n     * one of the child nodes.\r\n     */\r\n    DataSnapshot.prototype.forEach = function (action) {\r\n        var _this = this;\r\n        util.validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\r\n        util.validateCallback('DataSnapshot.forEach', 1, action, false);\r\n        if (this.node_.isLeafNode())\r\n            return false;\r\n        var childrenNode = this.node_;\r\n        // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\r\n        return !!childrenNode.forEachChild(this.index_, function (key, node) {\r\n            return action(new DataSnapshot(node, _this.ref_.child(key), PRIORITY_INDEX));\r\n        });\r\n    };\r\n    /**\r\n     * Returns whether this DataSnapshot has children.\r\n     * @return {boolean} True if the DataSnapshot contains 1 or more child nodes.\r\n     */\r\n    DataSnapshot.prototype.hasChildren = function () {\r\n        util.validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\r\n        if (this.node_.isLeafNode())\r\n            return false;\r\n        else\r\n            return !this.node_.isEmpty();\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"key\", {\r\n        get: function () {\r\n            return this.ref_.getKey();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the number of children for this DataSnapshot.\r\n     * @return {number} The number of children that this DataSnapshot contains.\r\n     */\r\n    DataSnapshot.prototype.numChildren = function () {\r\n        util.validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\r\n        return this.node_.numChildren();\r\n    };\r\n    /**\r\n     * @return {Reference} The Firebase reference for the location this snapshot's data came from.\r\n     */\r\n    DataSnapshot.prototype.getRef = function () {\r\n        util.validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\r\n        return this.ref_;\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return DataSnapshot;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Encapsulates the data needed to raise an event\r\n * @implements {Event}\r\n */\r\nvar DataEvent = /** @class */ (function () {\r\n    /**\r\n     * @param {!string} eventType One of: value, child_added, child_changed, child_moved, child_removed\r\n     * @param {!EventRegistration} eventRegistration The function to call to with the event data. User provided\r\n     * @param {!DataSnapshot} snapshot The data backing the event\r\n     * @param {?string=} prevName Optional, the name of the previous child for child_* events.\r\n     */\r\n    function DataEvent(eventType, eventRegistration, snapshot, prevName) {\r\n        this.eventType = eventType;\r\n        this.eventRegistration = eventRegistration;\r\n        this.snapshot = snapshot;\r\n        this.prevName = prevName;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getPath = function () {\r\n        var ref = this.snapshot.getRef();\r\n        if (this.eventType === 'value') {\r\n            return ref.path;\r\n        }\r\n        else {\r\n            return ref.getParent().path;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getEventType = function () {\r\n        return this.eventType;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.toString = function () {\r\n        return (this.getPath().toString() +\r\n            ':' +\r\n            this.eventType +\r\n            ':' +\r\n            util.stringify(this.snapshot.exportVal()));\r\n    };\r\n    return DataEvent;\r\n}());\r\nvar CancelEvent = /** @class */ (function () {\r\n    /**\r\n     * @param {EventRegistration} eventRegistration\r\n     * @param {Error} error\r\n     * @param {!Path} path\r\n     */\r\n    function CancelEvent(eventRegistration, error, path) {\r\n        this.eventRegistration = eventRegistration;\r\n        this.error = error;\r\n        this.path = path;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getPath = function () {\r\n        return this.path;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getEventType = function () {\r\n        return 'cancel';\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.toString = function () {\r\n        return this.path.toString() + ':cancel';\r\n    };\r\n    return CancelEvent;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Represents registration for 'value' events.\r\n */\r\nvar ValueEventRegistration = /** @class */ (function () {\r\n    /**\r\n     * @param {?function(!DataSnapshot)} callback_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {?Object} context_\r\n     */\r\n    function ValueEventRegistration(callback_, cancelCallback_, context_) {\r\n        this.callback_ = callback_;\r\n        this.cancelCallback_ = cancelCallback_;\r\n        this.context_ = context_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.respondsTo = function (eventType) {\r\n        return eventType === 'value';\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.createEvent = function (change, query) {\r\n        var index = query.getQueryParams().getIndex();\r\n        return new DataEvent('value', this, new DataSnapshot(change.snapshotNode, query.getRef(), index));\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var ctx = this.context_;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\r\n            var cancelCB_1 = this.cancelCallback_;\r\n            return function () {\r\n                // We know that error exists, we checked above that this is a cancel event\r\n                cancelCB_1.call(ctx, eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            var cb_1 = this.callback_;\r\n            return function () {\r\n                cb_1.call(ctx, eventData.snapshot);\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.cancelCallback_) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.matches = function (other) {\r\n        if (!(other instanceof ValueEventRegistration)) {\r\n            return false;\r\n        }\r\n        else if (!other.callback_ || !this.callback_) {\r\n            // If no callback specified, we consider it to match any callback.\r\n            return true;\r\n        }\r\n        else {\r\n            return (other.callback_ === this.callback_ && other.context_ === this.context_);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callback_ !== null;\r\n    };\r\n    return ValueEventRegistration;\r\n}());\r\n/**\r\n * Represents the registration of 1 or more child_xxx events.\r\n *\r\n * Currently, it is always exactly 1 child_xxx event, but the idea is we might let you\r\n * register a group of callbacks together in the future.\r\n *\r\n * @constructor\r\n * @implements {EventRegistration}\r\n */\r\nvar ChildEventRegistration = /** @class */ (function () {\r\n    /**\r\n     * @param {?Object.<string, function(!DataSnapshot, ?string=)>} callbacks_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {Object=} context_\r\n     */\r\n    function ChildEventRegistration(callbacks_, cancelCallback_, context_) {\r\n        this.callbacks_ = callbacks_;\r\n        this.cancelCallback_ = cancelCallback_;\r\n        this.context_ = context_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.respondsTo = function (eventType) {\r\n        var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\r\n        eventToCheck =\r\n            eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\r\n        return util.contains(this.callbacks_, eventToCheck);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.cancelCallback_) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.createEvent = function (change, query) {\r\n        util.assert(change.childName != null, 'Child events should have a childName.');\r\n        var ref = query.getRef().child(/** @type {!string} */ (change.childName));\r\n        var index = query.getQueryParams().getIndex();\r\n        return new DataEvent(change.type, this, new DataSnapshot(change.snapshotNode, ref, index), change.prevName);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var ctx = this.context_;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\r\n            var cancelCB_2 = this.cancelCallback_;\r\n            return function () {\r\n                // We know that error exists, we checked above that this is a cancel event\r\n                cancelCB_2.call(ctx, eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            var cb_2 = this.callbacks_[eventData.eventType];\r\n            return function () {\r\n                cb_2.call(ctx, eventData.snapshot, eventData.prevName);\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.matches = function (other) {\r\n        if (other instanceof ChildEventRegistration) {\r\n            if (!this.callbacks_ || !other.callbacks_) {\r\n                return true;\r\n            }\r\n            else if (this.context_ === other.context_) {\r\n                var otherCount = util.getCount(other.callbacks_);\r\n                var thisCount = util.getCount(this.callbacks_);\r\n                if (otherCount === thisCount) {\r\n                    // If count is 1, do an exact match on eventType, if either is defined but null, it's a match.\r\n                    //  If event types don't match, not a match\r\n                    // If count is not 1, exact match across all\r\n                    if (otherCount === 1) {\r\n                        var otherKey /** @type {!string} */ = util.getAnyKey(other.callbacks_);\r\n                        var thisKey /** @type {!string} */ = util.getAnyKey(this.callbacks_);\r\n                        return (thisKey === otherKey &&\r\n                            (!other.callbacks_[otherKey] ||\r\n                                !this.callbacks_[thisKey] ||\r\n                                other.callbacks_[otherKey] === this.callbacks_[thisKey]));\r\n                    }\r\n                    else {\r\n                        // Exact match on each key.\r\n                        return util.every(this.callbacks_, function (eventType, cb) { return other.callbacks_[eventType] === cb; });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callbacks_ !== null;\r\n    };\r\n    return ChildEventRegistration;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __referenceConstructor;\r\n/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */\r\nvar Query = /** @class */ (function () {\r\n    function Query(repo, path, queryParams_, orderByCalled_) {\r\n        this.repo = repo;\r\n        this.path = path;\r\n        this.queryParams_ = queryParams_;\r\n        this.orderByCalled_ = orderByCalled_;\r\n    }\r\n    Object.defineProperty(Query, \"__referenceConstructor\", {\r\n        get: function () {\r\n            util.assert(__referenceConstructor, 'Reference.ts has not been loaded');\r\n            return __referenceConstructor;\r\n        },\r\n        set: function (val) {\r\n            __referenceConstructor = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Validates start/end values for queries.\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */\r\n    Query.validateQueryEndpoints_ = function (params) {\r\n        var startNode = null;\r\n        var endNode = null;\r\n        if (params.hasStart()) {\r\n            startNode = params.getIndexStartValue();\r\n        }\r\n        if (params.hasEnd()) {\r\n            endNode = params.getIndexEndValue();\r\n        }\r\n        if (params.getIndex() === KEY_INDEX) {\r\n            var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' +\r\n                'startAt(), endAt(), or equalTo().';\r\n            var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), endAt(),' +\r\n                'or equalTo() must be a string.';\r\n            if (params.hasStart()) {\r\n                var startName = params.getIndexStartName();\r\n                if (startName != MIN_NAME) {\r\n                    throw new Error(tooManyArgsError);\r\n                }\r\n                else if (typeof startNode !== 'string') {\r\n                    throw new Error(wrongArgTypeError);\r\n                }\r\n            }\r\n            if (params.hasEnd()) {\r\n                var endName = params.getIndexEndName();\r\n                if (endName != MAX_NAME) {\r\n                    throw new Error(tooManyArgsError);\r\n                }\r\n                else if (typeof endNode !== 'string') {\r\n                    throw new Error(wrongArgTypeError);\r\n                }\r\n            }\r\n        }\r\n        else if (params.getIndex() === PRIORITY_INDEX) {\r\n            if ((startNode != null && !isValidPriority(startNode)) ||\r\n                (endNode != null && !isValidPriority(endNode))) {\r\n                throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' +\r\n                    'endAt(), or equalTo() must be a valid priority value (null, a number, or a string).');\r\n            }\r\n        }\r\n        else {\r\n            util.assert(params.getIndex() instanceof PathIndex ||\r\n                params.getIndex() === VALUE_INDEX, 'unknown index type.');\r\n            if ((startNode != null && typeof startNode === 'object') ||\r\n                (endNode != null && typeof endNode === 'object')) {\r\n                throw new Error('Query: First argument passed to startAt(), endAt(), or equalTo() cannot be ' +\r\n                    'an object.');\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Validates that limit* has been called with the correct combination of parameters\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */\r\n    Query.validateLimit_ = function (params) {\r\n        if (params.hasStart() &&\r\n            params.hasEnd() &&\r\n            params.hasLimit() &&\r\n            !params.hasAnchoredLimit()) {\r\n            throw new Error(\"Query: Can't combine startAt(), endAt(), and limit(). Use limitToFirst() or limitToLast() instead.\");\r\n        }\r\n    };\r\n    /**\r\n     * Validates that no other order by call has been made\r\n     * @param {!string} fnName\r\n     * @private\r\n     */\r\n    Query.prototype.validateNoPreviousOrderByCall_ = function (fnName) {\r\n        if (this.orderByCalled_ === true) {\r\n            throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\r\n        }\r\n    };\r\n    /**\r\n     * @return {!QueryParams}\r\n     */\r\n    Query.prototype.getQueryParams = function () {\r\n        return this.queryParams_;\r\n    };\r\n    /**\r\n     * @return {!Reference}\r\n     */\r\n    Query.prototype.getRef = function () {\r\n        util.validateArgCount('Query.ref', 0, 0, arguments.length);\r\n        // This is a slight hack. We cannot goog.require('fb.api.Firebase'), since Firebase requires fb.api.Query.\r\n        // However, we will always export 'Firebase' to the global namespace, so it's guaranteed to exist by the time this\r\n        // method gets called.\r\n        return new Query.__referenceConstructor(this.repo, this.path);\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @param {!function(DataSnapshot, string=)} callback\r\n     * @param {(function(Error)|Object)=} cancelCallbackOrContext\r\n     * @param {Object=} context\r\n     * @return {!function(DataSnapshot, string=)}\r\n     */\r\n    Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {\r\n        util.validateArgCount('Query.on', 2, 4, arguments.length);\r\n        validateEventType('Query.on', 1, eventType, false);\r\n        util.validateCallback('Query.on', 2, callback, false);\r\n        var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\r\n        if (eventType === 'value') {\r\n            this.onValueEvent(callback, ret.cancel, ret.context);\r\n        }\r\n        else {\r\n            var callbacks = {};\r\n            callbacks[eventType] = callback;\r\n            this.onChildEvent(callbacks, ret.cancel, ret.context);\r\n        }\r\n        return callback;\r\n    };\r\n    /**\r\n     * @param {!function(!DataSnapshot)} callback\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */\r\n    Query.prototype.onValueEvent = function (callback, cancelCallback, context) {\r\n        var container = new ValueEventRegistration(callback, cancelCallback || null, context || null);\r\n        this.repo.addEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * @param {!Object.<string, !function(!DataSnapshot, ?string)>} callbacks\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */\r\n    Query.prototype.onChildEvent = function (callbacks, cancelCallback, context) {\r\n        var container = new ChildEventRegistration(callbacks, cancelCallback, context);\r\n        this.repo.addEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * @param {string=} eventType\r\n     * @param {(function(!DataSnapshot, ?string=))=} callback\r\n     * @param {Object=} context\r\n     */\r\n    Query.prototype.off = function (eventType, callback, context) {\r\n        util.validateArgCount('Query.off', 0, 3, arguments.length);\r\n        validateEventType('Query.off', 1, eventType, true);\r\n        util.validateCallback('Query.off', 2, callback, true);\r\n        util.validateContextObject('Query.off', 3, context, true);\r\n        var container = null;\r\n        var callbacks = null;\r\n        if (eventType === 'value') {\r\n            var valueCallback = callback || null;\r\n            container = new ValueEventRegistration(valueCallback, null, context || null);\r\n        }\r\n        else if (eventType) {\r\n            if (callback) {\r\n                callbacks = {};\r\n                callbacks[eventType] = callback;\r\n            }\r\n            container = new ChildEventRegistration(callbacks, null, context || null);\r\n        }\r\n        this.repo.removeEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * Attaches a listener, waits for the first event, and then removes the listener\r\n     * @param {!string} eventType\r\n     * @param {!function(!DataSnapshot, string=)} userCallback\r\n     * @param cancelOrContext\r\n     * @param context\r\n     * @return {!firebase.Promise}\r\n     */\r\n    Query.prototype.once = function (eventType, userCallback, cancelOrContext, context) {\r\n        var _this = this;\r\n        util.validateArgCount('Query.once', 1, 4, arguments.length);\r\n        validateEventType('Query.once', 1, eventType, false);\r\n        util.validateCallback('Query.once', 2, userCallback, true);\r\n        var ret = Query.getCancelAndContextArgs_('Query.once', cancelOrContext, context);\r\n        // TODO: Implement this more efficiently (in particular, use 'get' wire protocol for 'value' event)\r\n        // TODO: consider actually wiring the callbacks into the promise. We cannot do this without a breaking change\r\n        // because the API currently expects callbacks will be called synchronously if the data is cached, but this is\r\n        // against the Promise specification.\r\n        var firstCall = true;\r\n        var deferred = new util.Deferred();\r\n        // A dummy error handler in case a user wasn't expecting promises\r\n        deferred.promise.catch(function () { });\r\n        var onceCallback = function (snapshot) {\r\n            // NOTE: Even though we unsubscribe, we may get called multiple times if a single action (e.g. set() with JSON)\r\n            // triggers multiple events (e.g. child_added or child_changed).\r\n            if (firstCall) {\r\n                firstCall = false;\r\n                _this.off(eventType, onceCallback);\r\n                if (userCallback) {\r\n                    userCallback.bind(ret.context)(snapshot);\r\n                }\r\n                deferred.resolve(snapshot);\r\n            }\r\n        };\r\n        this.on(eventType, onceCallback, \r\n        /*cancel=*/ function (err) {\r\n            _this.off(eventType, onceCallback);\r\n            if (ret.cancel)\r\n                ret.cancel.bind(ret.context)(err);\r\n            deferred.reject(err);\r\n        });\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the start of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.limitToFirst = function (limit) {\r\n        util.validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\r\n        if (typeof limit !== 'number' ||\r\n            Math.floor(limit) !== limit ||\r\n            limit <= 0) {\r\n            throw new Error('Query.limitToFirst: First argument must be a positive integer.');\r\n        }\r\n        if (this.queryParams_.hasLimit()) {\r\n            throw new Error('Query.limitToFirst: Limit was already set (by another call to limit, ' +\r\n                'limitToFirst, or limitToLast).');\r\n        }\r\n        return new Query(this.repo, this.path, this.queryParams_.limitToFirst(limit), this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the end of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.limitToLast = function (limit) {\r\n        util.validateArgCount('Query.limitToLast', 1, 1, arguments.length);\r\n        if (typeof limit !== 'number' ||\r\n            Math.floor(limit) !== limit ||\r\n            limit <= 0) {\r\n            throw new Error('Query.limitToLast: First argument must be a positive integer.');\r\n        }\r\n        if (this.queryParams_.hasLimit()) {\r\n            throw new Error('Query.limitToLast: Limit was already set (by another call to limit, ' +\r\n                'limitToFirst, or limitToLast).');\r\n        }\r\n        return new Query(this.repo, this.path, this.queryParams_.limitToLast(limit), this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Given a child path, return a new query ordered by the specified grandchild path.\r\n     * @param {!string} path\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByChild = function (path) {\r\n        util.validateArgCount('Query.orderByChild', 1, 1, arguments.length);\r\n        if (path === '$key') {\r\n            throw new Error('Query.orderByChild: \"$key\" is invalid.  Use Query.orderByKey() instead.');\r\n        }\r\n        else if (path === '$priority') {\r\n            throw new Error('Query.orderByChild: \"$priority\" is invalid.  Use Query.orderByPriority() instead.');\r\n        }\r\n        else if (path === '$value') {\r\n            throw new Error('Query.orderByChild: \"$value\" is invalid.  Use Query.orderByValue() instead.');\r\n        }\r\n        validatePathString('Query.orderByChild', 1, path, false);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByChild');\r\n        var parsedPath = new Path(path);\r\n        if (parsedPath.isEmpty()) {\r\n            throw new Error('Query.orderByChild: cannot pass in empty path.  Use Query.orderByValue() instead.');\r\n        }\r\n        var index = new PathIndex(parsedPath);\r\n        var newParams = this.queryParams_.orderBy(index);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the KeyIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByKey = function () {\r\n        util.validateArgCount('Query.orderByKey', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByKey');\r\n        var newParams = this.queryParams_.orderBy(KEY_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the PriorityIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByPriority = function () {\r\n        util.validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByPriority');\r\n        var newParams = this.queryParams_.orderBy(PRIORITY_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the ValueIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByValue = function () {\r\n        util.validateArgCount('Query.orderByValue', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByValue');\r\n        var newParams = this.queryParams_.orderBy(VALUE_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.startAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        util.validateArgCount('Query.startAt', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.startAt', 1, value, this.path, true);\r\n        validateKey('Query.startAt', 2, name, true);\r\n        var newParams = this.queryParams_.startAt(value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.startAt: Starting point was already set (by another call to startAt ' +\r\n                'or equalTo).');\r\n        }\r\n        // Calling with no params tells us to start at the beginning.\r\n        if (value === undefined) {\r\n            value = null;\r\n            name = null;\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    /**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.endAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        util.validateArgCount('Query.endAt', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.endAt', 1, value, this.path, true);\r\n        validateKey('Query.endAt', 2, name, true);\r\n        var newParams = this.queryParams_.endAt(value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.endAt: Ending point was already set (by another call to endAt or ' +\r\n                'equalTo).');\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Load the selection of children with exactly the specified value, and, optionally,\r\n     * the specified name.\r\n     * @param {number|string|boolean|null} value\r\n     * @param {string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.equalTo = function (value, name) {\r\n        util.validateArgCount('Query.equalTo', 1, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.equalTo', 1, value, this.path, false);\r\n        validateKey('Query.equalTo', 2, name, true);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.equalTo: Starting point was already set (by another call to startAt or ' +\r\n                'equalTo).');\r\n        }\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.equalTo: Ending point was already set (by another call to endAt or ' +\r\n                'equalTo).');\r\n        }\r\n        return this.startAt(value, name).endAt(value, name);\r\n    };\r\n    /**\r\n     * @return {!string} URL for this location.\r\n     */\r\n    Query.prototype.toString = function () {\r\n        util.validateArgCount('Query.toString', 0, 0, arguments.length);\r\n        return this.repo.toString() + this.path.toUrlEncodedString();\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users.\r\n    Query.prototype.toJSON = function () {\r\n        // An optional spacer argument is unnecessary for a string.\r\n        util.validateArgCount('Query.toJSON', 0, 1, arguments.length);\r\n        return this.toString();\r\n    };\r\n    /**\r\n     * An object representation of the query parameters used by this Query.\r\n     * @return {!Object}\r\n     */\r\n    Query.prototype.queryObject = function () {\r\n        return this.queryParams_.getQueryObject();\r\n    };\r\n    /**\r\n     * @return {!string}\r\n     */\r\n    Query.prototype.queryIdentifier = function () {\r\n        var obj = this.queryObject();\r\n        var id = ObjectToUniqueKey(obj);\r\n        return id === '{}' ? 'default' : id;\r\n    };\r\n    /**\r\n     * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n     * @param {Query} other\r\n     * @return {boolean}\r\n     */\r\n    Query.prototype.isEqual = function (other) {\r\n        util.validateArgCount('Query.isEqual', 1, 1, arguments.length);\r\n        if (!(other instanceof Query)) {\r\n            var error$$1 = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\r\n            throw new Error(error$$1);\r\n        }\r\n        var sameRepo = this.repo === other.repo;\r\n        var samePath = this.path.equals(other.path);\r\n        var sameQueryIdentifier = this.queryIdentifier() === other.queryIdentifier();\r\n        return sameRepo && samePath && sameQueryIdentifier;\r\n    };\r\n    /**\r\n     * Helper used by .on and .once to extract the context and or cancel arguments.\r\n     * @param {!string} fnName The function name (on or once)\r\n     * @param {(function(Error)|Object)=} cancelOrContext\r\n     * @param {Object=} context\r\n     * @return {{cancel: ?function(Error), context: ?Object}}\r\n     * @private\r\n     */\r\n    Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {\r\n        var ret = { cancel: null, context: null };\r\n        if (cancelOrContext && context) {\r\n            ret.cancel = cancelOrContext;\r\n            util.validateCallback(fnName, 3, ret.cancel, true);\r\n            ret.context = context;\r\n            util.validateContextObject(fnName, 4, ret.context, true);\r\n        }\r\n        else if (cancelOrContext) {\r\n            // we have either a cancel callback or a context.\r\n            if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\r\n                // it's a context!\r\n                ret.context = cancelOrContext;\r\n            }\r\n            else if (typeof cancelOrContext === 'function') {\r\n                ret.cancel = cancelOrContext;\r\n            }\r\n            else {\r\n                throw new Error(util.errorPrefix(fnName, 3, true) +\r\n                    ' must either be a cancel callback or a context object.');\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n    Object.defineProperty(Query.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Query;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Implements a set with a count of elements.\r\n *\r\n * @template K, V\r\n */\r\nvar CountedSet = /** @class */ (function () {\r\n    function CountedSet() {\r\n        this.set = {};\r\n    }\r\n    /**\r\n     * @param {!K} item\r\n     * @param {V} val\r\n     */\r\n    CountedSet.prototype.add = function (item, val) {\r\n        this.set[item] = val !== null ? val : true;\r\n    };\r\n    /**\r\n     * @param {!K} key\r\n     * @return {boolean}\r\n     */\r\n    CountedSet.prototype.contains = function (key) {\r\n        return util.contains(this.set, key);\r\n    };\r\n    /**\r\n     * @param {!K} item\r\n     * @return {V}\r\n     */\r\n    CountedSet.prototype.get = function (item) {\r\n        return this.contains(item) ? this.set[item] : undefined;\r\n    };\r\n    /**\r\n     * @param {!K} item\r\n     */\r\n    CountedSet.prototype.remove = function (item) {\r\n        delete this.set[item];\r\n    };\r\n    /**\r\n     * Deletes everything in the set\r\n     */\r\n    CountedSet.prototype.clear = function () {\r\n        this.set = {};\r\n    };\r\n    /**\r\n     * True if there's nothing in the set\r\n     * @return {boolean}\r\n     */\r\n    CountedSet.prototype.isEmpty = function () {\r\n        return util.isEmpty(this.set);\r\n    };\r\n    /**\r\n     * @return {number} The number of items in the set\r\n     */\r\n    CountedSet.prototype.count = function () {\r\n        return util.getCount(this.set);\r\n    };\r\n    /**\r\n     * Run a function on each k,v pair in the set\r\n     * @param {function(K, V)} fn\r\n     */\r\n    CountedSet.prototype.each = function (fn) {\r\n        util.forEach(this.set, function (k, v) { return fn(k, v); });\r\n    };\r\n    /**\r\n     * Mostly for debugging\r\n     * @return {Array.<K>} The keys present in this CountedSet\r\n     */\r\n    CountedSet.prototype.keys = function () {\r\n        var keys = [];\r\n        util.forEach(this.set, function (k) {\r\n            keys.push(k);\r\n        });\r\n        return keys;\r\n    };\r\n    return CountedSet;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper class to store a sparse set of snapshots.\r\n *\r\n * @constructor\r\n */\r\nvar SparseSnapshotTree = /** @class */ (function () {\r\n    function SparseSnapshotTree() {\r\n        /**\r\n         * @private\r\n         * @type {Node}\r\n         */\r\n        this.value_ = null;\r\n        /**\r\n         * @private\r\n         * @type {CountedSet}\r\n         */\r\n        this.children_ = null;\r\n    }\r\n    /**\r\n     * Gets the node stored at the given path if one exists.\r\n     *\r\n     * @param {!Path} path Path to look up snapshot for.\r\n     * @return {?Node} The retrieved node, or null.\r\n     */\r\n    SparseSnapshotTree.prototype.find = function (path) {\r\n        if (this.value_ != null) {\r\n            return this.value_.getChild(path);\r\n        }\r\n        else if (!path.isEmpty() && this.children_ != null) {\r\n            var childKey = path.getFront();\r\n            path = path.popFront();\r\n            if (this.children_.contains(childKey)) {\r\n                var childTree = this.children_.get(childKey);\r\n                return childTree.find(path);\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Stores the given node at the specified path. If there is already a node\r\n     * at a shallower path, it merges the new data into that snapshot node.\r\n     *\r\n     * @param {!Path} path Path to look up snapshot for.\r\n     * @param {!Node} data The new data, or null.\r\n     */\r\n    SparseSnapshotTree.prototype.remember = function (path, data) {\r\n        if (path.isEmpty()) {\r\n            this.value_ = data;\r\n            this.children_ = null;\r\n        }\r\n        else if (this.value_ !== null) {\r\n            this.value_ = this.value_.updateChild(path, data);\r\n        }\r\n        else {\r\n            if (this.children_ == null) {\r\n                this.children_ = new CountedSet();\r\n            }\r\n            var childKey = path.getFront();\r\n            if (!this.children_.contains(childKey)) {\r\n                this.children_.add(childKey, new SparseSnapshotTree());\r\n            }\r\n            var child = this.children_.get(childKey);\r\n            path = path.popFront();\r\n            child.remember(path, data);\r\n        }\r\n    };\r\n    /**\r\n     * Purge the data at path from the cache.\r\n     *\r\n     * @param {!Path} path Path to look up snapshot for.\r\n     * @return {boolean} True if this node should now be removed.\r\n     */\r\n    SparseSnapshotTree.prototype.forget = function (path) {\r\n        if (path.isEmpty()) {\r\n            this.value_ = null;\r\n            this.children_ = null;\r\n            return true;\r\n        }\r\n        else {\r\n            if (this.value_ !== null) {\r\n                if (this.value_.isLeafNode()) {\r\n                    // We're trying to forget a node that doesn't exist\r\n                    return false;\r\n                }\r\n                else {\r\n                    var value = this.value_;\r\n                    this.value_ = null;\r\n                    var self_1 = this;\r\n                    value.forEachChild(PRIORITY_INDEX, function (key, tree) {\r\n                        self_1.remember(new Path(key), tree);\r\n                    });\r\n                    return this.forget(path);\r\n                }\r\n            }\r\n            else if (this.children_ !== null) {\r\n                var childKey = path.getFront();\r\n                path = path.popFront();\r\n                if (this.children_.contains(childKey)) {\r\n                    var safeToRemove = this.children_.get(childKey).forget(path);\r\n                    if (safeToRemove) {\r\n                        this.children_.remove(childKey);\r\n                    }\r\n                }\r\n                if (this.children_.isEmpty()) {\r\n                    this.children_ = null;\r\n                    return true;\r\n                }\r\n                else {\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Recursively iterates through all of the stored tree and calls the\r\n     * callback on each one.\r\n     *\r\n     * @param {!Path} prefixPath Path to look up node for.\r\n     * @param {!Function} func The function to invoke for each tree.\r\n     */\r\n    SparseSnapshotTree.prototype.forEachTree = function (prefixPath, func) {\r\n        if (this.value_ !== null) {\r\n            func(prefixPath, this.value_);\r\n        }\r\n        else {\r\n            this.forEachChild(function (key, tree) {\r\n                var path = new Path(prefixPath.toString() + '/' + key);\r\n                tree.forEachTree(path, func);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Iterates through each immediate child and triggers the callback.\r\n     *\r\n     * @param {!Function} func The function to invoke for each child.\r\n     */\r\n    SparseSnapshotTree.prototype.forEachChild = function (func) {\r\n        if (this.children_ !== null) {\r\n            this.children_.each(function (key, tree) {\r\n                func(key, tree);\r\n            });\r\n        }\r\n    };\r\n    return SparseSnapshotTree;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Generate placeholders for deferred values.\r\n * @param {?Object} values\r\n * @return {!Object}\r\n */\r\nvar generateWithValues = function (values) {\r\n    values = values || {};\r\n    values['timestamp'] = values['timestamp'] || new Date().getTime();\r\n    return values;\r\n};\r\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n * @param {(Object|string|number|boolean)} value\r\n * @param {!Object} serverValues\r\n * @return {!(string|number|boolean)}\r\n */\r\nvar resolveDeferredValue = function (value, serverValues) {\r\n    if (!value || typeof value !== 'object') {\r\n        return value;\r\n    }\r\n    else {\r\n        util.assert('.sv' in value, 'Unexpected leaf node or priority contents');\r\n        return serverValues[value['.sv']];\r\n    }\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param {!SparseSnapshotTree} tree\r\n * @param {!Object} serverValues\r\n * @return {!SparseSnapshotTree}\r\n */\r\nvar resolveDeferredValueTree = function (tree, serverValues) {\r\n    var resolvedTree = new SparseSnapshotTree();\r\n    tree.forEachTree(new Path(''), function (path, node) {\r\n        resolvedTree.remember(path, resolveDeferredValueSnapshot(node, serverValues));\r\n    });\r\n    return resolvedTree;\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n * @param {!Node} node\r\n * @param {!Object} serverValues\r\n * @return {!Node}\r\n */\r\nvar resolveDeferredValueSnapshot = function (node, serverValues) {\r\n    var rawPri = node.getPriority().val();\r\n    var priority = resolveDeferredValue(rawPri, serverValues);\r\n    var newNode;\r\n    if (node.isLeafNode()) {\r\n        var leafNode = node;\r\n        var value = resolveDeferredValue(leafNode.getValue(), serverValues);\r\n        if (value !== leafNode.getValue() ||\r\n            priority !== leafNode.getPriority().val()) {\r\n            return new LeafNode(value, nodeFromJSON$1(priority));\r\n        }\r\n        else {\r\n            return node;\r\n        }\r\n    }\r\n    else {\r\n        var childrenNode = node;\r\n        newNode = childrenNode;\r\n        if (priority !== childrenNode.getPriority().val()) {\r\n            newNode = newNode.updatePriority(new LeafNode(priority));\r\n        }\r\n        childrenNode.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n            var newChildNode = resolveDeferredValueSnapshot(childNode, serverValues);\r\n            if (newChildNode !== childNode) {\r\n                newNode = newNode.updateImmediateChild(childName, newChildNode);\r\n            }\r\n        });\r\n        return newNode;\r\n    }\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @enum\r\n */\r\nvar OperationType;\r\n(function (OperationType) {\r\n    OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\r\n    OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\r\n    OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\r\n    OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\r\n})(OperationType || (OperationType = {}));\r\n/**\r\n * @param {boolean} fromUser\r\n * @param {boolean} fromServer\r\n * @param {?string} queryId\r\n * @param {boolean} tagged\r\n * @constructor\r\n */\r\nvar OperationSource = /** @class */ (function () {\r\n    function OperationSource(fromUser, fromServer, queryId, tagged) {\r\n        this.fromUser = fromUser;\r\n        this.fromServer = fromServer;\r\n        this.queryId = queryId;\r\n        this.tagged = tagged;\r\n        util.assert(!tagged || fromServer, 'Tagged queries must be from server.');\r\n    }\r\n    /**\r\n     * @const\r\n     * @type {!OperationSource}\r\n     */\r\n    OperationSource.User = new OperationSource(\r\n    /*fromUser=*/ true, false, null, \r\n    /*tagged=*/ false);\r\n    /**\r\n     * @const\r\n     * @type {!OperationSource}\r\n     */\r\n    OperationSource.Server = new OperationSource(false, \r\n    /*fromServer=*/ true, null, \r\n    /*tagged=*/ false);\r\n    /**\r\n     * @param {string} queryId\r\n     * @return {!OperationSource}\r\n     */\r\n    OperationSource.forServerTaggedQuery = function (queryId) {\r\n        return new OperationSource(false, \r\n        /*fromServer=*/ true, queryId, \r\n        /*tagged=*/ true);\r\n    };\r\n    return OperationSource;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar AckUserWrite = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree<!boolean>} affectedTree A tree containing true for each affected path. Affected paths can't overlap.\r\n     * @param {!boolean} revert\r\n     */\r\n    function AckUserWrite(\r\n    /**@inheritDoc */ path, \r\n    /**@inheritDoc */ affectedTree, \r\n    /**@inheritDoc */ revert) {\r\n        this.path = path;\r\n        this.affectedTree = affectedTree;\r\n        this.revert = revert;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.ACK_USER_WRITE;\r\n        /** @inheritDoc */\r\n        this.source = OperationSource.User;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    AckUserWrite.prototype.operationForChild = function (childName) {\r\n        if (!this.path.isEmpty()) {\r\n            util.assert(this.path.getFront() === childName, 'operationForChild called for unrelated child.');\r\n            return new AckUserWrite(this.path.popFront(), this.affectedTree, this.revert);\r\n        }\r\n        else if (this.affectedTree.value != null) {\r\n            util.assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.');\r\n            // All child locations are affected as well; just return same operation.\r\n            return this;\r\n        }\r\n        else {\r\n            var childTree = this.affectedTree.subtree(new Path(childName));\r\n            return new AckUserWrite(Path.Empty, childTree, this.revert);\r\n        }\r\n    };\r\n    return AckUserWrite;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar emptyChildrenSingleton;\r\n/**\r\n * Singleton empty children collection.\r\n *\r\n * @const\r\n * @type {!SortedMap.<string, !ImmutableTree.<?>>}\r\n */\r\nvar EmptyChildren = function () {\r\n    if (!emptyChildrenSingleton) {\r\n        emptyChildrenSingleton = new SortedMap(stringCompare);\r\n    }\r\n    return emptyChildrenSingleton;\r\n};\r\n/**\r\n * A tree with immutable elements.\r\n */\r\nvar ImmutableTree = /** @class */ (function () {\r\n    /**\r\n     * @template T\r\n     * @param {?T} value\r\n     * @param {SortedMap.<string, !ImmutableTree.<T>>=} children\r\n     */\r\n    function ImmutableTree(value, children) {\r\n        if (children === void 0) { children = EmptyChildren(); }\r\n        this.value = value;\r\n        this.children = children;\r\n    }\r\n    /**\r\n     * @template T\r\n     * @param {!Object.<string, !T>} obj\r\n     * @return {!ImmutableTree.<!T>}\r\n     */\r\n    ImmutableTree.fromObject = function (obj) {\r\n        var tree = ImmutableTree.Empty;\r\n        util.forEach(obj, function (childPath, childSnap) {\r\n            tree = tree.set(new Path(childPath), childSnap);\r\n        });\r\n        return tree;\r\n    };\r\n    /**\r\n     * True if the value is empty and there are no children\r\n     * @return {boolean}\r\n     */\r\n    ImmutableTree.prototype.isEmpty = function () {\r\n        return this.value === null && this.children.isEmpty();\r\n    };\r\n    /**\r\n     * Given a path and predicate, return the first node and the path to that node\r\n     * where the predicate returns true.\r\n     *\r\n     * TODO Do a perf test -- If we're creating a bunch of {path: value:} objects\r\n     * on the way back out, it may be better to pass down a pathSoFar obj.\r\n     *\r\n     * @param {!Path} relativePath The remainder of the path\r\n     * @param {function(T):boolean} predicate The predicate to satisfy to return a\r\n     *   node\r\n     * @return {?{path:!Path, value:!T}}\r\n     */\r\n    ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {\r\n        if (this.value != null && predicate(this.value)) {\r\n            return { path: Path.Empty, value: this.value };\r\n        }\r\n        else {\r\n            if (relativePath.isEmpty()) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = relativePath.getFront();\r\n                var child = this.children.get(front);\r\n                if (child !== null) {\r\n                    var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(relativePath.popFront(), predicate);\r\n                    if (childExistingPathAndValue != null) {\r\n                        var fullPath = new Path(front).child(childExistingPathAndValue.path);\r\n                        return { path: fullPath, value: childExistingPathAndValue.value };\r\n                    }\r\n                    else {\r\n                        return null;\r\n                    }\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Find, if it exists, the shortest subpath of the given path that points a defined\r\n     * value in the tree\r\n     * @param {!Path} relativePath\r\n     * @return {?{path: !Path, value: !T}}\r\n     */\r\n    ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {\r\n        return this.findRootMostMatchingPathAndValue(relativePath, function () { return true; });\r\n    };\r\n    /**\r\n     * @param {!Path} relativePath\r\n     * @return {!ImmutableTree.<T>} The subtree at the given path\r\n     */\r\n    ImmutableTree.prototype.subtree = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var childTree = this.children.get(front);\r\n            if (childTree !== null) {\r\n                return childTree.subtree(relativePath.popFront());\r\n            }\r\n            else {\r\n                return ImmutableTree.Empty;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets a value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to set value at.\r\n     * @param {?T} toSet Value to set.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.set = function (relativePath, toSet) {\r\n        if (relativePath.isEmpty()) {\r\n            return new ImmutableTree(toSet, this.children);\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front) || ImmutableTree.Empty;\r\n            var newChild = child.set(relativePath.popFront(), toSet);\r\n            var newChildren = this.children.insert(front, newChild);\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Removes the value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to value to remove.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.remove = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            if (this.children.isEmpty()) {\r\n                return ImmutableTree.Empty;\r\n            }\r\n            else {\r\n                return new ImmutableTree(null, this.children);\r\n            }\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                var newChild = child.remove(relativePath.popFront());\r\n                var newChildren = void 0;\r\n                if (newChild.isEmpty()) {\r\n                    newChildren = this.children.remove(front);\r\n                }\r\n                else {\r\n                    newChildren = this.children.insert(front, newChild);\r\n                }\r\n                if (this.value === null && newChildren.isEmpty()) {\r\n                    return ImmutableTree.Empty;\r\n                }\r\n                else {\r\n                    return new ImmutableTree(this.value, newChildren);\r\n                }\r\n            }\r\n            else {\r\n                return this;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets a value from the tree.\r\n     *\r\n     * @param {!Path} relativePath Path to get value for.\r\n     * @return {?T} Value at path, or null.\r\n     */\r\n    ImmutableTree.prototype.get = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            return this.value;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                return child.get(relativePath.popFront());\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Replace the subtree at the specified path with the given new tree.\r\n     *\r\n     * @param {!Path} relativePath Path to replace subtree for.\r\n     * @param {!ImmutableTree} newTree New tree.\r\n     * @return {!ImmutableTree} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.setTree = function (relativePath, newTree) {\r\n        if (relativePath.isEmpty()) {\r\n            return newTree;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front) || ImmutableTree.Empty;\r\n            var newChild = child.setTree(relativePath.popFront(), newTree);\r\n            var newChildren = void 0;\r\n            if (newChild.isEmpty()) {\r\n                newChildren = this.children.remove(front);\r\n            }\r\n            else {\r\n                newChildren = this.children.insert(front, newChild);\r\n            }\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Performs a depth first fold on this tree. Transforms a tree into a single\r\n     * value, given a function that operates on the path to a node, an optional\r\n     * current value, and a map of child names to folded subtrees\r\n     * @template V\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     */\r\n    ImmutableTree.prototype.fold = function (fn) {\r\n        return this.fold_(Path.Empty, fn);\r\n    };\r\n    /**\r\n     * Recursive helper for public-facing fold() method\r\n     * @template V\r\n     * @param {!Path} pathSoFar\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     * @private\r\n     */\r\n    ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {\r\n        var accum = {};\r\n        this.children.inorderTraversal(function (childKey, childTree) {\r\n            accum[childKey] = childTree.fold_(pathSoFar.child(childKey), fn);\r\n        });\r\n        return fn(pathSoFar, this.value, accum);\r\n    };\r\n    /**\r\n     * Find the first matching value on the given path. Return the result of applying f to it.\r\n     * @template V\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T):?V} f\r\n     * @return {?V}\r\n     */\r\n    ImmutableTree.prototype.findOnPath = function (path, f) {\r\n        return this.findOnPath_(path, Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {\r\n        var result = this.value ? f(pathSoFar, this.value) : false;\r\n        if (result) {\r\n            return result;\r\n        }\r\n        else {\r\n            if (pathToFollow.isEmpty()) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = pathToFollow.getFront();\r\n                var nextChild = this.children.get(front);\r\n                if (nextChild) {\r\n                    return nextChild.findOnPath_(pathToFollow.popFront(), pathSoFar.child(front), f);\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T)} f\r\n     * @returns {!ImmutableTree.<T>}\r\n     */\r\n    ImmutableTree.prototype.foreachOnPath = function (path, f) {\r\n        return this.foreachOnPath_(path, Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {\r\n        if (pathToFollow.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            if (this.value) {\r\n                f(currentRelativePath, this.value);\r\n            }\r\n            var front = pathToFollow.getFront();\r\n            var nextChild = this.children.get(front);\r\n            if (nextChild) {\r\n                return nextChild.foreachOnPath_(pathToFollow.popFront(), currentRelativePath.child(front), f);\r\n            }\r\n            else {\r\n                return ImmutableTree.Empty;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Calls the given function for each node in the tree that has a value.\r\n     *\r\n     * @param {function(!Path, !T)} f A function to be called with\r\n     *   the path from the root of the tree to a node, and the value at that node.\r\n     *   Called in depth-first order.\r\n     */\r\n    ImmutableTree.prototype.foreach = function (f) {\r\n        this.foreach_(Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            childTree.foreach_(currentRelativePath.child(childName), f);\r\n        });\r\n        if (this.value) {\r\n            f(currentRelativePath, this.value);\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {function(string, !T)} f\r\n     */\r\n    ImmutableTree.prototype.foreachChild = function (f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            if (childTree.value) {\r\n                f(childName, childTree.value);\r\n            }\r\n        });\r\n    };\r\n    ImmutableTree.Empty = new ImmutableTree(null);\r\n    return ImmutableTree;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar ListenComplete = /** @class */ (function () {\r\n    function ListenComplete(source, path) {\r\n        this.source = source;\r\n        this.path = path;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.LISTEN_COMPLETE;\r\n    }\r\n    ListenComplete.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            return new ListenComplete(this.source, Path.Empty);\r\n        }\r\n        else {\r\n            return new ListenComplete(this.source, this.path.popFront());\r\n        }\r\n    };\r\n    return ListenComplete;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!Node} snap\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar Overwrite = /** @class */ (function () {\r\n    function Overwrite(source, path, snap) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.snap = snap;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.OVERWRITE;\r\n    }\r\n    Overwrite.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            return new Overwrite(this.source, Path.Empty, this.snap.getImmediateChild(childName));\r\n        }\r\n        else {\r\n            return new Overwrite(this.source, this.path.popFront(), this.snap);\r\n        }\r\n    };\r\n    return Overwrite;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!ImmutableTree.<!Node>} children\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar Merge = /** @class */ (function () {\r\n    function Merge(\r\n    /**@inheritDoc */ source, \r\n    /**@inheritDoc */ path, \r\n    /**@inheritDoc */ children) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.children = children;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.MERGE;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Merge.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            var childTree = this.children.subtree(new Path(childName));\r\n            if (childTree.isEmpty()) {\r\n                // This child is unaffected\r\n                return null;\r\n            }\r\n            else if (childTree.value) {\r\n                // We have a snapshot for the child in question.  This becomes an overwrite of the child.\r\n                return new Overwrite(this.source, Path.Empty, childTree.value);\r\n            }\r\n            else {\r\n                // This is a merge at a deeper level\r\n                return new Merge(this.source, Path.Empty, childTree);\r\n            }\r\n        }\r\n        else {\r\n            util.assert(this.path.getFront() === childName, \"Can't get a merge for a child not on the path of the operation\");\r\n            return new Merge(this.source, this.path.popFront(), this.children);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Merge.prototype.toString = function () {\r\n        return ('Operation(' +\r\n            this.path +\r\n            ': ' +\r\n            this.source.toString() +\r\n            ' merge: ' +\r\n            this.children.toString() +\r\n            ')');\r\n    };\r\n    return Merge;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\r\nvar CacheNode = /** @class */ (function () {\r\n    /**\r\n     * @param {!Node} node_\r\n     * @param {boolean} fullyInitialized_\r\n     * @param {boolean} filtered_\r\n     */\r\n    function CacheNode(node_, fullyInitialized_, filtered_) {\r\n        this.node_ = node_;\r\n        this.fullyInitialized_ = fullyInitialized_;\r\n        this.filtered_ = filtered_;\r\n    }\r\n    /**\r\n     * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isFullyInitialized = function () {\r\n        return this.fullyInitialized_;\r\n    };\r\n    /**\r\n     * Returns whether this node is potentially missing children due to a filter applied to the node\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isFiltered = function () {\r\n        return this.filtered_;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isCompleteForPath = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this.isFullyInitialized() && !this.filtered_;\r\n        }\r\n        var childKey = path.getFront();\r\n        return this.isCompleteForChild(childKey);\r\n    };\r\n    /**\r\n     * @param {!string} key\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isCompleteForChild = function (key) {\r\n        return ((this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key));\r\n    };\r\n    /**\r\n     * @return {!Node}\r\n     */\r\n    CacheNode.prototype.getNode = function () {\r\n        return this.node_;\r\n    };\r\n    return CacheNode;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Stores the data we have cached for a view.\r\n *\r\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\r\n *\r\n * @constructor\r\n */\r\nvar ViewCache = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!CacheNode} eventCache_\r\n     * @param {!CacheNode} serverCache_\r\n     */\r\n    function ViewCache(eventCache_, serverCache_) {\r\n        this.eventCache_ = eventCache_;\r\n        this.serverCache_ = serverCache_;\r\n    }\r\n    /**\r\n     * @param {!Node} eventSnap\r\n     * @param {boolean} complete\r\n     * @param {boolean} filtered\r\n     * @return {!ViewCache}\r\n     */\r\n    ViewCache.prototype.updateEventSnap = function (eventSnap, complete, filtered) {\r\n        return new ViewCache(new CacheNode(eventSnap, complete, filtered), this.serverCache_);\r\n    };\r\n    /**\r\n     * @param {!Node} serverSnap\r\n     * @param {boolean} complete\r\n     * @param {boolean} filtered\r\n     * @return {!ViewCache}\r\n     */\r\n    ViewCache.prototype.updateServerSnap = function (serverSnap, complete, filtered) {\r\n        return new ViewCache(this.eventCache_, new CacheNode(serverSnap, complete, filtered));\r\n    };\r\n    /**\r\n     * @return {!CacheNode}\r\n     */\r\n    ViewCache.prototype.getEventCache = function () {\r\n        return this.eventCache_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    ViewCache.prototype.getCompleteEventSnap = function () {\r\n        return this.eventCache_.isFullyInitialized()\r\n            ? this.eventCache_.getNode()\r\n            : null;\r\n    };\r\n    /**\r\n     * @return {!CacheNode}\r\n     */\r\n    ViewCache.prototype.getServerCache = function () {\r\n        return this.serverCache_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    ViewCache.prototype.getCompleteServerSnap = function () {\r\n        return this.serverCache_.isFullyInitialized()\r\n            ? this.serverCache_.getNode()\r\n            : null;\r\n    };\r\n    /**\r\n     * @const\r\n     * @type {ViewCache}\r\n     */\r\n    ViewCache.Empty = new ViewCache(new CacheNode(ChildrenNode.EMPTY_NODE, \r\n    /*fullyInitialized=*/ false, \r\n    /*filtered=*/ false), new CacheNode(ChildrenNode.EMPTY_NODE, \r\n    /*fullyInitialized=*/ false, \r\n    /*filtered=*/ false));\r\n    return ViewCache;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @struct\r\n * @param {!string} type The event type\r\n * @param {!Node} snapshotNode The data\r\n * @param {string=} childName The name for this child, if it's a child event\r\n * @param {Node=} oldSnap Used for intermediate processing of child changed events\r\n * @param {string=} prevName The name for the previous child, if applicable\r\n */\r\nvar Change = /** @class */ (function () {\r\n    function Change(type, snapshotNode, childName, oldSnap, prevName) {\r\n        this.type = type;\r\n        this.snapshotNode = snapshotNode;\r\n        this.childName = childName;\r\n        this.oldSnap = oldSnap;\r\n        this.prevName = prevName;\r\n    }\r\n    /**\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.valueChange = function (snapshot) {\r\n        return new Change(Change.VALUE, snapshot);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childAddedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_ADDED, snapshot, childKey);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childRemovedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_REMOVED, snapshot, childKey);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} newSnapshot\r\n     * @param {!Node} oldSnapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childChangedChange = function (childKey, newSnapshot, oldSnapshot) {\r\n        return new Change(Change.CHILD_CHANGED, newSnapshot, childKey, oldSnapshot);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childMovedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_MOVED, snapshot, childKey);\r\n    };\r\n    //event types\r\n    /** Event type for a child added */\r\n    Change.CHILD_ADDED = 'child_added';\r\n    /** Event type for a child removed */\r\n    Change.CHILD_REMOVED = 'child_removed';\r\n    /** Event type for a child changed */\r\n    Change.CHILD_CHANGED = 'child_changed';\r\n    /** Event type for a child moved */\r\n    Change.CHILD_MOVED = 'child_moved';\r\n    /** Event type for a value change */\r\n    Change.VALUE = 'value';\r\n    return Change;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n * @param {!Index} index\r\n */\r\nvar IndexedFilter = /** @class */ (function () {\r\n    function IndexedFilter(index_) {\r\n        this.index_ = index_;\r\n    }\r\n    IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        util.assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\r\n        var oldChild = snap.getImmediateChild(key);\r\n        // Check if anything actually changed.\r\n        if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\r\n            // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\r\n            // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\r\n            // to avoid treating these cases as \"nothing changed.\"\r\n            if (oldChild.isEmpty() == newChild.isEmpty()) {\r\n                // Nothing changed.\r\n                // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\r\n                //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\r\n                return snap;\r\n            }\r\n        }\r\n        if (optChangeAccumulator != null) {\r\n            if (newChild.isEmpty()) {\r\n                if (snap.hasChild(key)) {\r\n                    optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, oldChild));\r\n                }\r\n                else {\r\n                    util.assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\r\n                }\r\n            }\r\n            else if (oldChild.isEmpty()) {\r\n                optChangeAccumulator.trackChildChange(Change.childAddedChange(key, newChild));\r\n            }\r\n            else {\r\n                optChangeAccumulator.trackChildChange(Change.childChangedChange(key, newChild, oldChild));\r\n            }\r\n        }\r\n        if (snap.isLeafNode() && newChild.isEmpty()) {\r\n            return snap;\r\n        }\r\n        else {\r\n            // Make sure the node is indexed\r\n            return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (optChangeAccumulator != null) {\r\n            if (!oldSnap.isLeafNode()) {\r\n                oldSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (!newSnap.hasChild(key)) {\r\n                        optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n            if (!newSnap.isLeafNode()) {\r\n                newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (oldSnap.hasChild(key)) {\r\n                        var oldChild = oldSnap.getImmediateChild(key);\r\n                        if (!oldChild.equals(childNode)) {\r\n                            optChangeAccumulator.trackChildChange(Change.childChangedChange(key, childNode, oldChild));\r\n                        }\r\n                    }\r\n                    else {\r\n                        optChangeAccumulator.trackChildChange(Change.childAddedChange(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return newSnap.withIndex(this.index_);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        if (oldSnap.isEmpty()) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        else {\r\n            return oldSnap.updatePriority(newPriority);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.filtersNodes = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.getIndexedFilter = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    return IndexedFilter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n */\r\nvar ChildChangeAccumulator = /** @class */ (function () {\r\n    function ChildChangeAccumulator() {\r\n        this.changeMap_ = {};\r\n    }\r\n    /**\r\n     * @param {!Change} change\r\n     */\r\n    ChildChangeAccumulator.prototype.trackChildChange = function (change) {\r\n        var type = change.type;\r\n        var childKey /** @type {!string} */ = change.childName;\r\n        util.assert(type == Change.CHILD_ADDED ||\r\n            type == Change.CHILD_CHANGED ||\r\n            type == Change.CHILD_REMOVED, 'Only child changes supported for tracking');\r\n        util.assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\r\n        var oldChange = util.safeGet(this.changeMap_, childKey);\r\n        if (oldChange) {\r\n            var oldType = oldChange.type;\r\n            if (type == Change.CHILD_ADDED && oldType == Change.CHILD_REMOVED) {\r\n                this.changeMap_[childKey] = Change.childChangedChange(childKey, change.snapshotNode, oldChange.snapshotNode);\r\n            }\r\n            else if (type == Change.CHILD_REMOVED &&\r\n                oldType == Change.CHILD_ADDED) {\r\n                delete this.changeMap_[childKey];\r\n            }\r\n            else if (type == Change.CHILD_REMOVED &&\r\n                oldType == Change.CHILD_CHANGED) {\r\n                this.changeMap_[childKey] = Change.childRemovedChange(childKey, oldChange.oldSnap);\r\n            }\r\n            else if (type == Change.CHILD_CHANGED &&\r\n                oldType == Change.CHILD_ADDED) {\r\n                this.changeMap_[childKey] = Change.childAddedChange(childKey, change.snapshotNode);\r\n            }\r\n            else if (type == Change.CHILD_CHANGED &&\r\n                oldType == Change.CHILD_CHANGED) {\r\n                this.changeMap_[childKey] = Change.childChangedChange(childKey, change.snapshotNode, oldChange.oldSnap);\r\n            }\r\n            else {\r\n                throw util.assertionError('Illegal combination of changes: ' +\r\n                    change +\r\n                    ' occurred after ' +\r\n                    oldChange);\r\n            }\r\n        }\r\n        else {\r\n            this.changeMap_[childKey] = change;\r\n        }\r\n    };\r\n    /**\r\n     * @return {!Array.<!Change>}\r\n     */\r\n    ChildChangeAccumulator.prototype.getChanges = function () {\r\n        return util.getValues(this.changeMap_);\r\n    };\r\n    return ChildChangeAccumulator;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n *\r\n * @private\r\n * @constructor\r\n * @implements CompleteChildSource\r\n */\r\nvar NoCompleteChildSource_ = /** @class */ (function () {\r\n    function NoCompleteChildSource_() {\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\r\n        return null;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        return null;\r\n    };\r\n    return NoCompleteChildSource_;\r\n}());\r\n/**\r\n * Singleton instance.\r\n * @const\r\n * @type {!CompleteChildSource}\r\n */\r\nvar NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\r\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n *\r\n *\r\n * @implements CompleteChildSource\r\n */\r\nvar WriteTreeCompleteChildSource = /** @class */ (function () {\r\n    /**\r\n     * @param {!WriteTreeRef} writes_\r\n     * @param {!ViewCache} viewCache_\r\n     * @param {?Node} optCompleteServerCache_\r\n     */\r\n    function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\r\n        if (optCompleteServerCache_ === void 0) { optCompleteServerCache_ = null; }\r\n        this.writes_ = writes_;\r\n        this.viewCache_ = viewCache_;\r\n        this.optCompleteServerCache_ = optCompleteServerCache_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\r\n        var node = this.viewCache_.getEventCache();\r\n        if (node.isCompleteForChild(childKey)) {\r\n            return node.getNode().getImmediateChild(childKey);\r\n        }\r\n        else {\r\n            var serverNode = this.optCompleteServerCache_ != null\r\n                ? new CacheNode(this.optCompleteServerCache_, true, false)\r\n                : this.viewCache_.getServerCache();\r\n            return this.writes_.calcCompleteChild(childKey, serverNode);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        var completeServerData = this.optCompleteServerCache_ != null\r\n            ? this.optCompleteServerCache_\r\n            : this.viewCache_.getCompleteServerSnap();\r\n        var nodes = this.writes_.calcIndexedSlice(completeServerData, child, 1, reverse, index);\r\n        if (nodes.length === 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return nodes[0];\r\n        }\r\n    };\r\n    return WriteTreeCompleteChildSource;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @struct\r\n */\r\nvar ProcessorResult = /** @class */ (function () {\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Array.<!Change>} changes\r\n     */\r\n    function ProcessorResult(viewCache, changes) {\r\n        this.viewCache = viewCache;\r\n        this.changes = changes;\r\n    }\r\n    return ProcessorResult;\r\n}());\r\n/**\r\n * @constructor\r\n */\r\nvar ViewProcessor = /** @class */ (function () {\r\n    /**\r\n     * @param {!NodeFilter} filter_\r\n     */\r\n    function ViewProcessor(filter_) {\r\n        this.filter_ = filter_;\r\n    }\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     */\r\n    ViewProcessor.prototype.assertIndexed = function (viewCache) {\r\n        util.assert(viewCache\r\n            .getEventCache()\r\n            .getNode()\r\n            .isIndexed(this.filter_.getIndex()), 'Event snap not indexed');\r\n        util.assert(viewCache\r\n            .getServerCache()\r\n            .getNode()\r\n            .isIndexed(this.filter_.getIndex()), 'Server snap not indexed');\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @return {!ProcessorResult}\r\n     */\r\n    ViewProcessor.prototype.applyOperation = function (oldViewCache, operation, writesCache, completeCache) {\r\n        var accumulator = new ChildChangeAccumulator();\r\n        var newViewCache, filterServerNode;\r\n        if (operation.type === OperationType.OVERWRITE) {\r\n            var overwrite = operation;\r\n            if (overwrite.source.fromUser) {\r\n                newViewCache = this.applyUserOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                util.assert(overwrite.source.fromServer, 'Unknown source.');\r\n                // We filter the node if it's a tagged update or the node has been previously filtered  and the\r\n                // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\r\n                // again\r\n                filterServerNode =\r\n                    overwrite.source.tagged ||\r\n                        (oldViewCache.getServerCache().isFiltered() &&\r\n                            !overwrite.path.isEmpty());\r\n                newViewCache = this.applyServerOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.MERGE) {\r\n            var merge = operation;\r\n            if (merge.source.fromUser) {\r\n                newViewCache = this.applyUserMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                util.assert(merge.source.fromServer, 'Unknown source.');\r\n                // We filter the node if it's a tagged update or the node has been previously filtered\r\n                filterServerNode =\r\n                    merge.source.tagged || oldViewCache.getServerCache().isFiltered();\r\n                newViewCache = this.applyServerMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.ACK_USER_WRITE) {\r\n            var ackUserWrite = operation;\r\n            if (!ackUserWrite.revert) {\r\n                newViewCache = this.ackUserWrite_(oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                newViewCache = this.revertUserWrite_(oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.LISTEN_COMPLETE) {\r\n            newViewCache = this.listenComplete_(oldViewCache, operation.path, writesCache, accumulator);\r\n        }\r\n        else {\r\n            throw util.assertionError('Unknown operation type: ' + operation.type);\r\n        }\r\n        var changes = accumulator.getChanges();\r\n        ViewProcessor.maybeAddValueEvent_(oldViewCache, newViewCache, changes);\r\n        return new ProcessorResult(newViewCache, changes);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!ViewCache} newViewCache\r\n     * @param {!Array.<!Change>} accumulator\r\n     * @private\r\n     */\r\n    ViewProcessor.maybeAddValueEvent_ = function (oldViewCache, newViewCache, accumulator) {\r\n        var eventSnap = newViewCache.getEventCache();\r\n        if (eventSnap.isFullyInitialized()) {\r\n            var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\r\n            var oldCompleteSnap = oldViewCache.getCompleteEventSnap();\r\n            if (accumulator.length > 0 ||\r\n                !oldViewCache.getEventCache().isFullyInitialized() ||\r\n                (isLeafOrEmpty &&\r\n                    !eventSnap\r\n                        .getNode()\r\n                        .equals(/** @type {!Node} */ (oldCompleteSnap))) ||\r\n                !eventSnap\r\n                    .getNode()\r\n                    .getPriority()\r\n                    .equals(oldCompleteSnap.getPriority())) {\r\n                accumulator.push(Change.valueChange(\r\n                /** @type {!Node} */ newViewCache.getCompleteEventSnap()));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} changePath\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!CompleteChildSource} source\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.generateEventCacheAfterServerEvent_ = function (viewCache, changePath, writesCache, source, accumulator) {\r\n        var oldEventSnap = viewCache.getEventCache();\r\n        if (writesCache.shadowingWrite(changePath) != null) {\r\n            // we have a shadowing write, ignore changes\r\n            return viewCache;\r\n        }\r\n        else {\r\n            var newEventCache = void 0, serverNode = void 0;\r\n            if (changePath.isEmpty()) {\r\n                // TODO: figure out how this plays with \"sliding ack windows\"\r\n                util.assert(viewCache.getServerCache().isFullyInitialized(), 'If change path is empty, we must have complete server data');\r\n                if (viewCache.getServerCache().isFiltered()) {\r\n                    // We need to special case this, because we need to only apply writes to complete children, or\r\n                    // we might end up raising events for incomplete children. If the server data is filtered deep\r\n                    // writes cannot be guaranteed to be complete\r\n                    var serverCache = viewCache.getCompleteServerSnap();\r\n                    var completeChildren = serverCache instanceof ChildrenNode\r\n                        ? serverCache\r\n                        : ChildrenNode.EMPTY_NODE;\r\n                    var completeEventChildren = writesCache.calcCompleteEventChildren(completeChildren);\r\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeEventChildren, accumulator);\r\n                }\r\n                else {\r\n                    var completeNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeNode, accumulator);\r\n                }\r\n            }\r\n            else {\r\n                var childKey = changePath.getFront();\r\n                if (childKey == '.priority') {\r\n                    util.assert(changePath.getLength() == 1, \"Can't have a priority with additional path components\");\r\n                    var oldEventNode = oldEventSnap.getNode();\r\n                    serverNode = viewCache.getServerCache().getNode();\r\n                    // we might have overwrites for this priority\r\n                    var updatedPriority = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventNode, serverNode);\r\n                    if (updatedPriority != null) {\r\n                        newEventCache = this.filter_.updatePriority(oldEventNode, updatedPriority);\r\n                    }\r\n                    else {\r\n                        // priority didn't change, keep old node\r\n                        newEventCache = oldEventSnap.getNode();\r\n                    }\r\n                }\r\n                else {\r\n                    var childChangePath = changePath.popFront();\r\n                    // update child\r\n                    var newEventChild = void 0;\r\n                    if (oldEventSnap.isCompleteForChild(childKey)) {\r\n                        serverNode = viewCache.getServerCache().getNode();\r\n                        var eventChildUpdate = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventSnap.getNode(), serverNode);\r\n                        if (eventChildUpdate != null) {\r\n                            newEventChild = oldEventSnap\r\n                                .getNode()\r\n                                .getImmediateChild(childKey)\r\n                                .updateChild(childChangePath, eventChildUpdate);\r\n                        }\r\n                        else {\r\n                            // Nothing changed, just keep the old child\r\n                            newEventChild = oldEventSnap\r\n                                .getNode()\r\n                                .getImmediateChild(childKey);\r\n                        }\r\n                    }\r\n                    else {\r\n                        newEventChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\r\n                    }\r\n                    if (newEventChild != null) {\r\n                        newEventCache = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\r\n                    }\r\n                    else {\r\n                        // no complete child available or no change\r\n                        newEventCache = oldEventSnap.getNode();\r\n                    }\r\n                }\r\n            }\r\n            return viewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized() || changePath.isEmpty(), this.filter_.filtersNodes());\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyServerOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\r\n        var oldServerSnap = oldViewCache.getServerCache();\r\n        var newServerCache;\r\n        var serverFilter = filterServerNode\r\n            ? this.filter_\r\n            : this.filter_.getIndexedFilter();\r\n        if (changePath.isEmpty()) {\r\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\r\n        }\r\n        else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\r\n            // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\r\n            var newServerNode = oldServerSnap\r\n                .getNode()\r\n                .updateChild(changePath, changedSnap);\r\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\r\n        }\r\n        else {\r\n            var childKey = changePath.getFront();\r\n            if (!oldServerSnap.isCompleteForPath(changePath) &&\r\n                changePath.getLength() > 1) {\r\n                // We don't update incomplete nodes with updates intended for other listeners\r\n                return oldViewCache;\r\n            }\r\n            var childChangePath = changePath.popFront();\r\n            var childNode = oldServerSnap.getNode().getImmediateChild(childKey);\r\n            var newChildNode = childNode.updateChild(childChangePath, changedSnap);\r\n            if (childKey == '.priority') {\r\n                newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\r\n            }\r\n            else {\r\n                newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\r\n            }\r\n        }\r\n        var newViewCache = oldViewCache.updateServerSnap(newServerCache, oldServerSnap.isFullyInitialized() || changePath.isEmpty(), serverFilter.filtersNodes());\r\n        var source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\r\n        return this.generateEventCacheAfterServerEvent_(newViewCache, changePath, writesCache, source, accumulator);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyUserOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\r\n        var oldEventSnap = oldViewCache.getEventCache();\r\n        var newViewCache, newEventCache;\r\n        var source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\r\n        if (changePath.isEmpty()) {\r\n            newEventCache = this.filter_.updateFullNode(oldViewCache.getEventCache().getNode(), changedSnap, accumulator);\r\n            newViewCache = oldViewCache.updateEventSnap(newEventCache, true, this.filter_.filtersNodes());\r\n        }\r\n        else {\r\n            var childKey = changePath.getFront();\r\n            if (childKey === '.priority') {\r\n                newEventCache = this.filter_.updatePriority(oldViewCache.getEventCache().getNode(), changedSnap);\r\n                newViewCache = oldViewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\r\n            }\r\n            else {\r\n                var childChangePath = changePath.popFront();\r\n                var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\r\n                var newChild = void 0;\r\n                if (childChangePath.isEmpty()) {\r\n                    // Child overwrite, we can replace the child\r\n                    newChild = changedSnap;\r\n                }\r\n                else {\r\n                    var childNode = source.getCompleteChild(childKey);\r\n                    if (childNode != null) {\r\n                        if (childChangePath.getBack() === '.priority' &&\r\n                            childNode.getChild(childChangePath.parent()).isEmpty()) {\r\n                            // This is a priority update on an empty node. If this node exists on the server, the\r\n                            // server will send down the priority in the update, so ignore for now\r\n                            newChild = childNode;\r\n                        }\r\n                        else {\r\n                            newChild = childNode.updateChild(childChangePath, changedSnap);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // There is no complete child node available\r\n                        newChild = ChildrenNode.EMPTY_NODE;\r\n                    }\r\n                }\r\n                if (!oldChild.equals(newChild)) {\r\n                    var newEventSnap = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\r\n                    newViewCache = oldViewCache.updateEventSnap(newEventSnap, oldEventSnap.isFullyInitialized(), this.filter_.filtersNodes());\r\n                }\r\n                else {\r\n                    newViewCache = oldViewCache;\r\n                }\r\n            }\r\n        }\r\n        return newViewCache;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {string} childKey\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    ViewProcessor.cacheHasChild_ = function (viewCache, childKey) {\r\n        return viewCache.getEventCache().isCompleteForChild(childKey);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyUserMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\r\n        var _this = this;\r\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n        // window leaving room for new items.  It's important we process these changes first, so we\r\n        // iterate the changes twice, first processing any that affect items currently in view.\r\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n        // not the other.\r\n        var curViewCache = viewCache;\r\n        changedChildren.foreach(function (relativePath, childNode) {\r\n            var writePath = path.child(relativePath);\r\n            if (ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\r\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n            }\r\n        });\r\n        changedChildren.foreach(function (relativePath, childNode) {\r\n            var writePath = path.child(relativePath);\r\n            if (!ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\r\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n            }\r\n        });\r\n        return curViewCache;\r\n    };\r\n    /**\r\n     * @param {!Node} node\r\n     * @param {ImmutableTree.<!Node>} merge\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyMerge_ = function (node, merge) {\r\n        merge.foreach(function (relativePath, childNode) {\r\n            node = node.updateChild(relativePath, childNode);\r\n        });\r\n        return node;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyServerMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\r\n        var _this = this;\r\n        // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\r\n        // wait for the complete data update coming soon.\r\n        if (viewCache\r\n            .getServerCache()\r\n            .getNode()\r\n            .isEmpty() &&\r\n            !viewCache.getServerCache().isFullyInitialized()) {\r\n            return viewCache;\r\n        }\r\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n        // window leaving room for new items.  It's important we process these changes first, so we\r\n        // iterate the changes twice, first processing any that affect items currently in view.\r\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n        // not the other.\r\n        var curViewCache = viewCache;\r\n        var viewMergeTree;\r\n        if (path.isEmpty()) {\r\n            viewMergeTree = changedChildren;\r\n        }\r\n        else {\r\n            viewMergeTree = ImmutableTree.Empty.setTree(path, changedChildren);\r\n        }\r\n        var serverNode = viewCache.getServerCache().getNode();\r\n        viewMergeTree.children.inorderTraversal(function (childKey, childTree) {\r\n            if (serverNode.hasChild(childKey)) {\r\n                var serverChild = viewCache\r\n                    .getServerCache()\r\n                    .getNode()\r\n                    .getImmediateChild(childKey);\r\n                var newChild = _this.applyMerge_(serverChild, childTree);\r\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n            }\r\n        });\r\n        viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {\r\n            var isUnknownDeepMerge = !viewCache.getServerCache().isCompleteForChild(childKey) &&\r\n                childMergeTree.value == null;\r\n            if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\r\n                var serverChild = viewCache\r\n                    .getServerCache()\r\n                    .getNode()\r\n                    .getImmediateChild(childKey);\r\n                var newChild = _this.applyMerge_(serverChild, childMergeTree);\r\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n            }\r\n        });\r\n        return curViewCache;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} ackPath\r\n     * @param {!ImmutableTree<!boolean>} affectedTree\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.ackUserWrite_ = function (viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\r\n        if (writesCache.shadowingWrite(ackPath) != null) {\r\n            return viewCache;\r\n        }\r\n        // Only filter server node if it is currently filtered\r\n        var filterServerNode = viewCache.getServerCache().isFiltered();\r\n        // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\r\n        // now that it won't be shadowed.\r\n        var serverCache = viewCache.getServerCache();\r\n        if (affectedTree.value != null) {\r\n            // This is an overwrite.\r\n            if ((ackPath.isEmpty() && serverCache.isFullyInitialized()) ||\r\n                serverCache.isCompleteForPath(ackPath)) {\r\n                return this.applyServerOverwrite_(viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n            else if (ackPath.isEmpty()) {\r\n                // This is a goofy edge case where we are acking data at this location but don't have full data.  We\r\n                // should just re-apply whatever we have in our cache as a merge.\r\n                var changedChildren_1 = ImmutableTree.Empty;\r\n                serverCache.getNode().forEachChild(KEY_INDEX, function (name, node) {\r\n                    changedChildren_1 = changedChildren_1.set(new Path(name), node);\r\n                });\r\n                return this.applyServerMerge_(viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n            else {\r\n                return viewCache;\r\n            }\r\n        }\r\n        else {\r\n            // This is a merge.\r\n            var changedChildren_2 = ImmutableTree.Empty;\r\n            affectedTree.foreach(function (mergePath, value) {\r\n                var serverCachePath = ackPath.child(mergePath);\r\n                if (serverCache.isCompleteForPath(serverCachePath)) {\r\n                    changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));\r\n                }\r\n            });\r\n            return this.applyServerMerge_(viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.listenComplete_ = function (viewCache, path, writesCache, accumulator) {\r\n        var oldServerNode = viewCache.getServerCache();\r\n        var newViewCache = viewCache.updateServerSnap(oldServerNode.getNode(), oldServerNode.isFullyInitialized() || path.isEmpty(), oldServerNode.isFiltered());\r\n        return this.generateEventCacheAfterServerEvent_(newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.revertUserWrite_ = function (viewCache, path, writesCache, completeServerCache, accumulator) {\r\n        var complete;\r\n        if (writesCache.shadowingWrite(path) != null) {\r\n            return viewCache;\r\n        }\r\n        else {\r\n            var source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\r\n            var oldEventCache = viewCache.getEventCache().getNode();\r\n            var newEventCache = void 0;\r\n            if (path.isEmpty() || path.getFront() === '.priority') {\r\n                var newNode = void 0;\r\n                if (viewCache.getServerCache().isFullyInitialized()) {\r\n                    newNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                }\r\n                else {\r\n                    var serverChildren = viewCache.getServerCache().getNode();\r\n                    util.assert(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\r\n                    newNode = writesCache.calcCompleteEventChildren(serverChildren);\r\n                }\r\n                newNode = newNode;\r\n                newEventCache = this.filter_.updateFullNode(oldEventCache, newNode, accumulator);\r\n            }\r\n            else {\r\n                var childKey = path.getFront();\r\n                var newChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\r\n                if (newChild == null &&\r\n                    viewCache.getServerCache().isCompleteForChild(childKey)) {\r\n                    newChild = oldEventCache.getImmediateChild(childKey);\r\n                }\r\n                if (newChild != null) {\r\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, newChild, path.popFront(), source, accumulator);\r\n                }\r\n                else if (viewCache\r\n                    .getEventCache()\r\n                    .getNode()\r\n                    .hasChild(childKey)) {\r\n                    // No complete child available, delete the existing one, if any\r\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, path.popFront(), source, accumulator);\r\n                }\r\n                else {\r\n                    newEventCache = oldEventCache;\r\n                }\r\n                if (newEventCache.isEmpty() &&\r\n                    viewCache.getServerCache().isFullyInitialized()) {\r\n                    // We might have reverted all child writes. Maybe the old event was a leaf node\r\n                    complete = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                    if (complete.isLeafNode()) {\r\n                        newEventCache = this.filter_.updateFullNode(newEventCache, complete, accumulator);\r\n                    }\r\n                }\r\n            }\r\n            complete =\r\n                viewCache.getServerCache().isFullyInitialized() ||\r\n                    writesCache.shadowingWrite(Path.Empty) != null;\r\n            return viewCache.updateEventSnap(newEventCache, complete, this.filter_.filtersNodes());\r\n        }\r\n    };\r\n    return ViewProcessor;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n * @constructor\r\n */\r\nvar EventGenerator = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Query} query_\r\n     */\r\n    function EventGenerator(query_) {\r\n        this.query_ = query_;\r\n        /**\r\n         * @private\r\n         * @type {!Index}\r\n         */\r\n        this.index_ = this.query_.getQueryParams().getIndex();\r\n    }\r\n    /**\r\n     * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n     * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n     *\r\n     * Notes:\r\n     *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n     *    our index.\r\n     *  - prevName will be calculated based on the index ordering.\r\n     *\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {!Array.<!EventRegistration>} eventRegistrations\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    EventGenerator.prototype.generateEventsForChanges = function (changes, eventCache, eventRegistrations) {\r\n        var _this = this;\r\n        var events = [];\r\n        var moves = [];\r\n        changes.forEach(function (change) {\r\n            if (change.type === Change.CHILD_CHANGED &&\r\n                _this.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\r\n                moves.push(Change.childMovedChange(change.childName, change.snapshotNode));\r\n            }\r\n        });\r\n        this.generateEventsForType_(events, Change.CHILD_REMOVED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_ADDED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_MOVED, moves, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_CHANGED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.VALUE, changes, eventRegistrations, eventCache);\r\n        return events;\r\n    };\r\n    /**\r\n     * Given changes of a single change type, generate the corresponding events.\r\n     *\r\n     * @param {!Array.<!Event>} events\r\n     * @param {!string} eventType\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Array.<!EventRegistration>} registrations\r\n     * @param {!Node} eventCache\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.generateEventsForType_ = function (events, eventType, changes, registrations, eventCache) {\r\n        var _this = this;\r\n        var filteredChanges = changes.filter(function (change) { return change.type === eventType; });\r\n        filteredChanges.sort(this.compareChanges_.bind(this));\r\n        filteredChanges.forEach(function (change) {\r\n            var materializedChange = _this.materializeSingleChange_(change, eventCache);\r\n            registrations.forEach(function (registration) {\r\n                if (registration.respondsTo(change.type)) {\r\n                    events.push(registration.createEvent(materializedChange, _this.query_));\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Change} change\r\n     * @param {!Node} eventCache\r\n     * @return {!Change}\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.materializeSingleChange_ = function (change, eventCache) {\r\n        if (change.type === 'value' || change.type === 'child_removed') {\r\n            return change;\r\n        }\r\n        else {\r\n            change.prevName = eventCache.getPredecessorChildName(\r\n            /** @type {!string} */\r\n            change.childName, change.snapshotNode, this.index_);\r\n            return change;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Change} a\r\n     * @param {!Change} b\r\n     * @return {number}\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.compareChanges_ = function (a, b) {\r\n        if (a.childName == null || b.childName == null) {\r\n            throw util.assertionError('Should only compare child_ events.');\r\n        }\r\n        var aWrapped = new NamedNode(a.childName, a.snapshotNode);\r\n        var bWrapped = new NamedNode(b.childName, b.snapshotNode);\r\n        return this.index_.compare(aWrapped, bWrapped);\r\n    };\r\n    return EventGenerator;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n * @constructor\r\n */\r\nvar View = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Query} query_\r\n     * @param {!ViewCache} initialViewCache\r\n     */\r\n    function View(query_, initialViewCache) {\r\n        this.query_ = query_;\r\n        this.eventRegistrations_ = [];\r\n        var params = this.query_.getQueryParams();\r\n        var indexFilter = new IndexedFilter(params.getIndex());\r\n        var filter = params.getNodeFilter();\r\n        /**\r\n         * @type {ViewProcessor}\r\n         * @private\r\n         */\r\n        this.processor_ = new ViewProcessor(filter);\r\n        var initialServerCache = initialViewCache.getServerCache();\r\n        var initialEventCache = initialViewCache.getEventCache();\r\n        // Don't filter server node with other filter than index, wait for tagged listen\r\n        var serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\r\n        var eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\r\n        var newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\r\n        var newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\r\n        /**\r\n         * @type {!ViewCache}\r\n         * @private\r\n         */\r\n        this.viewCache_ = new ViewCache(newEventCache, newServerCache);\r\n        /**\r\n         * @type {!EventGenerator}\r\n         * @private\r\n         */\r\n        this.eventGenerator_ = new EventGenerator(this.query_);\r\n    }\r\n    /**\r\n     * @return {!Query}\r\n     */\r\n    View.prototype.getQuery = function () {\r\n        return this.query_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    View.prototype.getServerCache = function () {\r\n        return this.viewCache_.getServerCache().getNode();\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    View.prototype.getCompleteServerCache = function (path) {\r\n        var cache = this.viewCache_.getCompleteServerSnap();\r\n        if (cache) {\r\n            // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\r\n            // we need to see if it contains the child we're interested in.\r\n            if (this.query_.getQueryParams().loadsAllData() ||\r\n                (!path.isEmpty() && !cache.getImmediateChild(path.getFront()).isEmpty())) {\r\n                return cache.getChild(path);\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    View.prototype.isEmpty = function () {\r\n        return this.eventRegistrations_.length === 0;\r\n    };\r\n    /**\r\n     * @param {!EventRegistration} eventRegistration\r\n     */\r\n    View.prototype.addEventRegistration = function (eventRegistration) {\r\n        this.eventRegistrations_.push(eventRegistration);\r\n    };\r\n    /**\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\r\n     */\r\n    View.prototype.removeEventRegistration = function (eventRegistration, cancelError) {\r\n        var cancelEvents = [];\r\n        if (cancelError) {\r\n            util.assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\r\n            var path_1 = this.query_.path;\r\n            this.eventRegistrations_.forEach(function (registration) {\r\n                cancelError /** @type {!Error} */ = cancelError;\r\n                var maybeEvent = registration.createCancelEvent(cancelError, path_1);\r\n                if (maybeEvent) {\r\n                    cancelEvents.push(maybeEvent);\r\n                }\r\n            });\r\n        }\r\n        if (eventRegistration) {\r\n            var remaining = [];\r\n            for (var i = 0; i < this.eventRegistrations_.length; ++i) {\r\n                var existing = this.eventRegistrations_[i];\r\n                if (!existing.matches(eventRegistration)) {\r\n                    remaining.push(existing);\r\n                }\r\n                else if (eventRegistration.hasAnyCallback()) {\r\n                    // We're removing just this one\r\n                    remaining = remaining.concat(this.eventRegistrations_.slice(i + 1));\r\n                    break;\r\n                }\r\n            }\r\n            this.eventRegistrations_ = remaining;\r\n        }\r\n        else {\r\n            this.eventRegistrations_ = [];\r\n        }\r\n        return cancelEvents;\r\n    };\r\n    /**\r\n     * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n     *\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.applyOperation = function (operation, writesCache, completeServerCache) {\r\n        if (operation.type === OperationType.MERGE &&\r\n            operation.source.queryId !== null) {\r\n            util.assert(this.viewCache_.getCompleteServerSnap(), 'We should always have a full cache before handling merges');\r\n            util.assert(this.viewCache_.getCompleteEventSnap(), 'Missing event cache, even though we have a server cache');\r\n        }\r\n        var oldViewCache = this.viewCache_;\r\n        var result = this.processor_.applyOperation(oldViewCache, operation, writesCache, completeServerCache);\r\n        this.processor_.assertIndexed(result.viewCache);\r\n        util.assert(result.viewCache.getServerCache().isFullyInitialized() ||\r\n            !oldViewCache.getServerCache().isFullyInitialized(), 'Once a server snap is complete, it should never go back');\r\n        this.viewCache_ = result.viewCache;\r\n        return this.generateEventsForChanges_(result.changes, result.viewCache.getEventCache().getNode(), null);\r\n    };\r\n    /**\r\n     * @param {!EventRegistration} registration\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.getInitialEvents = function (registration) {\r\n        var eventSnap = this.viewCache_.getEventCache();\r\n        var initialChanges = [];\r\n        if (!eventSnap.getNode().isLeafNode()) {\r\n            var eventNode = eventSnap.getNode();\r\n            eventNode.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                initialChanges.push(Change.childAddedChange(key, childNode));\r\n            });\r\n        }\r\n        if (eventSnap.isFullyInitialized()) {\r\n            initialChanges.push(Change.valueChange(eventSnap.getNode()));\r\n        }\r\n        return this.generateEventsForChanges_(initialChanges, eventSnap.getNode(), registration);\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {EventRegistration=} eventRegistration\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.generateEventsForChanges_ = function (changes, eventCache, eventRegistration) {\r\n        var registrations = eventRegistration\r\n            ? [eventRegistration]\r\n            : this.eventRegistrations_;\r\n        return this.eventGenerator_.generateEventsForChanges(changes, eventCache, registrations);\r\n    };\r\n    return View;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __referenceConstructor$1;\r\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\r\nvar SyncPoint = /** @class */ (function () {\r\n    function SyncPoint() {\r\n        /**\r\n         * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n         * queryId and the value is the View for that query.\r\n         *\r\n         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n         *\r\n         * @type {!Object.<!string, !View>}\r\n         * @private\r\n         */\r\n        this.views_ = {};\r\n    }\r\n    Object.defineProperty(SyncPoint, \"__referenceConstructor\", {\r\n        get: function () {\r\n            util.assert(__referenceConstructor$1, 'Reference.ts has not been loaded');\r\n            return __referenceConstructor$1;\r\n        },\r\n        set: function (val) {\r\n            util.assert(!__referenceConstructor$1, '__referenceConstructor has already been defined');\r\n            __referenceConstructor$1 = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    SyncPoint.prototype.isEmpty = function () {\r\n        return util.isEmpty(this.views_);\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} optCompleteServerCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    SyncPoint.prototype.applyOperation = function (operation, writesCache, optCompleteServerCache) {\r\n        var queryId = operation.source.queryId;\r\n        if (queryId !== null) {\r\n            var view = util.safeGet(this.views_, queryId);\r\n            util.assert(view != null, 'SyncTree gave us an op for an invalid query.');\r\n            return view.applyOperation(operation, writesCache, optCompleteServerCache);\r\n        }\r\n        else {\r\n            var events_1 = [];\r\n            util.forEach(this.views_, function (key, view) {\r\n                events_1 = events_1.concat(view.applyOperation(operation, writesCache, optCompleteServerCache));\r\n            });\r\n            return events_1;\r\n        }\r\n    };\r\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache Complete server cache, if we have it.\r\n     * @param {boolean} serverCacheComplete\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncPoint.prototype.addEventRegistration = function (query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\r\n        var queryId = query.queryIdentifier();\r\n        var view = util.safeGet(this.views_, queryId);\r\n        if (!view) {\r\n            // TODO: make writesCache take flag for complete server node\r\n            var eventCache = writesCache.calcCompleteEventCache(serverCacheComplete ? serverCache : null);\r\n            var eventCacheComplete = false;\r\n            if (eventCache) {\r\n                eventCacheComplete = true;\r\n            }\r\n            else if (serverCache instanceof ChildrenNode) {\r\n                eventCache = writesCache.calcCompleteEventChildren(serverCache);\r\n                eventCacheComplete = false;\r\n            }\r\n            else {\r\n                eventCache = ChildrenNode.EMPTY_NODE;\r\n                eventCacheComplete = false;\r\n            }\r\n            var viewCache = new ViewCache(new CacheNode(\r\n            /** @type {!Node} */ (eventCache), eventCacheComplete, false), new CacheNode(\r\n            /** @type {!Node} */ (serverCache), serverCacheComplete, false));\r\n            view = new View(query, viewCache);\r\n            this.views_[queryId] = view;\r\n        }\r\n        // This is guaranteed to exist now, we just created anything that was missing\r\n        view.addEventRegistration(eventRegistration);\r\n        return view.getInitialEvents(eventRegistration);\r\n    };\r\n    /**\r\n     * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n     *\r\n     * If query is the default query, we'll check all views for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n     *\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {{removed:!Array.<!Query>, events:!Array.<!Event>}} removed queries and any cancel events\r\n     */\r\n    SyncPoint.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\r\n        var queryId = query.queryIdentifier();\r\n        var removed = [];\r\n        var cancelEvents = [];\r\n        var hadCompleteView = this.hasCompleteView();\r\n        if (queryId === 'default') {\r\n            // When you do ref.off(...), we search all views for the registration to remove.\r\n            var self_1 = this;\r\n            util.forEach(this.views_, function (viewQueryId, view) {\r\n                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\r\n                if (view.isEmpty()) {\r\n                    delete self_1.views_[viewQueryId];\r\n                    // We'll deal with complete views later.\r\n                    if (!view\r\n                        .getQuery()\r\n                        .getQueryParams()\r\n                        .loadsAllData()) {\r\n                        removed.push(view.getQuery());\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            // remove the callback from the specific view.\r\n            var view = util.safeGet(this.views_, queryId);\r\n            if (view) {\r\n                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\r\n                if (view.isEmpty()) {\r\n                    delete this.views_[queryId];\r\n                    // We'll deal with complete views later.\r\n                    if (!view\r\n                        .getQuery()\r\n                        .getQueryParams()\r\n                        .loadsAllData()) {\r\n                        removed.push(view.getQuery());\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (hadCompleteView && !this.hasCompleteView()) {\r\n            // We removed our last complete view.\r\n            removed.push(new SyncPoint.__referenceConstructor(query.repo, query.path));\r\n        }\r\n        return { removed: removed, events: cancelEvents };\r\n    };\r\n    /**\r\n     * @return {!Array.<!View>}\r\n     */\r\n    SyncPoint.prototype.getQueryViews = function () {\r\n        var _this = this;\r\n        var values = Object.keys(this.views_).map(function (key) { return _this.views_[key]; });\r\n        return values.filter(function (view) {\r\n            return !view\r\n                .getQuery()\r\n                .getQueryParams()\r\n                .loadsAllData();\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} path The path to the desired complete snapshot\r\n     * @return {?Node} A complete cache, if it exists\r\n     */\r\n    SyncPoint.prototype.getCompleteServerCache = function (path) {\r\n        var serverCache = null;\r\n        util.forEach(this.views_, function (key, view) {\r\n            serverCache = serverCache || view.getCompleteServerCache(path);\r\n        });\r\n        return serverCache;\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @return {?View}\r\n     */\r\n    SyncPoint.prototype.viewForQuery = function (query) {\r\n        var params = query.getQueryParams();\r\n        if (params.loadsAllData()) {\r\n            return this.getCompleteView();\r\n        }\r\n        else {\r\n            var queryId = query.queryIdentifier();\r\n            return util.safeGet(this.views_, queryId);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @return {boolean}\r\n     */\r\n    SyncPoint.prototype.viewExistsForQuery = function (query) {\r\n        return this.viewForQuery(query) != null;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    SyncPoint.prototype.hasCompleteView = function () {\r\n        return this.getCompleteView() != null;\r\n    };\r\n    /**\r\n     * @return {?View}\r\n     */\r\n    SyncPoint.prototype.getCompleteView = function () {\r\n        var completeView = util.findValue(this.views_, function (view) {\r\n            return view\r\n                .getQuery()\r\n                .getQueryParams()\r\n                .loadsAllData();\r\n        });\r\n        return completeView || null;\r\n    };\r\n    return SyncPoint;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n *\r\n * @constructor\r\n * @param {!ImmutableTree.<!Node>} writeTree\r\n */\r\nvar CompoundWrite = /** @class */ (function () {\r\n    function CompoundWrite(writeTree_) {\r\n        this.writeTree_ = writeTree_;\r\n    }\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!Node} node\r\n     * @return {!CompoundWrite}\r\n     */\r\n    CompoundWrite.prototype.addWrite = function (path, node) {\r\n        if (path.isEmpty()) {\r\n            return new CompoundWrite(new ImmutableTree(node));\r\n        }\r\n        else {\r\n            var rootmost = this.writeTree_.findRootMostValueAndPath(path);\r\n            if (rootmost != null) {\r\n                var rootMostPath = rootmost.path;\r\n                var value = rootmost.value;\r\n                var relativePath = Path.relativePath(rootMostPath, path);\r\n                value = value.updateChild(relativePath, node);\r\n                return new CompoundWrite(this.writeTree_.set(rootMostPath, value));\r\n            }\r\n            else {\r\n                var subtree = new ImmutableTree(node);\r\n                var newWriteTree = this.writeTree_.setTree(path, subtree);\r\n                return new CompoundWrite(newWriteTree);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} updates\r\n     * @return {!CompoundWrite}\r\n     */\r\n    CompoundWrite.prototype.addWrites = function (path, updates) {\r\n        var newWrite = this;\r\n        util.forEach(updates, function (childKey, node) {\r\n            newWrite = newWrite.addWrite(path.child(childKey), node);\r\n        });\r\n        return newWrite;\r\n    };\r\n    /**\r\n     * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n     * location, which must be removed by calling this method with that path.\r\n     *\r\n     * @param {!Path} path The path at which a write and all deeper writes should be removed\r\n     * @return {!CompoundWrite} The new CompoundWrite with the removed path\r\n     */\r\n    CompoundWrite.prototype.removeWrite = function (path) {\r\n        if (path.isEmpty()) {\r\n            return CompoundWrite.Empty;\r\n        }\r\n        else {\r\n            var newWriteTree = this.writeTree_.setTree(path, ImmutableTree.Empty);\r\n            return new CompoundWrite(newWriteTree);\r\n        }\r\n    };\r\n    /**\r\n     * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n     * considered \"complete\".\r\n     *\r\n     * @param {!Path} path The path to check for\r\n     * @return {boolean} Whether there is a complete write at that path\r\n     */\r\n    CompoundWrite.prototype.hasCompleteWrite = function (path) {\r\n        return this.getCompleteNode(path) != null;\r\n    };\r\n    /**\r\n     * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n     * writes from deeper paths, but will return child nodes from a more shallow path.\r\n     *\r\n     * @param {!Path} path The path to get a complete write\r\n     * @return {?Node} The node if complete at that path, or null otherwise.\r\n     */\r\n    CompoundWrite.prototype.getCompleteNode = function (path) {\r\n        var rootmost = this.writeTree_.findRootMostValueAndPath(path);\r\n        if (rootmost != null) {\r\n            return this.writeTree_\r\n                .get(rootmost.path)\r\n                .getChild(Path.relativePath(rootmost.path, path));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Returns all children that are guaranteed to be a complete overwrite.\r\n     *\r\n     * @return {!Array.<NamedNode>} A list of all complete children.\r\n     */\r\n    CompoundWrite.prototype.getCompleteChildren = function () {\r\n        var children = [];\r\n        var node = this.writeTree_.value;\r\n        if (node != null) {\r\n            // If it's a leaf node, it has no children; so nothing to do.\r\n            if (!node.isLeafNode()) {\r\n                node.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                    children.push(new NamedNode(childName, childNode));\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this.writeTree_.children.inorderTraversal(function (childName, childTree) {\r\n                if (childTree.value != null) {\r\n                    children.push(new NamedNode(childName, childTree.value));\r\n                }\r\n            });\r\n        }\r\n        return children;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {!CompoundWrite}\r\n     */\r\n    CompoundWrite.prototype.childCompoundWrite = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            var shadowingNode = this.getCompleteNode(path);\r\n            if (shadowingNode != null) {\r\n                return new CompoundWrite(new ImmutableTree(shadowingNode));\r\n            }\r\n            else {\r\n                return new CompoundWrite(this.writeTree_.subtree(path));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n     * @return {boolean} Whether this CompoundWrite is empty\r\n     */\r\n    CompoundWrite.prototype.isEmpty = function () {\r\n        return this.writeTree_.isEmpty();\r\n    };\r\n    /**\r\n     * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n     * node\r\n     * @param {!Node} node The node to apply this CompoundWrite to\r\n     * @return {!Node} The node with all writes applied\r\n     */\r\n    CompoundWrite.prototype.apply = function (node) {\r\n        return CompoundWrite.applySubtreeWrite_(Path.Empty, this.writeTree_, node);\r\n    };\r\n    /**\r\n     * @type {!CompoundWrite}\r\n     */\r\n    CompoundWrite.Empty = new CompoundWrite(new ImmutableTree(null));\r\n    /**\r\n     * @param {!Path} relativePath\r\n     * @param {!ImmutableTree.<!Node>} writeTree\r\n     * @param {!Node} node\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    CompoundWrite.applySubtreeWrite_ = function (relativePath, writeTree, node) {\r\n        if (writeTree.value != null) {\r\n            // Since there a write is always a leaf, we're done here\r\n            return node.updateChild(relativePath, writeTree.value);\r\n        }\r\n        else {\r\n            var priorityWrite_1 = null;\r\n            writeTree.children.inorderTraversal(function (childKey, childTree) {\r\n                if (childKey === '.priority') {\r\n                    // Apply priorities at the end so we don't update priorities for either empty nodes or forget\r\n                    // to apply priorities to empty nodes that are later filled\r\n                    util.assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\r\n                    priorityWrite_1 = childTree.value;\r\n                }\r\n                else {\r\n                    node = CompoundWrite.applySubtreeWrite_(relativePath.child(childKey), childTree, node);\r\n                }\r\n            });\r\n            // If there was a priority write, we only apply it if the node is not empty\r\n            if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {\r\n                node = node.updateChild(relativePath.child('.priority'), priorityWrite_1);\r\n            }\r\n            return node;\r\n        }\r\n    };\r\n    return CompoundWrite;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\r\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\r\n * and addMerge(), and removed with removeWrite().\r\n *\r\n * @constructor\r\n */\r\nvar WriteTree = /** @class */ (function () {\r\n    function WriteTree() {\r\n        /**\r\n         * A tree tracking the result of applying all visible writes.  This does not include transactions with\r\n         * applyLocally=false or writes that are completely shadowed by other writes.\r\n         *\r\n         * @type {!CompoundWrite}\r\n         * @private\r\n         */\r\n        this.visibleWrites_ = CompoundWrite.Empty;\r\n        /**\r\n         * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\r\n         * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\r\n         * used by transactions).\r\n         *\r\n         * @type {!Array.<!WriteRecord>}\r\n         * @private\r\n         */\r\n        this.allWrites_ = [];\r\n        this.lastWriteId_ = -1;\r\n    }\r\n    /**\r\n     * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {!WriteTreeRef}\r\n     */\r\n    WriteTree.prototype.childWrites = function (path) {\r\n        return new WriteTreeRef(path, this);\r\n    };\r\n    /**\r\n     * Record a new overwrite from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} snap\r\n     * @param {!number} writeId\r\n     * @param {boolean=} visible This is set to false by some transactions. It should be excluded from event caches\r\n     */\r\n    WriteTree.prototype.addOverwrite = function (path, snap, writeId, visible) {\r\n        util.assert(writeId > this.lastWriteId_, 'Stacking an older write on top of newer ones');\r\n        if (visible === undefined) {\r\n            visible = true;\r\n        }\r\n        this.allWrites_.push({\r\n            path: path,\r\n            snap: snap,\r\n            writeId: writeId,\r\n            visible: visible\r\n        });\r\n        if (visible) {\r\n            this.visibleWrites_ = this.visibleWrites_.addWrite(path, snap);\r\n        }\r\n        this.lastWriteId_ = writeId;\r\n    };\r\n    /**\r\n     * Record a new merge from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} writeId\r\n     */\r\n    WriteTree.prototype.addMerge = function (path, changedChildren, writeId) {\r\n        util.assert(writeId > this.lastWriteId_, 'Stacking an older merge on top of newer ones');\r\n        this.allWrites_.push({\r\n            path: path,\r\n            children: changedChildren,\r\n            writeId: writeId,\r\n            visible: true\r\n        });\r\n        this.visibleWrites_ = this.visibleWrites_.addWrites(path, changedChildren);\r\n        this.lastWriteId_ = writeId;\r\n    };\r\n    /**\r\n     * @param {!number} writeId\r\n     * @return {?WriteRecord}\r\n     */\r\n    WriteTree.prototype.getWrite = function (writeId) {\r\n        for (var i = 0; i < this.allWrites_.length; i++) {\r\n            var record = this.allWrites_[i];\r\n            if (record.writeId === writeId) {\r\n                return record;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n     * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n     *\r\n     * @param {!number} writeId\r\n     * @return {boolean} true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n     * events as a result).\r\n     */\r\n    WriteTree.prototype.removeWrite = function (writeId) {\r\n        // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\r\n        // out of order.\r\n        //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\r\n        //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\r\n        var _this = this;\r\n        var idx = this.allWrites_.findIndex(function (s) {\r\n            return s.writeId === writeId;\r\n        });\r\n        util.assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\r\n        var writeToRemove = this.allWrites_[idx];\r\n        this.allWrites_.splice(idx, 1);\r\n        var removedWriteWasVisible = writeToRemove.visible;\r\n        var removedWriteOverlapsWithOtherWrites = false;\r\n        var i = this.allWrites_.length - 1;\r\n        while (removedWriteWasVisible && i >= 0) {\r\n            var currentWrite = this.allWrites_[i];\r\n            if (currentWrite.visible) {\r\n                if (i >= idx &&\r\n                    this.recordContainsPath_(currentWrite, writeToRemove.path)) {\r\n                    // The removed write was completely shadowed by a subsequent write.\r\n                    removedWriteWasVisible = false;\r\n                }\r\n                else if (writeToRemove.path.contains(currentWrite.path)) {\r\n                    // Either we're covering some writes or they're covering part of us (depending on which came first).\r\n                    removedWriteOverlapsWithOtherWrites = true;\r\n                }\r\n            }\r\n            i--;\r\n        }\r\n        if (!removedWriteWasVisible) {\r\n            return false;\r\n        }\r\n        else if (removedWriteOverlapsWithOtherWrites) {\r\n            // There's some shadowing going on. Just rebuild the visible writes from scratch.\r\n            this.resetTree_();\r\n            return true;\r\n        }\r\n        else {\r\n            // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\r\n            if (writeToRemove.snap) {\r\n                this.visibleWrites_ = this.visibleWrites_.removeWrite(writeToRemove.path);\r\n            }\r\n            else {\r\n                var children = writeToRemove.children;\r\n                util.forEach(children, function (childName) {\r\n                    _this.visibleWrites_ = _this.visibleWrites_.removeWrite(writeToRemove.path.child(childName));\r\n                });\r\n            }\r\n            return true;\r\n        }\r\n    };\r\n    /**\r\n     * Return a complete snapshot for the given path if there's visible write data at that path, else null.\r\n     * No server data is considered.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.getCompleteWriteData = function (path) {\r\n        return this.visibleWrites_.getCompleteNode(path);\r\n    };\r\n    /**\r\n     * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n     * writes), attempt to calculate a complete snapshot for the given path\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude An optional set to be excluded\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcCompleteEventCache = function (treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n        if (!writeIdsToExclude && !includeHiddenWrites) {\r\n            var shadowingNode = this.visibleWrites_.getCompleteNode(treePath);\r\n            if (shadowingNode != null) {\r\n                return shadowingNode;\r\n            }\r\n            else {\r\n                var subMerge = this.visibleWrites_.childCompoundWrite(treePath);\r\n                if (subMerge.isEmpty()) {\r\n                    return completeServerCache;\r\n                }\r\n                else if (completeServerCache == null &&\r\n                    !subMerge.hasCompleteWrite(Path.Empty)) {\r\n                    // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\r\n                    return null;\r\n                }\r\n                else {\r\n                    var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                    return subMerge.apply(layeredCache);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n            if (!includeHiddenWrites && merge.isEmpty()) {\r\n                return completeServerCache;\r\n            }\r\n            else {\r\n                // If the server cache is null, and we don't have a complete cache, we need to return null\r\n                if (!includeHiddenWrites &&\r\n                    completeServerCache == null &&\r\n                    !merge.hasCompleteWrite(Path.Empty)) {\r\n                    return null;\r\n                }\r\n                else {\r\n                    var filter = function (write) {\r\n                        return ((write.visible || includeHiddenWrites) &&\r\n                            (!writeIdsToExclude ||\r\n                                !~writeIdsToExclude.indexOf(write.writeId)) &&\r\n                            (write.path.contains(treePath) || treePath.contains(write.path)));\r\n                    };\r\n                    var mergeAtPath = WriteTree.layerTree_(this.allWrites_, filter, treePath);\r\n                    var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                    return mergeAtPath.apply(layeredCache);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n     * Used when creating new views, to pre-fill their complete event children snapshot.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */\r\n    WriteTree.prototype.calcCompleteEventChildren = function (treePath, completeServerChildren) {\r\n        var completeChildren = ChildrenNode.EMPTY_NODE;\r\n        var topLevelSet = this.visibleWrites_.getCompleteNode(treePath);\r\n        if (topLevelSet) {\r\n            if (!topLevelSet.isLeafNode()) {\r\n                // we're shadowing everything. Return the children.\r\n                topLevelSet.forEachChild(PRIORITY_INDEX, function (childName, childSnap) {\r\n                    completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\r\n                });\r\n            }\r\n            return completeChildren;\r\n        }\r\n        else if (completeServerChildren) {\r\n            // Layer any children we have on top of this\r\n            // We know we don't have a top-level set, so just enumerate existing children\r\n            var merge_1 = this.visibleWrites_.childCompoundWrite(treePath);\r\n            completeServerChildren.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                var node = merge_1\r\n                    .childCompoundWrite(new Path(childName))\r\n                    .apply(childNode);\r\n                completeChildren = completeChildren.updateImmediateChild(childName, node);\r\n            });\r\n            // Add any complete children we have from the set\r\n            merge_1.getCompleteChildren().forEach(function (namedNode) {\r\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n            });\r\n            return completeChildren;\r\n        }\r\n        else {\r\n            // We don't have anything to layer on top of. Layer on any children we have\r\n            // Note that we can return an empty snap if we have a defined delete\r\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n            merge.getCompleteChildren().forEach(function (namedNode) {\r\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n            });\r\n            return completeChildren;\r\n        }\r\n    };\r\n    /**\r\n     * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n     * applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!Path} childPath\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcEventCacheAfterServerOverwrite = function (treePath, childPath, existingEventSnap, existingServerSnap) {\r\n        util.assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\r\n        var path = treePath.child(childPath);\r\n        if (this.visibleWrites_.hasCompleteWrite(path)) {\r\n            // At this point we can probably guarantee that we're in case 2, meaning no events\r\n            // May need to check visibility while doing the findRootMostValueAndPath call\r\n            return null;\r\n        }\r\n        else {\r\n            // No complete shadowing. We're either partially shadowing or not shadowing at all.\r\n            var childMerge = this.visibleWrites_.childCompoundWrite(path);\r\n            if (childMerge.isEmpty()) {\r\n                // We're not shadowing at all. Case 1\r\n                return existingServerSnap.getChild(childPath);\r\n            }\r\n            else {\r\n                // This could be more efficient if the serverNode + updates doesn't change the eventSnap\r\n                // However this is tricky to find out, since user updates don't necessary change the server\r\n                // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\r\n                // adds nodes, but doesn't change any existing writes. It is therefore not enough to\r\n                // only check if the updates change the serverNode.\r\n                // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\r\n                return childMerge.apply(existingServerSnap.getChild(childPath));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcCompleteChild = function (treePath, childKey, existingServerSnap) {\r\n        var path = treePath.child(childKey);\r\n        var shadowingNode = this.visibleWrites_.getCompleteNode(path);\r\n        if (shadowingNode != null) {\r\n            return shadowingNode;\r\n        }\r\n        else {\r\n            if (existingServerSnap.isCompleteForChild(childKey)) {\r\n                var childMerge = this.visibleWrites_.childCompoundWrite(path);\r\n                return childMerge.apply(existingServerSnap.getNode().getImmediateChild(childKey));\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.shadowingWrite = function (path) {\r\n        return this.visibleWrites_.getCompleteNode(path);\r\n    };\r\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?Node} completeServerData\r\n     * @param {!NamedNode} startPost\r\n     * @param {!number} count\r\n     * @param {boolean} reverse\r\n     * @param {!Index} index\r\n     * @return {!Array.<!NamedNode>}\r\n     */\r\n    WriteTree.prototype.calcIndexedSlice = function (treePath, completeServerData, startPost, count, reverse, index) {\r\n        var toIterate;\r\n        var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n        var shadowingNode = merge.getCompleteNode(Path.Empty);\r\n        if (shadowingNode != null) {\r\n            toIterate = shadowingNode;\r\n        }\r\n        else if (completeServerData != null) {\r\n            toIterate = merge.apply(completeServerData);\r\n        }\r\n        else {\r\n            // no children to iterate on\r\n            return [];\r\n        }\r\n        toIterate = toIterate.withIndex(index);\r\n        if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\r\n            var nodes = [];\r\n            var cmp = index.getCompare();\r\n            var iter = reverse\r\n                ? toIterate.getReverseIteratorFrom(startPost, index)\r\n                : toIterate.getIteratorFrom(startPost, index);\r\n            var next = iter.getNext();\r\n            while (next && nodes.length < count) {\r\n                if (cmp(next, startPost) !== 0) {\r\n                    nodes.push(next);\r\n                }\r\n                next = iter.getNext();\r\n            }\r\n            return nodes;\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * @param {!WriteRecord} writeRecord\r\n     * @param {!Path} path\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    WriteTree.prototype.recordContainsPath_ = function (writeRecord, path) {\r\n        if (writeRecord.snap) {\r\n            return writeRecord.path.contains(path);\r\n        }\r\n        else {\r\n            // findKey can return undefined, so use !! to coerce to boolean\r\n            return !!util.findKey(writeRecord.children, function (childSnap, childName) {\r\n                return writeRecord.path.child(childName).contains(path);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n     * @private\r\n     */\r\n    WriteTree.prototype.resetTree_ = function () {\r\n        this.visibleWrites_ = WriteTree.layerTree_(this.allWrites_, WriteTree.DefaultFilter_, Path.Empty);\r\n        if (this.allWrites_.length > 0) {\r\n            this.lastWriteId_ = this.allWrites_[this.allWrites_.length - 1].writeId;\r\n        }\r\n        else {\r\n            this.lastWriteId_ = -1;\r\n        }\r\n    };\r\n    /**\r\n     * The default filter used when constructing the tree. Keep everything that's visible.\r\n     *\r\n     * @param {!WriteRecord} write\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    WriteTree.DefaultFilter_ = function (write) {\r\n        return write.visible;\r\n    };\r\n    /**\r\n     * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n     * event data at that path.\r\n     *\r\n     * @param {!Array.<!WriteRecord>} writes\r\n     * @param {!function(!WriteRecord):boolean} filter\r\n     * @param {!Path} treeRoot\r\n     * @return {!CompoundWrite}\r\n     * @private\r\n     */\r\n    WriteTree.layerTree_ = function (writes, filter, treeRoot) {\r\n        var compoundWrite = CompoundWrite.Empty;\r\n        for (var i = 0; i < writes.length; ++i) {\r\n            var write = writes[i];\r\n            // Theory, a later set will either:\r\n            // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\r\n            // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\r\n            if (filter(write)) {\r\n                var writePath = write.path;\r\n                var relativePath = void 0;\r\n                if (write.snap) {\r\n                    if (treeRoot.contains(writePath)) {\r\n                        relativePath = Path.relativePath(treeRoot, writePath);\r\n                        compoundWrite = compoundWrite.addWrite(relativePath, write.snap);\r\n                    }\r\n                    else if (writePath.contains(treeRoot)) {\r\n                        relativePath = Path.relativePath(writePath, treeRoot);\r\n                        compoundWrite = compoundWrite.addWrite(Path.Empty, write.snap.getChild(relativePath));\r\n                    }\r\n                    else {\r\n                        // There is no overlap between root path and write path, ignore write\r\n                    }\r\n                }\r\n                else if (write.children) {\r\n                    if (treeRoot.contains(writePath)) {\r\n                        relativePath = Path.relativePath(treeRoot, writePath);\r\n                        compoundWrite = compoundWrite.addWrites(relativePath, write.children);\r\n                    }\r\n                    else if (writePath.contains(treeRoot)) {\r\n                        relativePath = Path.relativePath(writePath, treeRoot);\r\n                        if (relativePath.isEmpty()) {\r\n                            compoundWrite = compoundWrite.addWrites(Path.Empty, write.children);\r\n                        }\r\n                        else {\r\n                            var child = util.safeGet(write.children, relativePath.getFront());\r\n                            if (child) {\r\n                                // There exists a child in this node that matches the root path\r\n                                var deepNode = child.getChild(relativePath.popFront());\r\n                                compoundWrite = compoundWrite.addWrite(Path.Empty, deepNode);\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        // There is no overlap between root path and write path, ignore write\r\n                    }\r\n                }\r\n                else {\r\n                    throw util.assertionError('WriteRecord should have .snap or .children');\r\n                }\r\n            }\r\n        }\r\n        return compoundWrite;\r\n    };\r\n    return WriteTree;\r\n}());\r\n/**\r\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\r\n * just proxy to the underlying WriteTree.\r\n *\r\n * @constructor\r\n */\r\nvar WriteTreeRef = /** @class */ (function () {\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!WriteTree} writeTree\r\n     */\r\n    function WriteTreeRef(path, writeTree) {\r\n        this.treePath_ = path;\r\n        this.writeTree_ = writeTree;\r\n    }\r\n    /**\r\n     * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n     * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n     * can lead to a more expensive calculation.\r\n     *\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude Optional writes to exclude.\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteEventCache = function (completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n        return this.writeTree_.calcCompleteEventCache(this.treePath_, completeServerCache, writeIdsToExclude, includeHiddenWrites);\r\n    };\r\n    /**\r\n     * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n     * mix of the given server data and write data.\r\n     *\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteEventChildren = function (completeServerChildren) {\r\n        return this.writeTree_.calcCompleteEventChildren(this.treePath_, completeServerChildren);\r\n    };\r\n    /**\r\n     * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n     * if anything, needs to be applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events should be raised\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n     *\r\n     * @param {!Path} path\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcEventCacheAfterServerOverwrite = function (path, existingEventSnap, existingServerSnap) {\r\n        return this.writeTree_.calcEventCacheAfterServerOverwrite(this.treePath_, path, existingEventSnap, existingServerSnap);\r\n    };\r\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.shadowingWrite = function (path) {\r\n        return this.writeTree_.shadowingWrite(this.treePath_.child(path));\r\n    };\r\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window\r\n     *\r\n     * @param {?Node} completeServerData\r\n     * @param {!NamedNode} startPost\r\n     * @param {!number} count\r\n     * @param {boolean} reverse\r\n     * @param {!Index} index\r\n     * @return {!Array.<!NamedNode>}\r\n     */\r\n    WriteTreeRef.prototype.calcIndexedSlice = function (completeServerData, startPost, count, reverse, index) {\r\n        return this.writeTree_.calcIndexedSlice(this.treePath_, completeServerData, startPost, count, reverse, index);\r\n    };\r\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerCache\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteChild = function (childKey, existingServerCache) {\r\n        return this.writeTree_.calcCompleteChild(this.treePath_, childKey, existingServerCache);\r\n    };\r\n    /**\r\n     * Return a WriteTreeRef for a child.\r\n     *\r\n     * @param {string} childName\r\n     * @return {!WriteTreeRef}\r\n     */\r\n    WriteTreeRef.prototype.child = function (childName) {\r\n        return new WriteTreeRef(this.treePath_.child(childName), this.writeTree_);\r\n    };\r\n    return WriteTreeRef;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n * @constructor\r\n */\r\nvar SyncTree = /** @class */ (function () {\r\n    /**\r\n     * @param {!ListenProvider} listenProvider_ Used by SyncTree to start / stop listening\r\n     *   to server data.\r\n     */\r\n    function SyncTree(listenProvider_) {\r\n        this.listenProvider_ = listenProvider_;\r\n        /**\r\n         * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n         * @type {!ImmutableTree.<!SyncPoint>}\r\n         * @private\r\n         */\r\n        this.syncPointTree_ = ImmutableTree.Empty;\r\n        /**\r\n         * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n         * @type {!WriteTree}\r\n         * @private\r\n         */\r\n        this.pendingWriteTree_ = new WriteTree();\r\n        this.tagToQueryMap_ = {};\r\n        this.queryToTagMap_ = {};\r\n    }\r\n    /**\r\n     * Apply the data changes for a user-generated set() or transaction() call.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} newData\r\n     * @param {number} writeId\r\n     * @param {boolean=} visible\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyUserOverwrite = function (path, newData, writeId, visible) {\r\n        // Record pending write.\r\n        this.pendingWriteTree_.addOverwrite(path, newData, writeId, visible);\r\n        if (!visible) {\r\n            return [];\r\n        }\r\n        else {\r\n            return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.User, path, newData));\r\n        }\r\n    };\r\n    /**\r\n     * Apply the data from a user-generated update() call\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} writeId\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyUserMerge = function (path, changedChildren, writeId) {\r\n        // Record pending merge.\r\n        this.pendingWriteTree_.addMerge(path, changedChildren, writeId);\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        return this.applyOperationToSyncPoints_(new Merge(OperationSource.User, path, changeTree));\r\n    };\r\n    /**\r\n     * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n     *\r\n     * @param {!number} writeId\r\n     * @param {boolean=} revert True if the given write failed and needs to be reverted\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.ackUserWrite = function (writeId, revert) {\r\n        if (revert === void 0) { revert = false; }\r\n        var write = this.pendingWriteTree_.getWrite(writeId);\r\n        var needToReevaluate = this.pendingWriteTree_.removeWrite(writeId);\r\n        if (!needToReevaluate) {\r\n            return [];\r\n        }\r\n        else {\r\n            var affectedTree_1 = ImmutableTree.Empty;\r\n            if (write.snap != null) {\r\n                // overwrite\r\n                affectedTree_1 = affectedTree_1.set(Path.Empty, true);\r\n            }\r\n            else {\r\n                util.forEach(write.children, function (pathString, node) {\r\n                    affectedTree_1 = affectedTree_1.set(new Path(pathString), node);\r\n                });\r\n            }\r\n            return this.applyOperationToSyncPoints_(new AckUserWrite(write.path, affectedTree_1, revert));\r\n        }\r\n    };\r\n    /**\r\n     * Apply new server data for the specified path..\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} newData\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyServerOverwrite = function (path, newData) {\r\n        return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.Server, path, newData));\r\n    };\r\n    /**\r\n     * Apply new server data to be merged in at the specified path.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyServerMerge = function (path, changedChildren) {\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        return this.applyOperationToSyncPoints_(new Merge(OperationSource.Server, path, changeTree));\r\n    };\r\n    /**\r\n     * Apply a listen complete for a query\r\n     *\r\n     * @param {!Path} path\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyListenComplete = function (path) {\r\n        return this.applyOperationToSyncPoints_(new ListenComplete(OperationSource.Server, path));\r\n    };\r\n    /**\r\n     * Apply new server data for the specified tagged query.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} snap\r\n     * @param {!number} tag\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedQueryOverwrite = function (path, snap, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey != null) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var op = new Overwrite(OperationSource.forServerTaggedQuery(queryId), relativePath, snap);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // Query must have been removed already\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Apply server data to be merged in for the specified tagged query.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} tag\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedQueryMerge = function (path, changedChildren, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var changeTree = ImmutableTree.fromObject(changedChildren);\r\n            var op = new Merge(OperationSource.forServerTaggedQuery(queryId), relativePath, changeTree);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // We've already removed the query. No big deal, ignore the update\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Apply a listen complete for a tagged query\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!number} tag\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedListenComplete = function (path, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var op = new ListenComplete(OperationSource.forServerTaggedQuery(queryId), relativePath);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // We've already removed the query. No big deal, ignore the update\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.addEventRegistration = function (query, eventRegistration) {\r\n        var path = query.path;\r\n        var serverCache = null;\r\n        var foundAncestorDefaultView = false;\r\n        // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n        // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n        this.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\r\n            var relativePath = Path.relativePath(pathToSyncPoint, path);\r\n            serverCache = serverCache || sp.getCompleteServerCache(relativePath);\r\n            foundAncestorDefaultView =\r\n                foundAncestorDefaultView || sp.hasCompleteView();\r\n        });\r\n        var syncPoint = this.syncPointTree_.get(path);\r\n        if (!syncPoint) {\r\n            syncPoint = new SyncPoint();\r\n            this.syncPointTree_ = this.syncPointTree_.set(path, syncPoint);\r\n        }\r\n        else {\r\n            foundAncestorDefaultView =\r\n                foundAncestorDefaultView || syncPoint.hasCompleteView();\r\n            serverCache = serverCache || syncPoint.getCompleteServerCache(Path.Empty);\r\n        }\r\n        var serverCacheComplete;\r\n        if (serverCache != null) {\r\n            serverCacheComplete = true;\r\n        }\r\n        else {\r\n            serverCacheComplete = false;\r\n            serverCache = ChildrenNode.EMPTY_NODE;\r\n            var subtree = this.syncPointTree_.subtree(path);\r\n            subtree.foreachChild(function (childName, childSyncPoint) {\r\n                var completeCache = childSyncPoint.getCompleteServerCache(Path.Empty);\r\n                if (completeCache) {\r\n                    serverCache = serverCache.updateImmediateChild(childName, completeCache);\r\n                }\r\n            });\r\n        }\r\n        var viewAlreadyExists = syncPoint.viewExistsForQuery(query);\r\n        if (!viewAlreadyExists && !query.getQueryParams().loadsAllData()) {\r\n            // We need to track a tag for this query\r\n            var queryKey = SyncTree.makeQueryKey_(query);\r\n            util.assert(!(queryKey in this.queryToTagMap_), 'View does not exist, but we have a tag');\r\n            var tag = SyncTree.getNextQueryTag_();\r\n            this.queryToTagMap_[queryKey] = tag;\r\n            // Coerce to string to avoid sparse arrays.\r\n            this.tagToQueryMap_['_' + tag] = queryKey;\r\n        }\r\n        var writesCache = this.pendingWriteTree_.childWrites(path);\r\n        var events = syncPoint.addEventRegistration(query, eventRegistration, writesCache, serverCache, serverCacheComplete);\r\n        if (!viewAlreadyExists && !foundAncestorDefaultView) {\r\n            var view /** @type !View */ = syncPoint.viewForQuery(query);\r\n            events = events.concat(this.setupListener_(query, view));\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     * Remove event callback(s).\r\n     *\r\n     * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration If null, all callbacks are removed.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\r\n     */\r\n    SyncTree.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\r\n        var _this = this;\r\n        // Find the syncPoint first. Then deal with whether or not it has matching listeners\r\n        var path = query.path;\r\n        var maybeSyncPoint = this.syncPointTree_.get(path);\r\n        var cancelEvents = [];\r\n        // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\r\n        // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\r\n        // not loadsAllData().\r\n        if (maybeSyncPoint &&\r\n            (query.queryIdentifier() === 'default' ||\r\n                maybeSyncPoint.viewExistsForQuery(query))) {\r\n            /**\r\n             * @type {{removed: !Array.<!Query>, events: !Array.<!Event>}}\r\n             */\r\n            var removedAndEvents = maybeSyncPoint.removeEventRegistration(query, eventRegistration, cancelError);\r\n            if (maybeSyncPoint.isEmpty()) {\r\n                this.syncPointTree_ = this.syncPointTree_.remove(path);\r\n            }\r\n            var removed = removedAndEvents.removed;\r\n            cancelEvents = removedAndEvents.events;\r\n            // We may have just removed one of many listeners and can short-circuit this whole process\r\n            // We may also not have removed a default listener, in which case all of the descendant listeners should already be\r\n            // properly set up.\r\n            //\r\n            // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\r\n            // queryId === 'default'\r\n            var removingDefault = -1 !==\r\n                removed.findIndex(function (query) {\r\n                    return query.getQueryParams().loadsAllData();\r\n                });\r\n            var covered = this.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {\r\n                return parentSyncPoint.hasCompleteView();\r\n            });\r\n            if (removingDefault && !covered) {\r\n                var subtree = this.syncPointTree_.subtree(path);\r\n                // There are potentially child listeners. Determine what if any listens we need to send before executing the\r\n                // removal\r\n                if (!subtree.isEmpty()) {\r\n                    // We need to fold over our subtree and collect the listeners to send\r\n                    var newViews = this.collectDistinctViewsForSubTree_(subtree);\r\n                    // Ok, we've collected all the listens we need. Set them up.\r\n                    for (var i = 0; i < newViews.length; ++i) {\r\n                        var view = newViews[i], newQuery = view.getQuery();\r\n                        var listener = this.createListenerForView_(view);\r\n                        this.listenProvider_.startListening(SyncTree.queryForListening_(newQuery), this.tagForQuery_(newQuery), listener.hashFn, listener.onComplete);\r\n                    }\r\n                }\r\n                else {\r\n                    // There's nothing below us, so nothing we need to start listening on\r\n                }\r\n            }\r\n            // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\r\n            // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\r\n            // Also, note that if we have a cancelError, it's already been removed at the provider level.\r\n            if (!covered && removed.length > 0 && !cancelError) {\r\n                // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\r\n                // default. Otherwise, we need to iterate through and cancel each individual query\r\n                if (removingDefault) {\r\n                    // We don't tag default listeners\r\n                    var defaultTag = null;\r\n                    this.listenProvider_.stopListening(SyncTree.queryForListening_(query), defaultTag);\r\n                }\r\n                else {\r\n                    removed.forEach(function (queryToRemove) {\r\n                        var tagToRemove = _this.queryToTagMap_[SyncTree.makeQueryKey_(queryToRemove)];\r\n                        _this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToRemove), tagToRemove);\r\n                    });\r\n                }\r\n            }\r\n            // Now, clear all of the tags we're tracking for the removed listens\r\n            this.removeTags_(removed);\r\n        }\r\n        else {\r\n            // No-op, this listener must've been already removed\r\n        }\r\n        return cancelEvents;\r\n    };\r\n    /**\r\n     * Returns a complete cache, if we have one, of the data at a particular path. The location must have a listener above\r\n     * it, but as this is only used by transaction code, that should always be the case anyways.\r\n     *\r\n     * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n     * @param {!Path} path The path to the data we want\r\n     * @param {Array.<number>=} writeIdsToExclude A specific set to be excluded\r\n     * @return {?Node}\r\n     */\r\n    SyncTree.prototype.calcCompleteEventCache = function (path, writeIdsToExclude) {\r\n        var includeHiddenSets = true;\r\n        var writeTree = this.pendingWriteTree_;\r\n        var serverCache = this.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {\r\n            var relativePath = Path.relativePath(pathSoFar, path);\r\n            var serverCache = syncPoint.getCompleteServerCache(relativePath);\r\n            if (serverCache) {\r\n                return serverCache;\r\n            }\r\n        });\r\n        return writeTree.calcCompleteEventCache(path, serverCache, writeIdsToExclude, includeHiddenSets);\r\n    };\r\n    /**\r\n     * This collapses multiple unfiltered views into a single view, since we only need a single\r\n     * listener for them.\r\n     *\r\n     * @param {!ImmutableTree.<!SyncPoint>} subtree\r\n     * @return {!Array.<!View>}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.collectDistinctViewsForSubTree_ = function (subtree) {\r\n        return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n            if (maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {\r\n                var completeView = maybeChildSyncPoint.getCompleteView();\r\n                return [completeView];\r\n            }\r\n            else {\r\n                // No complete view here, flatten any deeper listens into an array\r\n                var views_1 = [];\r\n                if (maybeChildSyncPoint) {\r\n                    views_1 = maybeChildSyncPoint.getQueryViews();\r\n                }\r\n                util.forEach(childMap, function (key, childViews) {\r\n                    views_1 = views_1.concat(childViews);\r\n                });\r\n                return views_1;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Array.<!Query>} queries\r\n     * @private\r\n     */\r\n    SyncTree.prototype.removeTags_ = function (queries) {\r\n        for (var j = 0; j < queries.length; ++j) {\r\n            var removedQuery = queries[j];\r\n            if (!removedQuery.getQueryParams().loadsAllData()) {\r\n                // We should have a tag for this\r\n                var removedQueryKey = SyncTree.makeQueryKey_(removedQuery);\r\n                var removedQueryTag = this.queryToTagMap_[removedQueryKey];\r\n                delete this.queryToTagMap_[removedQueryKey];\r\n                delete this.tagToQueryMap_['_' + removedQueryTag];\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Normalizes a query to a query we send the server for listening\r\n     * @param {!Query} query\r\n     * @return {!Query} The normalized query\r\n     * @private\r\n     */\r\n    SyncTree.queryForListening_ = function (query) {\r\n        if (query.getQueryParams().loadsAllData() &&\r\n            !query.getQueryParams().isDefault()) {\r\n            // We treat queries that load all data as default queries\r\n            // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\r\n            // from Query\r\n            return /** @type {!Query} */ query.getRef();\r\n        }\r\n        else {\r\n            return query;\r\n        }\r\n    };\r\n    /**\r\n     * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!View} view\r\n     * @return {!Array.<!Event>} This method can return events to support synchronous data sources\r\n     * @private\r\n     */\r\n    SyncTree.prototype.setupListener_ = function (query, view) {\r\n        var path = query.path;\r\n        var tag = this.tagForQuery_(query);\r\n        var listener = this.createListenerForView_(view);\r\n        var events = this.listenProvider_.startListening(SyncTree.queryForListening_(query), tag, listener.hashFn, listener.onComplete);\r\n        var subtree = this.syncPointTree_.subtree(path);\r\n        // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\r\n        // may need to shadow other listens as well.\r\n        if (tag) {\r\n            util.assert(!subtree.value.hasCompleteView(), \"If we're adding a query, it shouldn't be shadowed\");\r\n        }\r\n        else {\r\n            // Shadow everything at or below this location, this is a default listener.\r\n            var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n                if (!relativePath.isEmpty() &&\r\n                    maybeChildSyncPoint &&\r\n                    maybeChildSyncPoint.hasCompleteView()) {\r\n                    return [maybeChildSyncPoint.getCompleteView().getQuery()];\r\n                }\r\n                else {\r\n                    // No default listener here, flatten any deeper queries into an array\r\n                    var queries_1 = [];\r\n                    if (maybeChildSyncPoint) {\r\n                        queries_1 = queries_1.concat(maybeChildSyncPoint.getQueryViews().map(function (view) { return view.getQuery(); }));\r\n                    }\r\n                    util.forEach(childMap, function (key, childQueries) {\r\n                        queries_1 = queries_1.concat(childQueries);\r\n                    });\r\n                    return queries_1;\r\n                }\r\n            });\r\n            for (var i = 0; i < queriesToStop.length; ++i) {\r\n                var queryToStop = queriesToStop[i];\r\n                this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToStop), this.tagForQuery_(queryToStop));\r\n            }\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     *\r\n     * @param {!View} view\r\n     * @return {{hashFn: function(), onComplete: function(!string, *)}}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.createListenerForView_ = function (view) {\r\n        var _this = this;\r\n        var query = view.getQuery();\r\n        var tag = this.tagForQuery_(query);\r\n        return {\r\n            hashFn: function () {\r\n                var cache = view.getServerCache() || ChildrenNode.EMPTY_NODE;\r\n                return cache.hash();\r\n            },\r\n            onComplete: function (status) {\r\n                if (status === 'ok') {\r\n                    if (tag) {\r\n                        return _this.applyTaggedListenComplete(query.path, tag);\r\n                    }\r\n                    else {\r\n                        return _this.applyListenComplete(query.path);\r\n                    }\r\n                }\r\n                else {\r\n                    // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\r\n                    // Note that this may need to be scoped to just this listener if we change permissions on filtered children\r\n                    var error$$1 = errorForServerCode(status, query);\r\n                    return _this.removeEventRegistration(query, \r\n                    /*eventRegistration*/ null, error$$1);\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n     * @private\r\n     * @param {!Query} query\r\n     * @return {string}\r\n     */\r\n    SyncTree.makeQueryKey_ = function (query) {\r\n        return query.path.toString() + '$' + query.queryIdentifier();\r\n    };\r\n    /**\r\n     * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n     * @private\r\n     * @param {!string} queryKey\r\n     * @return {{queryId: !string, path: !Path}}\r\n     */\r\n    SyncTree.parseQueryKey_ = function (queryKey) {\r\n        var splitIndex = queryKey.indexOf('$');\r\n        util.assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\r\n        return {\r\n            queryId: queryKey.substr(splitIndex + 1),\r\n            path: new Path(queryKey.substr(0, splitIndex))\r\n        };\r\n    };\r\n    /**\r\n     * Return the query associated with the given tag, if we have one\r\n     * @param {!number} tag\r\n     * @return {?string}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.queryKeyForTag_ = function (tag) {\r\n        return this.tagToQueryMap_['_' + tag];\r\n    };\r\n    /**\r\n     * Return the tag associated with the given query.\r\n     * @param {!Query} query\r\n     * @return {?number}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.tagForQuery_ = function (query) {\r\n        var queryKey = SyncTree.makeQueryKey_(query);\r\n        return util.safeGet(this.queryToTagMap_, queryKey);\r\n    };\r\n    /**\r\n     * Static accessor for query tags.\r\n     * @return {number}\r\n     * @private\r\n     */\r\n    SyncTree.getNextQueryTag_ = function () {\r\n        return SyncTree.nextQueryTag_++;\r\n    };\r\n    /**\r\n     * A helper method to apply tagged operations\r\n     *\r\n     * @param {!Path} queryPath\r\n     * @param {!Operation} operation\r\n     * @return {!Array.<!Event>}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.applyTaggedOperation_ = function (queryPath, operation) {\r\n        var syncPoint = this.syncPointTree_.get(queryPath);\r\n        util.assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\r\n        var writesCache = this.pendingWriteTree_.childWrites(queryPath);\r\n        return syncPoint.applyOperation(operation, writesCache, \r\n        /*serverCache=*/ null);\r\n    };\r\n    /**\r\n     * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n     *\r\n     * NOTES:\r\n     * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n  \n     * - We call applyOperation() on each SyncPoint passing three things:\r\n     *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n     *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n     *   3. A snapshot Node with cached server data, if we have it.\r\n  \n     * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n     *\r\n     * @param {!Operation} operation\r\n     * @return {!Array.<!Event>}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.applyOperationToSyncPoints_ = function (operation) {\r\n        return this.applyOperationHelper_(operation, this.syncPointTree_, \r\n        /*serverCache=*/ null, this.pendingWriteTree_.childWrites(Path.Empty));\r\n    };\r\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     *\r\n     * @private\r\n     * @param {!Operation} operation\r\n     * @param {ImmutableTree.<!SyncPoint>} syncPointTree\r\n     * @param {?Node} serverCache\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    SyncTree.prototype.applyOperationHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\r\n        if (operation.path.isEmpty()) {\r\n            return this.applyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\r\n        }\r\n        else {\r\n            var syncPoint = syncPointTree.get(Path.Empty);\r\n            // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n            if (serverCache == null && syncPoint != null) {\r\n                serverCache = syncPoint.getCompleteServerCache(Path.Empty);\r\n            }\r\n            var events = [];\r\n            var childName = operation.path.getFront();\r\n            var childOperation = operation.operationForChild(childName);\r\n            var childTree = syncPointTree.children.get(childName);\r\n            if (childTree && childOperation) {\r\n                var childServerCache = serverCache\r\n                    ? serverCache.getImmediateChild(childName)\r\n                    : null;\r\n                var childWritesCache = writesCache.child(childName);\r\n                events = events.concat(this.applyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n            }\r\n            if (syncPoint) {\r\n                events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\r\n            }\r\n            return events;\r\n        }\r\n    };\r\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     *\r\n     * @private\r\n     * @param {!Operation} operation\r\n     * @param {ImmutableTree.<!SyncPoint>} syncPointTree\r\n     * @param {?Node} serverCache\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    SyncTree.prototype.applyOperationDescendantsHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\r\n        var _this = this;\r\n        var syncPoint = syncPointTree.get(Path.Empty);\r\n        // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n        if (serverCache == null && syncPoint != null) {\r\n            serverCache = syncPoint.getCompleteServerCache(Path.Empty);\r\n        }\r\n        var events = [];\r\n        syncPointTree.children.inorderTraversal(function (childName, childTree) {\r\n            var childServerCache = serverCache\r\n                ? serverCache.getImmediateChild(childName)\r\n                : null;\r\n            var childWritesCache = writesCache.child(childName);\r\n            var childOperation = operation.operationForChild(childName);\r\n            if (childOperation) {\r\n                events = events.concat(_this.applyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n            }\r\n        });\r\n        if (syncPoint) {\r\n            events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     * Static tracker for next query tag.\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    SyncTree.nextQueryTag_ = 1;\r\n    return SyncTree;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n *\r\n * @constructor\r\n */\r\nvar SnapshotHolder = /** @class */ (function () {\r\n    function SnapshotHolder() {\r\n        this.rootNode_ = ChildrenNode.EMPTY_NODE;\r\n    }\r\n    SnapshotHolder.prototype.getNode = function (path) {\r\n        return this.rootNode_.getChild(path);\r\n    };\r\n    SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\r\n        this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\r\n    };\r\n    return SnapshotHolder;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\r\nvar AuthTokenProvider = /** @class */ (function () {\r\n    /**\r\n     * @param {!FirebaseApp} app_\r\n     */\r\n    function AuthTokenProvider(app_) {\r\n        this.app_ = app_;\r\n    }\r\n    /**\r\n     * @param {boolean} forceRefresh\r\n     * @return {!Promise<FirebaseAuthTokenData>}\r\n     */\r\n    AuthTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        return this.app_['INTERNAL']['getToken'](forceRefresh).then(null, \r\n        // .catch\r\n        function (error$$1) {\r\n            // TODO: Need to figure out all the cases this is raised and whether\r\n            // this makes sense.\r\n            if (error$$1 && error$$1.code === 'auth/token-not-initialized') {\r\n                log('Got auth/token-not-initialized error.  Treating as null token.');\r\n                return null;\r\n            }\r\n            else {\r\n                return Promise.reject(error$$1);\r\n            }\r\n        });\r\n    };\r\n    AuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        // TODO: We might want to wrap the listener and call it with no args to\r\n        // avoid a leaky abstraction, but that makes removing the listener harder.\r\n        this.app_['INTERNAL']['addAuthTokenListener'](listener);\r\n    };\r\n    AuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\r\n        this.app_['INTERNAL']['removeAuthTokenListener'](listener);\r\n    };\r\n    AuthTokenProvider.prototype.notifyForInvalidToken = function () {\r\n        var errorMessage = 'Provided authentication credentials for the app named \"' +\r\n            this.app_.name +\r\n            '\" are invalid. This usually indicates your app was not ' +\r\n            'initialized correctly. ';\r\n        if ('credential' in this.app_.options) {\r\n            errorMessage +=\r\n                'Make sure the \"credential\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else if ('serviceAccount' in this.app_.options) {\r\n            errorMessage +=\r\n                'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else {\r\n            errorMessage +=\r\n                'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\r\n                    'initializeApp() match the values provided for your app at ' +\r\n                    'https://console.firebase.google.com/.';\r\n        }\r\n        warn(errorMessage);\r\n    };\r\n    return AuthTokenProvider;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Tracks a collection of stats.\r\n *\r\n * @constructor\r\n */\r\nvar StatsCollection = /** @class */ (function () {\r\n    function StatsCollection() {\r\n        this.counters_ = {};\r\n    }\r\n    StatsCollection.prototype.incrementCounter = function (name, amount) {\r\n        if (amount === void 0) { amount = 1; }\r\n        if (!util.contains(this.counters_, name))\r\n            this.counters_[name] = 0;\r\n        this.counters_[name] += amount;\r\n    };\r\n    StatsCollection.prototype.get = function () {\r\n        return util.deepCopy(this.counters_);\r\n    };\r\n    return StatsCollection;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar StatsManager = /** @class */ (function () {\r\n    function StatsManager() {\r\n    }\r\n    StatsManager.getCollection = function (repoInfo) {\r\n        var hashString = repoInfo.toString();\r\n        if (!this.collections_[hashString]) {\r\n            this.collections_[hashString] = new StatsCollection();\r\n        }\r\n        return this.collections_[hashString];\r\n    };\r\n    StatsManager.getOrCreateReporter = function (repoInfo, creatorFunction) {\r\n        var hashString = repoInfo.toString();\r\n        if (!this.reporters_[hashString]) {\r\n            this.reporters_[hashString] = creatorFunction();\r\n        }\r\n        return this.reporters_[hashString];\r\n    };\r\n    StatsManager.collections_ = {};\r\n    StatsManager.reporters_ = {};\r\n    return StatsManager;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ The collection to \"listen\" to.\r\n * @constructor\r\n */\r\nvar StatsListener = /** @class */ (function () {\r\n    function StatsListener(collection_) {\r\n        this.collection_ = collection_;\r\n        this.last_ = null;\r\n    }\r\n    StatsListener.prototype.get = function () {\r\n        var newStats = this.collection_.get();\r\n        var delta = util.clone(newStats);\r\n        if (this.last_) {\r\n            util.forEach(this.last_, function (stat, value) {\r\n                delta[stat] = delta[stat] - value;\r\n            });\r\n        }\r\n        this.last_ = newStats;\r\n        return delta;\r\n    };\r\n    return StatsListener;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\r\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\r\n// seconds to try to ensure the Firebase connection is established / settled.\r\nvar FIRST_STATS_MIN_TIME = 10 * 1000;\r\nvar FIRST_STATS_MAX_TIME = 30 * 1000;\r\n// We'll continue to report stats on average every 5 minutes.\r\nvar REPORT_STATS_INTERVAL = 5 * 60 * 1000;\r\n/**\r\n * @constructor\r\n */\r\nvar StatsReporter = /** @class */ (function () {\r\n    /**\r\n     * @param collection\r\n     * @param server_\r\n     */\r\n    function StatsReporter(collection, server_) {\r\n        this.server_ = server_;\r\n        this.statsToReport_ = {};\r\n        this.statsListener_ = new StatsListener(collection);\r\n        var timeout = FIRST_STATS_MIN_TIME +\r\n            (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\r\n    }\r\n    StatsReporter.prototype.includeStat = function (stat) {\r\n        this.statsToReport_[stat] = true;\r\n    };\r\n    StatsReporter.prototype.reportStats_ = function () {\r\n        var _this = this;\r\n        var stats = this.statsListener_.get();\r\n        var reportedStats = {};\r\n        var haveStatsToReport = false;\r\n        util.forEach(stats, function (stat, value) {\r\n            if (value > 0 && util.contains(_this.statsToReport_, stat)) {\r\n                reportedStats[stat] = value;\r\n                haveStatsToReport = true;\r\n            }\r\n        });\r\n        if (haveStatsToReport) {\r\n            this.server_.reportStats(reportedStats);\r\n        }\r\n        // queue our next run.\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\r\n    };\r\n    return StatsReporter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n * @constructor\r\n */\r\nvar EventQueue = /** @class */ (function () {\r\n    function EventQueue() {\r\n        /**\r\n         * @private\r\n         * @type {!Array.<EventList>}\r\n         */\r\n        this.eventLists_ = [];\r\n        /**\r\n         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n         * @private\r\n         * @type {!number}\r\n         */\r\n        this.recursionDepth_ = 0;\r\n    }\r\n    /**\r\n     * @param {!Array.<Event>} eventDataList The new events to queue.\r\n     */\r\n    EventQueue.prototype.queueEvents = function (eventDataList) {\r\n        // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\r\n        var currList = null;\r\n        for (var i = 0; i < eventDataList.length; i++) {\r\n            var eventData = eventDataList[i];\r\n            var eventPath = eventData.getPath();\r\n            if (currList !== null && !eventPath.equals(currList.getPath())) {\r\n                this.eventLists_.push(currList);\r\n                currList = null;\r\n            }\r\n            if (currList === null) {\r\n                currList = new EventList(eventPath);\r\n            }\r\n            currList.add(eventData);\r\n        }\r\n        if (currList) {\r\n            this.eventLists_.push(currList);\r\n        }\r\n    };\r\n    /**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n     * for the specified path.\r\n     *\r\n     * It is assumed that the new events are all for the specified path.\r\n     *\r\n     * @param {!Path} path The path to raise events for.\r\n     * @param {!Array.<Event>} eventDataList The new events to raise.\r\n     */\r\n    EventQueue.prototype.raiseEventsAtPath = function (path, eventDataList) {\r\n        this.queueEvents(eventDataList);\r\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\r\n            return eventPath.equals(path);\r\n        });\r\n    };\r\n    /**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n     * locations related to the specified change path (i.e. all ancestors and descendants).\r\n     *\r\n     * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n     *\r\n     * @param {!Path} changedPath The path to raise events for.\r\n     * @param {!Array.<!Event>} eventDataList The events to raise\r\n     */\r\n    EventQueue.prototype.raiseEventsForChangedPath = function (changedPath, eventDataList) {\r\n        this.queueEvents(eventDataList);\r\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\r\n            return eventPath.contains(changedPath) || changedPath.contains(eventPath);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!function(!Path):boolean} predicate\r\n     * @private\r\n     */\r\n    EventQueue.prototype.raiseQueuedEventsMatchingPredicate_ = function (predicate) {\r\n        this.recursionDepth_++;\r\n        var sentAll = true;\r\n        for (var i = 0; i < this.eventLists_.length; i++) {\r\n            var eventList = this.eventLists_[i];\r\n            if (eventList) {\r\n                var eventPath = eventList.getPath();\r\n                if (predicate(eventPath)) {\r\n                    this.eventLists_[i].raise();\r\n                    this.eventLists_[i] = null;\r\n                }\r\n                else {\r\n                    sentAll = false;\r\n                }\r\n            }\r\n        }\r\n        if (sentAll) {\r\n            this.eventLists_ = [];\r\n        }\r\n        this.recursionDepth_--;\r\n    };\r\n    return EventQueue;\r\n}());\r\n/**\r\n * @param {!Path} path\r\n * @constructor\r\n */\r\nvar EventList = /** @class */ (function () {\r\n    function EventList(path_) {\r\n        this.path_ = path_;\r\n        /**\r\n         * @type {!Array.<Event>}\r\n         * @private\r\n         */\r\n        this.events_ = [];\r\n    }\r\n    /**\r\n     * @param {!Event} eventData\r\n     */\r\n    EventList.prototype.add = function (eventData) {\r\n        this.events_.push(eventData);\r\n    };\r\n    /**\r\n     * Iterates through the list and raises each event\r\n     */\r\n    EventList.prototype.raise = function () {\r\n        for (var i = 0; i < this.events_.length; i++) {\r\n            var eventData = this.events_[i];\r\n            if (eventData !== null) {\r\n                this.events_[i] = null;\r\n                var eventFn = eventData.getEventRunner();\r\n                if (logger$1) {\r\n                    log('event: ' + eventData.toString());\r\n                }\r\n                exceptionGuard(eventFn);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {!Path}\r\n     */\r\n    EventList.prototype.getPath = function () {\r\n        return this.path_;\r\n    };\r\n    return EventList;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\r\nvar EventEmitter = /** @class */ (function () {\r\n    /**\r\n     * @param {!Array.<string>} allowedEvents_\r\n     */\r\n    function EventEmitter(allowedEvents_) {\r\n        this.allowedEvents_ = allowedEvents_;\r\n        this.listeners_ = {};\r\n        util.assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\r\n    }\r\n    /**\r\n     * To be called by derived classes to trigger events.\r\n     * @param {!string} eventType\r\n     * @param {...*} var_args\r\n     */\r\n    EventEmitter.prototype.trigger = function (eventType) {\r\n        var var_args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            var_args[_i - 1] = arguments[_i];\r\n        }\r\n        if (Array.isArray(this.listeners_[eventType])) {\r\n            // Clone the list, since callbacks could add/remove listeners.\r\n            var listeners = this.listeners_[eventType].slice();\r\n            for (var i = 0; i < listeners.length; i++) {\r\n                listeners[i].callback.apply(listeners[i].context, var_args);\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.on = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        this.listeners_[eventType] = this.listeners_[eventType] || [];\r\n        this.listeners_[eventType].push({ callback: callback, context: context });\r\n        var eventData = this.getInitialEvent(eventType);\r\n        if (eventData) {\r\n            callback.apply(context, eventData);\r\n        }\r\n    };\r\n    EventEmitter.prototype.off = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        var listeners = this.listeners_[eventType] || [];\r\n        for (var i = 0; i < listeners.length; i++) {\r\n            if (listeners[i].callback === callback &&\r\n                (!context || context === listeners[i].context)) {\r\n                listeners.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.validateEventType_ = function (eventType) {\r\n        util.assert(this.allowedEvents_.find(function (et) {\r\n            return et === eventType;\r\n        }), 'Unknown event: ' + eventType);\r\n    };\r\n    return EventEmitter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @extends {EventEmitter}\r\n */\r\nvar VisibilityMonitor = /** @class */ (function (_super) {\r\n    tslib_1.__extends(VisibilityMonitor, _super);\r\n    function VisibilityMonitor() {\r\n        var _this = _super.call(this, ['visible']) || this;\r\n        var hidden;\r\n        var visibilityChange;\r\n        if (typeof document !== 'undefined' &&\r\n            typeof document.addEventListener !== 'undefined') {\r\n            if (typeof document['hidden'] !== 'undefined') {\r\n                // Opera 12.10 and Firefox 18 and later support\r\n                visibilityChange = 'visibilitychange';\r\n                hidden = 'hidden';\r\n            }\r\n            else if (typeof document['mozHidden'] !== 'undefined') {\r\n                visibilityChange = 'mozvisibilitychange';\r\n                hidden = 'mozHidden';\r\n            }\r\n            else if (typeof document['msHidden'] !== 'undefined') {\r\n                visibilityChange = 'msvisibilitychange';\r\n                hidden = 'msHidden';\r\n            }\r\n            else if (typeof document['webkitHidden'] !== 'undefined') {\r\n                visibilityChange = 'webkitvisibilitychange';\r\n                hidden = 'webkitHidden';\r\n            }\r\n        }\r\n        // Initially, we always assume we are visible. This ensures that in browsers\r\n        // without page visibility support or in cases where we are never visible\r\n        // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\r\n        // reconnects\r\n        _this.visible_ = true;\r\n        if (visibilityChange) {\r\n            document.addEventListener(visibilityChange, function () {\r\n                var visible = !document[hidden];\r\n                if (visible !== _this.visible_) {\r\n                    _this.visible_ = visible;\r\n                    _this.trigger('visible', visible);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    VisibilityMonitor.getInstance = function () {\r\n        return new VisibilityMonitor();\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */\r\n    VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\r\n        util.assert(eventType === 'visible', 'Unknown event type: ' + eventType);\r\n        return [this.visible_];\r\n    };\r\n    return VisibilityMonitor;\r\n}(EventEmitter));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n *\r\n * @extends {EventEmitter}\r\n */\r\nvar OnlineMonitor = /** @class */ (function (_super) {\r\n    tslib_1.__extends(OnlineMonitor, _super);\r\n    function OnlineMonitor() {\r\n        var _this = _super.call(this, ['online']) || this;\r\n        _this.online_ = true;\r\n        // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\r\n        // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\r\n        // It would seem that the 'online' event does not always fire consistently. So we disable it\r\n        // for Cordova.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window.addEventListener !== 'undefined' &&\r\n            !util.isMobileCordova()) {\r\n            window.addEventListener('online', function () {\r\n                if (!_this.online_) {\r\n                    _this.online_ = true;\r\n                    _this.trigger('online', true);\r\n                }\r\n            }, false);\r\n            window.addEventListener('offline', function () {\r\n                if (_this.online_) {\r\n                    _this.online_ = false;\r\n                    _this.trigger('online', false);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    OnlineMonitor.getInstance = function () {\r\n        return new OnlineMonitor();\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */\r\n    OnlineMonitor.prototype.getInitialEvent = function (eventType) {\r\n        util.assert(eventType === 'online', 'Unknown event type: ' + eventType);\r\n        return [this.online_];\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    OnlineMonitor.prototype.currentlyOnline = function () {\r\n        return this.online_;\r\n    };\r\n    return OnlineMonitor;\r\n}(EventEmitter));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n * @constructor\r\n */\r\nvar PacketReceiver = /** @class */ (function () {\r\n    /**\r\n     * @param onMessage_\r\n     */\r\n    function PacketReceiver(onMessage_) {\r\n        this.onMessage_ = onMessage_;\r\n        this.pendingResponses = [];\r\n        this.currentResponseNum = 0;\r\n        this.closeAfterResponse = -1;\r\n        this.onClose = null;\r\n    }\r\n    PacketReceiver.prototype.closeAfter = function (responseNum, callback) {\r\n        this.closeAfterResponse = responseNum;\r\n        this.onClose = callback;\r\n        if (this.closeAfterResponse < this.currentResponseNum) {\r\n            this.onClose();\r\n            this.onClose = null;\r\n        }\r\n    };\r\n    /**\r\n     * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n     * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n     * browsers will respond in the same order as the requests we sent\r\n     * @param {number} requestNum\r\n     * @param {Array} data\r\n     */\r\n    PacketReceiver.prototype.handleResponse = function (requestNum, data) {\r\n        var _this = this;\r\n        this.pendingResponses[requestNum] = data;\r\n        var _loop_1 = function () {\r\n            var toProcess = this_1.pendingResponses[this_1.currentResponseNum];\r\n            delete this_1.pendingResponses[this_1.currentResponseNum];\r\n            var _loop_2 = function (i) {\r\n                if (toProcess[i]) {\r\n                    exceptionGuard(function () {\r\n                        _this.onMessage_(toProcess[i]);\r\n                    });\r\n                }\r\n            };\r\n            for (var i = 0; i < toProcess.length; ++i) {\r\n                _loop_2(i);\r\n            }\r\n            if (this_1.currentResponseNum === this_1.closeAfterResponse) {\r\n                if (this_1.onClose) {\r\n                    this_1.onClose();\r\n                    this_1.onClose = null;\r\n                }\r\n                return \"break\";\r\n            }\r\n            this_1.currentResponseNum++;\r\n        };\r\n        var this_1 = this;\r\n        while (this.pendingResponses[this.currentResponseNum]) {\r\n            var state_1 = _loop_1();\r\n            if (state_1 === \"break\")\r\n                break;\r\n        }\r\n    };\r\n    return PacketReceiver;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// URL query parameters associated with longpolling\r\nvar FIREBASE_LONGPOLL_START_PARAM = 'start';\r\nvar FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\r\nvar FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\r\nvar FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\r\nvar FIREBASE_LONGPOLL_ID_PARAM = 'id';\r\nvar FIREBASE_LONGPOLL_PW_PARAM = 'pw';\r\nvar FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\r\nvar FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\r\nvar FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\r\nvar FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\r\nvar FIREBASE_LONGPOLL_DATA_PARAM = 'd';\r\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM = 'disconn';\r\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\r\n//Data size constants.\r\n//TODO: Perf: the maximum length actually differs from browser to browser.\r\n// We should check what browser we're on and set accordingly.\r\nvar MAX_URL_DATA_SIZE = 1870;\r\nvar SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\r\nvar MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\r\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n * @const\r\n * @type {number}\r\n */\r\nvar KEEPALIVE_REQUEST_INTERVAL = 25000;\r\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n * @const\r\n * @type {number}\r\n */\r\nvar LP_CONNECT_TIMEOUT = 30000;\r\n/**\r\n * This class manages a single long-polling connection.\r\n *\r\n * @constructor\r\n * @implements {Transport}\r\n */\r\nvar BrowserPollConnection = /** @class */ (function () {\r\n    /**\r\n     * @param {string} connId An identifier for this connection, used for logging\r\n     * @param {RepoInfo} repoInfo The info for the endpoint to send data to.\r\n     * @param {string=} transportSessionId Optional transportSessionid if we are reconnecting for an existing\r\n     *                                         transport session\r\n     * @param {string=}  lastSessionId Optional lastSessionId if the PersistentConnection has already created a\r\n     *                                     connection previously\r\n     */\r\n    function BrowserPollConnection(connId, repoInfo, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.repoInfo = repoInfo;\r\n        this.transportSessionId = transportSessionId;\r\n        this.lastSessionId = lastSessionId;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.everConnected_ = false;\r\n        this.log_ = logWrapper(connId);\r\n        this.stats_ = StatsManager.getCollection(repoInfo);\r\n        this.urlFn = function (params) {\r\n            return repoInfo.connectionURL(LONG_POLLING, params);\r\n        };\r\n    }\r\n    /**\r\n     *\r\n     * @param {function(Object)} onMessage Callback when messages arrive\r\n     * @param {function()} onDisconnect Callback with connection lost.\r\n     */\r\n    BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.curSegmentNum = 0;\r\n        this.onDisconnect_ = onDisconnect;\r\n        this.myPacketOrderer = new PacketReceiver(onMessage);\r\n        this.isClosed_ = false;\r\n        this.connectTimeoutTimer_ = setTimeout(function () {\r\n            _this.log_('Timed out trying to connect.');\r\n            // Make sure we clear the host cache\r\n            _this.onClosed_();\r\n            _this.connectTimeoutTimer_ = null;\r\n        }, Math.floor(LP_CONNECT_TIMEOUT));\r\n        // Ensure we delay the creation of the iframe until the DOM is loaded.\r\n        executeWhenDOMReady(function () {\r\n            if (_this.isClosed_)\r\n                return;\r\n            //Set up a callback that gets triggered once a connection is set up.\r\n            _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var command = args[0], arg1 = args[1], arg2 = args[2];\r\n                _this.incrementIncomingBytes_(args);\r\n                if (!_this.scriptTagHolder)\r\n                    return; // we closed the connection.\r\n                if (_this.connectTimeoutTimer_) {\r\n                    clearTimeout(_this.connectTimeoutTimer_);\r\n                    _this.connectTimeoutTimer_ = null;\r\n                }\r\n                _this.everConnected_ = true;\r\n                if (command == FIREBASE_LONGPOLL_START_PARAM) {\r\n                    _this.id = arg1;\r\n                    _this.password = arg2;\r\n                }\r\n                else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\r\n                    // Don't clear the host cache. We got a response from the server, so we know it's reachable\r\n                    if (arg1) {\r\n                        // We aren't expecting any more data (other than what the server's already in the process of sending us\r\n                        // through our already open polls), so don't send any more.\r\n                        _this.scriptTagHolder.sendNewPolls = false;\r\n                        // arg1 in this case is the last response number sent by the server. We should try to receive\r\n                        // all of the responses up to this one before closing\r\n                        _this.myPacketOrderer.closeAfter(arg1, function () {\r\n                            _this.onClosed_();\r\n                        });\r\n                    }\r\n                    else {\r\n                        _this.onClosed_();\r\n                    }\r\n                }\r\n                else {\r\n                    throw new Error('Unrecognized command received: ' + command);\r\n                }\r\n            }, function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var pN = args[0], data = args[1];\r\n                _this.incrementIncomingBytes_(args);\r\n                _this.myPacketOrderer.handleResponse(pN, data);\r\n            }, function () {\r\n                _this.onClosed_();\r\n            }, _this.urlFn);\r\n            //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\r\n            //from cache.\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\r\n            if (_this.scriptTagHolder.uniqueCallbackIdentifier)\r\n                urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;\r\n            urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n            if (_this.transportSessionId) {\r\n                urlParams[TRANSPORT_SESSION_PARAM] = _this.transportSessionId;\r\n            }\r\n            if (_this.lastSessionId) {\r\n                urlParams[LAST_SESSION_PARAM] = _this.lastSessionId;\r\n            }\r\n            if (!util.isNodeSdk() &&\r\n                typeof location !== 'undefined' &&\r\n                location.href &&\r\n                location.href.indexOf(FORGE_DOMAIN) !== -1) {\r\n                urlParams[REFERER_PARAM] = FORGE_REF;\r\n            }\r\n            var connectURL = _this.urlFn(urlParams);\r\n            _this.log_('Connecting via long-poll to ' + connectURL);\r\n            _this.scriptTagHolder.addTag(connectURL, function () {\r\n                /* do nothing */\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Call this when a handshake has completed successfully and we want to consider the connection established\r\n     */\r\n    BrowserPollConnection.prototype.start = function () {\r\n        this.scriptTagHolder.startLongPoll(this.id, this.password);\r\n        this.addDisconnectPingFrame(this.id, this.password);\r\n    };\r\n    /**\r\n     * Forces long polling to be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceAllow = function () {\r\n        BrowserPollConnection.forceAllow_ = true;\r\n    };\r\n    /**\r\n     * Forces longpolling to not be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceDisallow = function () {\r\n        BrowserPollConnection.forceDisallow_ = true;\r\n    };\r\n    // Static method, use string literal so it can be accessed in a generic way\r\n    BrowserPollConnection.isAvailable = function () {\r\n        // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\r\n        // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\r\n        return (BrowserPollConnection.forceAllow_ ||\r\n            (!BrowserPollConnection.forceDisallow_ &&\r\n                typeof document !== 'undefined' &&\r\n                document.createElement != null &&\r\n                !isChromeExtensionContentScript() &&\r\n                !isWindowsStoreApp() &&\r\n                !util.isNodeSdk()));\r\n    };\r\n    /**\r\n     * No-op for polling\r\n     */\r\n    BrowserPollConnection.prototype.markConnectionHealthy = function () { };\r\n    /**\r\n     * Stops polling and cleans up the iframe\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.scriptTagHolder) {\r\n            this.scriptTagHolder.close();\r\n            this.scriptTagHolder = null;\r\n        }\r\n        //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\r\n        if (this.myDisconnFrame) {\r\n            document.body.removeChild(this.myDisconnFrame);\r\n            this.myDisconnFrame = null;\r\n        }\r\n        if (this.connectTimeoutTimer_) {\r\n            clearTimeout(this.connectTimeoutTimer_);\r\n            this.connectTimeoutTimer_ = null;\r\n        }\r\n    };\r\n    /**\r\n     * Triggered when this transport is closed\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is closing itself');\r\n            this.shutdown_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_(this.everConnected_);\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n     * that we've left.\r\n     */\r\n    BrowserPollConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is being closed.');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n     * broken into chunks (since URLs have a small maximum length).\r\n     * @param {!Object} data The JSON data to transmit.\r\n     */\r\n    BrowserPollConnection.prototype.send = function (data) {\r\n        var dataStr = util.stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //first, lets get the base64-encoded data\r\n        var base64data = util.base64Encode(dataStr);\r\n        //We can only fit a certain amount in each URL, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\r\n        //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\r\n        //of segments so that we can reassemble the packet on the server.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\r\n            this.curSegmentNum++;\r\n        }\r\n    };\r\n    /**\r\n     * This is how we notify the server that we're leaving.\r\n     * We aren't able to send requests with DHTML on a window close event, but we can\r\n     * trigger XHR requests in some browsers (everything but Opera basically).\r\n     * @param {!string} id\r\n     * @param {!string} pw\r\n     */\r\n    BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {\r\n        if (util.isNodeSdk())\r\n            return;\r\n        this.myDisconnFrame = document.createElement('iframe');\r\n        var urlParams = {};\r\n        urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\r\n        urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\r\n        urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\r\n        this.myDisconnFrame.src = this.urlFn(urlParams);\r\n        this.myDisconnFrame.style.display = 'none';\r\n        document.body.appendChild(this.myDisconnFrame);\r\n    };\r\n    /**\r\n     * Used to track the bytes received by this client\r\n     * @param {*} args\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {\r\n        // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\r\n        var bytesReceived = util.stringify(args).length;\r\n        this.bytesReceived += bytesReceived;\r\n        this.stats_.incrementCounter('bytes_received', bytesReceived);\r\n    };\r\n    return BrowserPollConnection;\r\n}());\r\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n * @constructor\r\n *********************************************************************************************/\r\nvar FirebaseIFrameScriptHolder = /** @class */ (function () {\r\n    /**\r\n     * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n     * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n     * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n     * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n     */\r\n    function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {\r\n        this.onDisconnect = onDisconnect;\r\n        this.urlFn = urlFn;\r\n        //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\r\n        //problems in some browsers.\r\n        /**\r\n         * @type {CountedSet.<number, number>}\r\n         */\r\n        this.outstandingRequests = new CountedSet();\r\n        //A queue of the pending segments waiting for transmission to the server.\r\n        this.pendingSegs = [];\r\n        //A serial number. We use this for two things:\r\n        // 1) A way to ensure the browser doesn't cache responses to polls\r\n        // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\r\n        //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\r\n        //    JSONP code in the order it was added to the iframe.\r\n        this.currentSerial = Math.floor(Math.random() * 100000000);\r\n        // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\r\n        // incoming data from the server that we're waiting for).\r\n        this.sendNewPolls = true;\r\n        if (!util.isNodeSdk()) {\r\n            //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\r\n            //iframes where we put the long-polling script tags. We have two callbacks:\r\n            //   1) Command Callback - Triggered for control issues, like starting a connection.\r\n            //   2) Message Callback - Triggered when new data arrives.\r\n            this.uniqueCallbackIdentifier = LUIDGenerator();\r\n            window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\r\n            window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB;\r\n            //Create an iframe for us to add script tags to.\r\n            this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\r\n            // Set the iframe's contents.\r\n            var script = '';\r\n            // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\r\n            // for ie9, but ie8 needs to do it again in the document itself.\r\n            if (this.myIFrame.src &&\r\n                this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\r\n                var currentDomain = document.domain;\r\n                script = '<script>document.domain=\"' + currentDomain + '\";</script>';\r\n            }\r\n            var iframeContents = '<html><body>' + script + '</body></html>';\r\n            try {\r\n                this.myIFrame.doc.open();\r\n                this.myIFrame.doc.write(iframeContents);\r\n                this.myIFrame.doc.close();\r\n            }\r\n            catch (e) {\r\n                log('frame writing exception');\r\n                if (e.stack) {\r\n                    log(e.stack);\r\n                }\r\n                log(e);\r\n            }\r\n        }\r\n        else {\r\n            this.commandCB = commandCB;\r\n            this.onMessageCB = onMessageCB;\r\n        }\r\n    }\r\n    /**\r\n     * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n     * actually use.\r\n     * @private\r\n     * @return {Element}\r\n     */\r\n    FirebaseIFrameScriptHolder.createIFrame_ = function () {\r\n        var iframe = document.createElement('iframe');\r\n        iframe.style.display = 'none';\r\n        // This is necessary in order to initialize the document inside the iframe\r\n        if (document.body) {\r\n            document.body.appendChild(iframe);\r\n            try {\r\n                // If document.domain has been modified in IE, this will throw an error, and we need to set the\r\n                // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\r\n                // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\r\n                var a = iframe.contentWindow.document;\r\n                if (!a) {\r\n                    // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\r\n                    log('No IE domain setting required');\r\n                }\r\n            }\r\n            catch (e) {\r\n                var domain = document.domain;\r\n                iframe.src =\r\n                    \"javascript:void((function(){document.open();document.domain='\" +\r\n                        domain +\r\n                        \"';document.close();})())\";\r\n            }\r\n        }\r\n        else {\r\n            // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\r\n            // never gets hit.\r\n            throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\r\n        }\r\n        // Get the document of the iframe in a browser-specific way.\r\n        if (iframe.contentDocument) {\r\n            iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\r\n        }\r\n        else if (iframe.contentWindow) {\r\n            iframe.doc = iframe.contentWindow.document; // Internet Explorer\r\n        }\r\n        else if (iframe.document) {\r\n            iframe.doc = iframe.document; //others?\r\n        }\r\n        return iframe;\r\n    };\r\n    /**\r\n     * Cancel all outstanding queries and remove the frame.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.close = function () {\r\n        var _this = this;\r\n        //Mark this iframe as dead, so no new requests are sent.\r\n        this.alive = false;\r\n        if (this.myIFrame) {\r\n            //We have to actually remove all of the html inside this iframe before removing it from the\r\n            //window, or IE will continue loading and executing the script tags we've already added, which\r\n            //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\r\n            this.myIFrame.doc.body.innerHTML = '';\r\n            setTimeout(function () {\r\n                if (_this.myIFrame !== null) {\r\n                    document.body.removeChild(_this.myIFrame);\r\n                    _this.myIFrame = null;\r\n                }\r\n            }, Math.floor(0));\r\n        }\r\n        if (util.isNodeSdk() && this.myID) {\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            var theURL = this.urlFn(urlParams);\r\n            FirebaseIFrameScriptHolder.nodeRestRequest(theURL);\r\n        }\r\n        // Protect from being called recursively.\r\n        var onDisconnect = this.onDisconnect;\r\n        if (onDisconnect) {\r\n            this.onDisconnect = null;\r\n            onDisconnect();\r\n        }\r\n    };\r\n    /**\r\n     * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n     * @param {!string} id - The ID of this connection\r\n     * @param {!string} pw - The password for this connection\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {\r\n        this.myID = id;\r\n        this.myPW = pw;\r\n        this.alive = true;\r\n        //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\r\n        while (this.newRequest_()) { }\r\n    };\r\n    /**\r\n     * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n     * too many outstanding requests and we are still alive.\r\n     *\r\n     * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n     * needed.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {\r\n        // We keep one outstanding request open all the time to receive data, but if we need to send data\r\n        // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\r\n        // close the old request.\r\n        if (this.alive &&\r\n            this.sendNewPolls &&\r\n            this.outstandingRequests.count() < (this.pendingSegs.length > 0 ? 2 : 1)) {\r\n            //construct our url\r\n            this.currentSerial++;\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\r\n            var theURL = this.urlFn(urlParams);\r\n            //Now add as much data as we can.\r\n            var curDataString = '';\r\n            var i = 0;\r\n            while (this.pendingSegs.length > 0) {\r\n                //first, lets see if the next segment will fit.\r\n                var nextSeg = this.pendingSegs[0];\r\n                if (nextSeg.d.length + SEG_HEADER_SIZE + curDataString.length <=\r\n                    MAX_URL_DATA_SIZE) {\r\n                    //great, the segment will fit. Lets append it.\r\n                    var theSeg = this.pendingSegs.shift();\r\n                    curDataString =\r\n                        curDataString +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.seg +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.ts +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_DATA_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.d;\r\n                    i++;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            theURL = theURL + curDataString;\r\n            this.addLongPollTag_(theURL, this.currentSerial);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Queue a packet for transmission to the server.\r\n     * @param segnum - A sequential id for this packet segment used for reassembly\r\n     * @param totalsegs - The total number of segments in this packet\r\n     * @param data - The data for this segment.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {\r\n        //add this to the queue of segments to send.\r\n        this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\r\n        //send the data immediately if there isn't already data being transmitted, unless\r\n        //startLongPoll hasn't been called yet.\r\n        if (this.alive) {\r\n            this.newRequest_();\r\n        }\r\n    };\r\n    /**\r\n     * Add a script tag for a regular long-poll request.\r\n     * @param {!string} url - The URL of the script tag.\r\n     * @param {!number} serial - The serial number of the request.\r\n     * @private\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {\r\n        var _this = this;\r\n        //remember that we sent this request.\r\n        this.outstandingRequests.add(serial, 1);\r\n        var doNewRequest = function () {\r\n            _this.outstandingRequests.remove(serial);\r\n            _this.newRequest_();\r\n        };\r\n        // If this request doesn't return on its own accord (by the server sending us some data), we'll\r\n        // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\r\n        var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\r\n        var readyStateCB = function () {\r\n            // Request completed.  Cancel the keepalive.\r\n            clearTimeout(keepaliveTimeout);\r\n            // Trigger a new request so we can continue receiving data.\r\n            doNewRequest();\r\n        };\r\n        this.addTag(url, readyStateCB);\r\n    };\r\n    /**\r\n     * Add an arbitrary script tag to the iframe.\r\n     * @param {!string} url - The URL for the script tag source.\r\n     * @param {!function()} loadCB - A callback to be triggered once the script has loaded.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {\r\n        var _this = this;\r\n        if (util.isNodeSdk()) {\r\n            this.doNodeLongPoll(url, loadCB);\r\n        }\r\n        else {\r\n            setTimeout(function () {\r\n                try {\r\n                    // if we're already closed, don't add this poll\r\n                    if (!_this.sendNewPolls)\r\n                        return;\r\n                    var newScript_1 = _this.myIFrame.doc.createElement('script');\r\n                    newScript_1.type = 'text/javascript';\r\n                    newScript_1.async = true;\r\n                    newScript_1.src = url;\r\n                    newScript_1.onload = newScript_1.onreadystatechange = function () {\r\n                        var rstate = newScript_1.readyState;\r\n                        if (!rstate || rstate === 'loaded' || rstate === 'complete') {\r\n                            newScript_1.onload = newScript_1.onreadystatechange = null;\r\n                            if (newScript_1.parentNode) {\r\n                                newScript_1.parentNode.removeChild(newScript_1);\r\n                            }\r\n                            loadCB();\r\n                        }\r\n                    };\r\n                    newScript_1.onerror = function () {\r\n                        log('Long-poll script failed to load: ' + url);\r\n                        _this.sendNewPolls = false;\r\n                        _this.close();\r\n                    };\r\n                    _this.myIFrame.doc.body.appendChild(newScript_1);\r\n                }\r\n                catch (e) {\r\n                    // TODO: we should make this error visible somehow\r\n                }\r\n            }, Math.floor(1));\r\n        }\r\n    };\r\n    return FirebaseIFrameScriptHolder;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384;\r\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\r\nvar WebSocketImpl = null;\r\nif (typeof MozWebSocket !== 'undefined') {\r\n    WebSocketImpl = MozWebSocket;\r\n}\r\nelse if (typeof WebSocket !== 'undefined') {\r\n    WebSocketImpl = WebSocket;\r\n}\r\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n * @constructor\r\n * @implements {Transport}\r\n */\r\nvar WebSocketConnection = /** @class */ (function () {\r\n    /**\r\n     * @param {string} connId identifier for this transport\r\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n     */\r\n    function WebSocketConnection(connId, repoInfo, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.keepaliveTimer = null;\r\n        this.frames = null;\r\n        this.totalFrames = 0;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.log_ = logWrapper(this.connId);\r\n        this.stats_ = StatsManager.getCollection(repoInfo);\r\n        this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId);\r\n    }\r\n    /**\r\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n     * @return {string} connection url\r\n     * @private\r\n     */\r\n    WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId) {\r\n        var urlParams = {};\r\n        urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n        if (!util.isNodeSdk() &&\r\n            typeof location !== 'undefined' &&\r\n            location.href &&\r\n            location.href.indexOf(FORGE_DOMAIN) !== -1) {\r\n            urlParams[REFERER_PARAM] = FORGE_REF;\r\n        }\r\n        if (transportSessionId) {\r\n            urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\r\n        }\r\n        if (lastSessionId) {\r\n            urlParams[LAST_SESSION_PARAM] = lastSessionId;\r\n        }\r\n        return repoInfo.connectionURL(WEBSOCKET, urlParams);\r\n    };\r\n    /**\r\n     *\r\n     * @param onMessage Callback when messages arrive\r\n     * @param onDisconnect Callback with connection lost.\r\n     */\r\n    WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.onDisconnect = onDisconnect;\r\n        this.onMessage = onMessage;\r\n        this.log_('Websocket connecting to ' + this.connURL);\r\n        this.everConnected_ = false;\r\n        // Assume failure until proven otherwise.\r\n        PersistentStorage.set('previous_websocket_failure', true);\r\n        try {\r\n            if (util.isNodeSdk()) {\r\n                var device = util.CONSTANTS.NODE_ADMIN ? 'AdminNode' : 'Node';\r\n                // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\r\n                var options = {\r\n                    headers: {\r\n                        'User-Agent': \"Firebase/\" + PROTOCOL_VERSION + \"/\" + firebase.SDK_VERSION + \"/\" + process.platform + \"/\" + device\r\n                    }\r\n                };\r\n                // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\r\n                var env = process['env'];\r\n                var proxy = this.connURL.indexOf('wss://') == 0\r\n                    ? env['HTTPS_PROXY'] || env['https_proxy']\r\n                    : env['HTTP_PROXY'] || env['http_proxy'];\r\n                if (proxy) {\r\n                    options['proxy'] = { origin: proxy };\r\n                }\r\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n            }\r\n            else {\r\n                this.mySock = new WebSocketImpl(this.connURL);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.log_('Error instantiating WebSocket.');\r\n            var error$$1 = e.message || e.data;\r\n            if (error$$1) {\r\n                this.log_(error$$1);\r\n            }\r\n            this.onClosed_();\r\n            return;\r\n        }\r\n        this.mySock.onopen = function () {\r\n            _this.log_('Websocket connected.');\r\n            _this.everConnected_ = true;\r\n        };\r\n        this.mySock.onclose = function () {\r\n            _this.log_('Websocket connection was disconnected.');\r\n            _this.mySock = null;\r\n            _this.onClosed_();\r\n        };\r\n        this.mySock.onmessage = function (m) {\r\n            _this.handleIncomingFrame(m);\r\n        };\r\n        this.mySock.onerror = function (e) {\r\n            _this.log_('WebSocket error.  Closing connection.');\r\n            var error$$1 = e.message || e.data;\r\n            if (error$$1) {\r\n                _this.log_(error$$1);\r\n            }\r\n            _this.onClosed_();\r\n        };\r\n    };\r\n    /**\r\n     * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n     */\r\n    WebSocketConnection.prototype.start = function () { };\r\n    WebSocketConnection.forceDisallow = function () {\r\n        WebSocketConnection.forceDisallow_ = true;\r\n    };\r\n    WebSocketConnection.isAvailable = function () {\r\n        var isOldAndroid = false;\r\n        if (typeof navigator !== 'undefined' && navigator.userAgent) {\r\n            var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\r\n            var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\r\n            if (oldAndroidMatch && oldAndroidMatch.length > 1) {\r\n                if (parseFloat(oldAndroidMatch[1]) < 4.4) {\r\n                    isOldAndroid = true;\r\n                }\r\n            }\r\n        }\r\n        return (!isOldAndroid &&\r\n            WebSocketImpl !== null &&\r\n            !WebSocketConnection.forceDisallow_);\r\n    };\r\n    /**\r\n     * Returns true if we previously failed to connect with this transport.\r\n     * @return {boolean}\r\n     */\r\n    WebSocketConnection.previouslyFailed = function () {\r\n        // If our persistent storage is actually only in-memory storage,\r\n        // we default to assuming that it previously failed to be safe.\r\n        return (PersistentStorage.isInMemoryStorage ||\r\n            PersistentStorage.get('previous_websocket_failure') === true);\r\n    };\r\n    WebSocketConnection.prototype.markConnectionHealthy = function () {\r\n        PersistentStorage.remove('previous_websocket_failure');\r\n    };\r\n    WebSocketConnection.prototype.appendFrame_ = function (data) {\r\n        this.frames.push(data);\r\n        if (this.frames.length == this.totalFrames) {\r\n            var fullMess = this.frames.join('');\r\n            this.frames = null;\r\n            var jsonMess = util.jsonEval(fullMess);\r\n            //handle the message\r\n            this.onMessage(jsonMess);\r\n        }\r\n    };\r\n    /**\r\n     * @param {number} frameCount The number of frames we are expecting from the server\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\r\n        this.totalFrames = frameCount;\r\n        this.frames = [];\r\n    };\r\n    /**\r\n     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n     * @param {!String} data\r\n     * @return {?String} Any remaining data to be process, or null if there is none\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.extractFrameCount_ = function (data) {\r\n        util.assert(this.frames === null, 'We already have a frame buffer');\r\n        // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\r\n        // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\r\n        if (data.length <= 6) {\r\n            var frameCount = Number(data);\r\n            if (!isNaN(frameCount)) {\r\n                this.handleNewFrameCount_(frameCount);\r\n                return null;\r\n            }\r\n        }\r\n        this.handleNewFrameCount_(1);\r\n        return data;\r\n    };\r\n    /**\r\n     * Process a websocket frame that has arrived from the server.\r\n     * @param mess The frame data\r\n     */\r\n    WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\r\n        if (this.mySock === null)\r\n            return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\r\n        var data = mess['data'];\r\n        this.bytesReceived += data.length;\r\n        this.stats_.incrementCounter('bytes_received', data.length);\r\n        this.resetKeepAlive();\r\n        if (this.frames !== null) {\r\n            // we're buffering\r\n            this.appendFrame_(data);\r\n        }\r\n        else {\r\n            // try to parse out a frame count, otherwise, assume 1 and process it\r\n            var remainingData = this.extractFrameCount_(data);\r\n            if (remainingData !== null) {\r\n                this.appendFrame_(remainingData);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Send a message to the server\r\n     * @param {Object} data The JSON object to transmit\r\n     */\r\n    WebSocketConnection.prototype.send = function (data) {\r\n        this.resetKeepAlive();\r\n        var dataStr = util.stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //We can only fit a certain amount in each websocket frame, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\r\n        //Send the length header\r\n        if (dataSegs.length > 1) {\r\n            this.sendString_(String(dataSegs.length));\r\n        }\r\n        //Send the actual data in segments.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.sendString_(dataSegs[i]);\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.keepaliveTimer) {\r\n            clearInterval(this.keepaliveTimer);\r\n            this.keepaliveTimer = null;\r\n        }\r\n        if (this.mySock) {\r\n            this.mySock.close();\r\n            this.mySock = null;\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is closing itself');\r\n            this.shutdown_();\r\n            // since this is an internal close, trigger the close listener\r\n            if (this.onDisconnect) {\r\n                this.onDisconnect(this.everConnected_);\r\n                this.onDisconnect = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler.\r\n     * Close the websocket and kill the connection.\r\n     */\r\n    WebSocketConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is being closed');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n     * the last activity.\r\n     */\r\n    WebSocketConnection.prototype.resetKeepAlive = function () {\r\n        var _this = this;\r\n        clearInterval(this.keepaliveTimer);\r\n        this.keepaliveTimer = setInterval(function () {\r\n            //If there has been no websocket activity for a while, send a no-op\r\n            if (_this.mySock) {\r\n                _this.sendString_('0');\r\n            }\r\n            _this.resetKeepAlive();\r\n        }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\r\n    };\r\n    /**\r\n     * Send a string over the websocket.\r\n     *\r\n     * @param {string} str String to send.\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.sendString_ = function (str) {\r\n        // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\r\n        // calls for some unknown reason.  We treat these as an error and disconnect.\r\n        // See https://app.asana.com/0/58926111402292/68021340250410\r\n        try {\r\n            this.mySock.send(str);\r\n        }\r\n        catch (e) {\r\n            this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\r\n            setTimeout(this.onClosed_.bind(this), 0);\r\n        }\r\n    };\r\n    /**\r\n     * Number of response before we consider the connection \"healthy.\"\r\n     * @type {number}\r\n     */\r\n    WebSocketConnection.responsesRequiredToBeHealthy = 2;\r\n    /**\r\n     * Time to wait for the connection te become healthy before giving up.\r\n     * @type {number}\r\n     */\r\n    WebSocketConnection.healthyTimeout = 30000;\r\n    return WebSocketConnection;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n * @constructor\r\n */\r\nvar TransportManager = /** @class */ (function () {\r\n    /**\r\n     * @param {!RepoInfo} repoInfo Metadata around the namespace we're connecting to\r\n     */\r\n    function TransportManager(repoInfo) {\r\n        this.initTransports_(repoInfo);\r\n    }\r\n    Object.defineProperty(TransportManager, \"ALL_TRANSPORTS\", {\r\n        /**\r\n         * @const\r\n         * @type {!Array.<function(new:Transport, string, RepoInfo, string=)>}\r\n         */\r\n        get: function () {\r\n            return [BrowserPollConnection, WebSocketConnection];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @param {!RepoInfo} repoInfo\r\n     * @private\r\n     */\r\n    TransportManager.prototype.initTransports_ = function (repoInfo) {\r\n        var isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\r\n        var isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\r\n        if (repoInfo.webSocketOnly) {\r\n            if (!isWebSocketsAvailable)\r\n                warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\r\n            isSkipPollConnection = true;\r\n        }\r\n        if (isSkipPollConnection) {\r\n            this.transports_ = [WebSocketConnection];\r\n        }\r\n        else {\r\n            var transports_1 = (this.transports_ = []);\r\n            each(TransportManager.ALL_TRANSPORTS, function (i, transport) {\r\n                if (transport && transport['isAvailable']()) {\r\n                    transports_1.push(transport);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @return {function(new:Transport, !string, !RepoInfo, string=, string=)} The constructor for the\r\n     * initial transport to use\r\n     */\r\n    TransportManager.prototype.initialTransport = function () {\r\n        if (this.transports_.length > 0) {\r\n            return this.transports_[0];\r\n        }\r\n        else {\r\n            throw new Error('No transports available');\r\n        }\r\n    };\r\n    /**\r\n     * @return {?function(new:Transport, function(),function(), string=)} The constructor for the next\r\n     * transport, or null\r\n     */\r\n    TransportManager.prototype.upgradeTransport = function () {\r\n        if (this.transports_.length > 1) {\r\n            return this.transports_[1];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    return TransportManager;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Abort upgrade attempt if it takes longer than 60s.\r\nvar UPGRADE_TIMEOUT = 60000;\r\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\r\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\r\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\r\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\r\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\r\n// but we've sent/received enough bytes, we don't cancel the connection.\r\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\r\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\r\nvar MESSAGE_TYPE = 't';\r\nvar MESSAGE_DATA = 'd';\r\nvar CONTROL_SHUTDOWN = 's';\r\nvar CONTROL_RESET = 'r';\r\nvar CONTROL_ERROR = 'e';\r\nvar CONTROL_PONG = 'o';\r\nvar SWITCH_ACK = 'a';\r\nvar END_TRANSMISSION = 'n';\r\nvar PING = 'p';\r\nvar SERVER_HELLO = 'h';\r\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n *\r\n * @constructor\r\n */\r\nvar Connection = /** @class */ (function () {\r\n    /**\r\n     * @param {!string} id - an id for this connection\r\n     * @param {!RepoInfo} repoInfo_ - the info for the endpoint to connect to\r\n     * @param {function(Object)} onMessage_ - the callback to be triggered when a server-push message arrives\r\n     * @param {function(number, string)} onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n     * @param {function()} onDisconnect_ - the callback to be triggered when a connection was lost\r\n     * @param {function(string)} onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n     * @param {string=} lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n     */\r\n    function Connection(id, repoInfo_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\r\n        this.id = id;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.onMessage_ = onMessage_;\r\n        this.onReady_ = onReady_;\r\n        this.onDisconnect_ = onDisconnect_;\r\n        this.onKill_ = onKill_;\r\n        this.lastSessionId = lastSessionId;\r\n        this.connectionCount = 0;\r\n        this.pendingDataMessages = [];\r\n        this.state_ = 0 /* CONNECTING */;\r\n        this.log_ = logWrapper('c:' + this.id + ':');\r\n        this.transportManager_ = new TransportManager(repoInfo_);\r\n        this.log_('Connection created');\r\n        this.start_();\r\n    }\r\n    /**\r\n     * Starts a connection attempt\r\n     * @private\r\n     */\r\n    Connection.prototype.start_ = function () {\r\n        var _this = this;\r\n        var conn = this.transportManager_.initialTransport();\r\n        this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, undefined, this.lastSessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessageReceived = this.connReceiver_(this.conn_);\r\n        var onConnectionLost = this.disconnReceiver_(this.conn_);\r\n        this.tx_ = this.conn_;\r\n        this.rx_ = this.conn_;\r\n        this.secondaryConn_ = null;\r\n        this.isHealthy_ = false;\r\n        /*\r\n         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n         * still have the context of your originating frame.\r\n         */\r\n        setTimeout(function () {\r\n            // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\r\n            _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\r\n        }, Math.floor(0));\r\n        var healthyTimeout_ms = conn['healthyTimeout'] || 0;\r\n        if (healthyTimeout_ms > 0) {\r\n            this.healthyTimeout_ = setTimeoutNonBlocking(function () {\r\n                _this.healthyTimeout_ = null;\r\n                if (!_this.isHealthy_) {\r\n                    if (_this.conn_ &&\r\n                        _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has received ' +\r\n                            _this.conn_.bytesReceived +\r\n                            ' bytes.  Marking connection healthy.');\r\n                        _this.isHealthy_ = true;\r\n                        _this.conn_.markConnectionHealthy();\r\n                    }\r\n                    else if (_this.conn_ &&\r\n                        _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has sent ' +\r\n                            _this.conn_.bytesSent +\r\n                            ' bytes.  Leaving connection alive.');\r\n                        // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\r\n                        // the server.\r\n                    }\r\n                    else {\r\n                        _this.log_('Closing unhealthy connection after timeout.');\r\n                        _this.close();\r\n                    }\r\n                }\r\n            }, Math.floor(healthyTimeout_ms));\r\n        }\r\n    };\r\n    /**\r\n     * @return {!string}\r\n     * @private\r\n     */\r\n    Connection.prototype.nextTransportId_ = function () {\r\n        return 'c:' + this.id + ':' + this.connectionCount++;\r\n    };\r\n    Connection.prototype.disconnReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (everConnected) {\r\n            if (conn === _this.conn_) {\r\n                _this.onConnectionLost_(everConnected);\r\n            }\r\n            else if (conn === _this.secondaryConn_) {\r\n                _this.log_('Secondary connection lost.');\r\n                _this.onSecondaryConnectionLost_();\r\n            }\r\n            else {\r\n                _this.log_('closing an old connection');\r\n            }\r\n        };\r\n    };\r\n    Connection.prototype.connReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (message) {\r\n            if (_this.state_ != 2 /* DISCONNECTED */) {\r\n                if (conn === _this.rx_) {\r\n                    _this.onPrimaryMessageReceived_(message);\r\n                }\r\n                else if (conn === _this.secondaryConn_) {\r\n                    _this.onSecondaryMessageReceived_(message);\r\n                }\r\n                else {\r\n                    _this.log_('message on old connection');\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     *\r\n     * @param {Object} dataMsg An arbitrary data message to be sent to the server\r\n     */\r\n    Connection.prototype.sendRequest = function (dataMsg) {\r\n        // wrap in a data message envelope and send it on\r\n        var msg = { t: 'd', d: dataMsg };\r\n        this.sendData_(msg);\r\n    };\r\n    Connection.prototype.tryCleanupConnection = function () {\r\n        if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\r\n            this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\r\n            this.conn_ = this.secondaryConn_;\r\n            this.secondaryConn_ = null;\r\n            // the server will shutdown the old connection\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryControl_ = function (controlData) {\r\n        if (MESSAGE_TYPE in controlData) {\r\n            var cmd = controlData[MESSAGE_TYPE];\r\n            if (cmd === SWITCH_ACK) {\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // Most likely the session wasn't valid. Abandon the switch attempt\r\n                this.log_('Got a reset on secondary, closing it');\r\n                this.secondaryConn_.close();\r\n                // If we were already using this connection for something, than we need to fully close\r\n                if (this.tx_ === this.secondaryConn_ ||\r\n                    this.rx_ === this.secondaryConn_) {\r\n                    this.close();\r\n                }\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on secondary.');\r\n                this.secondaryResponsesRequired_--;\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer == 'c') {\r\n            this.onSecondaryControl_(data);\r\n        }\r\n        else if (layer == 'd') {\r\n            // got a data message, but we're still second connection. Need to buffer it up\r\n            this.pendingDataMessages.push(data);\r\n        }\r\n        else {\r\n            throw new Error('Unknown protocol layer: ' + layer);\r\n        }\r\n    };\r\n    Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\r\n        if (this.secondaryResponsesRequired_ <= 0) {\r\n            this.log_('Secondary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n            this.secondaryConn_.markConnectionHealthy();\r\n            this.proceedWithUpgrade_();\r\n        }\r\n        else {\r\n            // Send a ping to make sure the connection is healthy.\r\n            this.log_('sending ping on secondary.');\r\n            this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.proceedWithUpgrade_ = function () {\r\n        // tell this connection to consider itself open\r\n        this.secondaryConn_.start();\r\n        // send ack\r\n        this.log_('sending client ack on secondary');\r\n        this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\r\n        // send end packet on primary transport, switch to sending on this one\r\n        // can receive on this one, buffer responses until end received on primary transport\r\n        this.log_('Ending transmission on primary');\r\n        this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\r\n        this.tx_ = this.secondaryConn_;\r\n        this.tryCleanupConnection();\r\n    };\r\n    Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\r\n        // Must refer to parsedData properties in quotes, so closure doesn't touch them.\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer == 'c') {\r\n            this.onControl_(data);\r\n        }\r\n        else if (layer == 'd') {\r\n            this.onDataMessage_(data);\r\n        }\r\n    };\r\n    Connection.prototype.onDataMessage_ = function (message) {\r\n        this.onPrimaryResponse_();\r\n        // We don't do anything with data messages, just kick them up a level\r\n        this.onMessage_(message);\r\n    };\r\n    Connection.prototype.onPrimaryResponse_ = function () {\r\n        if (!this.isHealthy_) {\r\n            this.primaryResponsesRequired_--;\r\n            if (this.primaryResponsesRequired_ <= 0) {\r\n                this.log_('Primary connection is healthy.');\r\n                this.isHealthy_ = true;\r\n                this.conn_.markConnectionHealthy();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onControl_ = function (controlData) {\r\n        var cmd = requireKey(MESSAGE_TYPE, controlData);\r\n        if (MESSAGE_DATA in controlData) {\r\n            var payload = controlData[MESSAGE_DATA];\r\n            if (cmd === SERVER_HELLO) {\r\n                this.onHandshake_(payload);\r\n            }\r\n            else if (cmd === END_TRANSMISSION) {\r\n                this.log_('recvd end transmission on primary');\r\n                this.rx_ = this.secondaryConn_;\r\n                for (var i = 0; i < this.pendingDataMessages.length; ++i) {\r\n                    this.onDataMessage_(this.pendingDataMessages[i]);\r\n                }\r\n                this.pendingDataMessages = [];\r\n                this.tryCleanupConnection();\r\n            }\r\n            else if (cmd === CONTROL_SHUTDOWN) {\r\n                // This was previously the 'onKill' callback passed to the lower-level connection\r\n                // payload in this case is the reason for the shutdown. Generally a human-readable error\r\n                this.onConnectionShutdown_(payload);\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // payload in this case is the host we should contact\r\n                this.onReset_(payload);\r\n            }\r\n            else if (cmd === CONTROL_ERROR) {\r\n                error('Server Error: ' + payload);\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on primary.');\r\n                this.onPrimaryResponse_();\r\n                this.sendPingOnPrimaryIfNecessary_();\r\n            }\r\n            else {\r\n                error('Unknown control packet command: ' + cmd);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {Object} handshake The handshake data returned from the server\r\n     * @private\r\n     */\r\n    Connection.prototype.onHandshake_ = function (handshake) {\r\n        var timestamp = handshake.ts;\r\n        var version = handshake.v;\r\n        var host = handshake.h;\r\n        this.sessionId = handshake.s;\r\n        this.repoInfo_.updateHost(host);\r\n        // if we've already closed the connection, then don't bother trying to progress further\r\n        if (this.state_ == 0 /* CONNECTING */) {\r\n            this.conn_.start();\r\n            this.onConnectionEstablished_(this.conn_, timestamp);\r\n            if (PROTOCOL_VERSION !== version) {\r\n                warn('Protocol version mismatch detected');\r\n            }\r\n            // TODO: do we want to upgrade? when? maybe a delay?\r\n            this.tryStartUpgrade_();\r\n        }\r\n    };\r\n    Connection.prototype.tryStartUpgrade_ = function () {\r\n        var conn = this.transportManager_.upgradeTransport();\r\n        if (conn) {\r\n            this.startUpgrade_(conn);\r\n        }\r\n    };\r\n    Connection.prototype.startUpgrade_ = function (conn) {\r\n        var _this = this;\r\n        this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.sessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.secondaryResponsesRequired_ =\r\n            conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessage = this.connReceiver_(this.secondaryConn_);\r\n        var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\r\n        this.secondaryConn_.open(onMessage, onDisconnect);\r\n        // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\r\n        setTimeoutNonBlocking(function () {\r\n            if (_this.secondaryConn_) {\r\n                _this.log_('Timed out trying to upgrade.');\r\n                _this.secondaryConn_.close();\r\n            }\r\n        }, Math.floor(UPGRADE_TIMEOUT));\r\n    };\r\n    Connection.prototype.onReset_ = function (host) {\r\n        this.log_('Reset packet received.  New host: ' + host);\r\n        this.repoInfo_.updateHost(host);\r\n        // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\r\n        // We don't currently support resets after the connection has already been established\r\n        if (this.state_ === 1 /* CONNECTED */) {\r\n            this.close();\r\n        }\r\n        else {\r\n            // Close whatever connections we have open and start again.\r\n            this.closeConnections_();\r\n            this.start_();\r\n        }\r\n    };\r\n    Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\r\n        var _this = this;\r\n        this.log_('Realtime connection established.');\r\n        this.conn_ = conn;\r\n        this.state_ = 1 /* CONNECTED */;\r\n        if (this.onReady_) {\r\n            this.onReady_(timestamp, this.sessionId);\r\n            this.onReady_ = null;\r\n        }\r\n        // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\r\n        // send some pings.\r\n        if (this.primaryResponsesRequired_ === 0) {\r\n            this.log_('Primary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n        }\r\n        else {\r\n            setTimeoutNonBlocking(function () {\r\n                _this.sendPingOnPrimaryIfNecessary_();\r\n            }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\r\n        }\r\n    };\r\n    Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\r\n        // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\r\n        if (!this.isHealthy_ && this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('sending ping on primary.');\r\n            this.sendData_({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryConnectionLost_ = function () {\r\n        var conn = this.secondaryConn_;\r\n        this.secondaryConn_ = null;\r\n        if (this.tx_ === conn || this.rx_ === conn) {\r\n            // we are relying on this connection already in some capacity. Therefore, a failure is real\r\n            this.close();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {boolean} everConnected Whether or not the connection ever reached a server. Used to determine if\r\n     * we should flush the host cache\r\n     * @private\r\n     */\r\n    Connection.prototype.onConnectionLost_ = function (everConnected) {\r\n        this.conn_ = null;\r\n        // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\r\n        // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\r\n        if (!everConnected && this.state_ === 0 /* CONNECTING */) {\r\n            this.log_('Realtime connection failed.');\r\n            // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\r\n            if (this.repoInfo_.isCacheableHost()) {\r\n                PersistentStorage.remove('host:' + this.repoInfo_.host);\r\n                // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\r\n                this.repoInfo_.internalHost = this.repoInfo_.host;\r\n            }\r\n        }\r\n        else if (this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('Realtime connection lost.');\r\n        }\r\n        this.close();\r\n    };\r\n    /**\r\n     *\r\n     * @param {string} reason\r\n     * @private\r\n     */\r\n    Connection.prototype.onConnectionShutdown_ = function (reason) {\r\n        this.log_('Connection shutdown command received. Shutting down...');\r\n        if (this.onKill_) {\r\n            this.onKill_(reason);\r\n            this.onKill_ = null;\r\n        }\r\n        // We intentionally don't want to fire onDisconnect (kill is a different case),\r\n        // so clear the callback.\r\n        this.onDisconnect_ = null;\r\n        this.close();\r\n    };\r\n    Connection.prototype.sendData_ = function (data) {\r\n        if (this.state_ !== 1 /* CONNECTED */) {\r\n            throw 'Connection is not connected';\r\n        }\r\n        else {\r\n            this.tx_.send(data);\r\n        }\r\n    };\r\n    /**\r\n     * Cleans up this connection, calling the appropriate callbacks\r\n     */\r\n    Connection.prototype.close = function () {\r\n        if (this.state_ !== 2 /* DISCONNECTED */) {\r\n            this.log_('Closing realtime connection.');\r\n            this.state_ = 2 /* DISCONNECTED */;\r\n            this.closeConnections_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_();\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    Connection.prototype.closeConnections_ = function () {\r\n        this.log_('Shutting down all connections');\r\n        if (this.conn_) {\r\n            this.conn_.close();\r\n            this.conn_ = null;\r\n        }\r\n        if (this.secondaryConn_) {\r\n            this.secondaryConn_.close();\r\n            this.secondaryConn_ = null;\r\n        }\r\n        if (this.healthyTimeout_) {\r\n            clearTimeout(this.healthyTimeout_);\r\n            this.healthyTimeout_ = null;\r\n        }\r\n    };\r\n    return Connection;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\r\nvar ServerActions = /** @class */ (function () {\r\n    function ServerActions() {\r\n    }\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     * @param {string=} hash\r\n     */\r\n    ServerActions.prototype.put = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, ?string)} onComplete\r\n     * @param {string=} hash\r\n     */\r\n    ServerActions.prototype.merge = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * Refreshes the auth token for the current connection.\r\n     * @param {string} token The authentication token\r\n     */\r\n    ServerActions.prototype.refreshAuthToken = function (token) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) { };\r\n    /**\r\n     * @param {Object.<string, *>} stats\r\n     */\r\n    ServerActions.prototype.reportStats = function (stats) { };\r\n    return ServerActions;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar RECONNECT_MIN_DELAY = 1000;\r\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\r\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\r\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\r\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\r\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill';\r\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\r\nvar INVALID_AUTH_TOKEN_THRESHOLD = 3;\r\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\r\nvar PersistentConnection = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PersistentConnection, _super);\r\n    /**\r\n     * @implements {ServerActions}\r\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\r\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\r\n     * @param onConnectStatus_\r\n     * @param onServerInfoUpdate_\r\n     * @param authTokenProvider_\r\n     * @param authOverride_\r\n     */\r\n    function PersistentConnection(repoInfo_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, authOverride_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.onConnectStatus_ = onConnectStatus_;\r\n        _this.onServerInfoUpdate_ = onServerInfoUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        _this.authOverride_ = authOverride_;\r\n        // Used for diagnostic logging.\r\n        _this.id = PersistentConnection.nextPersistentConnectionId_++;\r\n        _this.log_ = logWrapper('p:' + _this.id + ':');\r\n        /** @private {Object} */\r\n        _this.interruptReasons_ = {};\r\n        _this.listens_ = {};\r\n        _this.outstandingPuts_ = [];\r\n        _this.outstandingPutCount_ = 0;\r\n        _this.onDisconnectRequestQueue_ = [];\r\n        _this.connected_ = false;\r\n        _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n        _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\r\n        _this.securityDebugCallback_ = null;\r\n        _this.lastSessionId = null;\r\n        /** @private {number|null} */\r\n        _this.establishConnectionTimer_ = null;\r\n        /** @private {boolean} */\r\n        _this.visible_ = false;\r\n        // Before we get connected, we keep a queue of pending messages to send.\r\n        _this.requestCBHash_ = {};\r\n        _this.requestNumber_ = 0;\r\n        /** @private {?{\r\n         *   sendRequest(Object),\r\n         *   close()\r\n         * }} */\r\n        _this.realtime_ = null;\r\n        /** @private {string|null} */\r\n        _this.authToken_ = null;\r\n        _this.forceTokenRefresh_ = false;\r\n        _this.invalidAuthTokenCount_ = 0;\r\n        _this.firstConnection_ = true;\r\n        _this.lastConnectionAttemptTime_ = null;\r\n        _this.lastConnectionEstablishedTime_ = null;\r\n        if (authOverride_ && !util.isNodeSdk()) {\r\n            throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\r\n        }\r\n        _this.scheduleConnect_(0);\r\n        VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\r\n        if (repoInfo_.host.indexOf('fblocal') === -1) {\r\n            OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {!string} action\r\n     * @param {*} body\r\n     * @param {function(*)=} onResponse\r\n     * @protected\r\n     */\r\n    PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\r\n        var curReqNum = ++this.requestNumber_;\r\n        var msg = { r: curReqNum, a: action, b: body };\r\n        this.log_(util.stringify(msg));\r\n        util.assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\r\n        this.realtime_.sendRequest(msg);\r\n        if (onResponse) {\r\n            this.requestCBHash_[curReqNum] = onResponse;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var queryId = query.queryIdentifier();\r\n        var pathString = query.path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + queryId);\r\n        this.listens_[pathString] = this.listens_[pathString] || {};\r\n        util.assert(query.getQueryParams().isDefault() ||\r\n            !query.getQueryParams().loadsAllData(), 'listen() called for non-default but complete query');\r\n        util.assert(!this.listens_[pathString][queryId], 'listen() called twice for same path/queryId.');\r\n        var listenSpec = {\r\n            onComplete: onComplete,\r\n            hashFn: currentHashFn,\r\n            query: query,\r\n            tag: tag\r\n        };\r\n        this.listens_[pathString][queryId] = listenSpec;\r\n        if (this.connected_) {\r\n            this.sendListen_(listenSpec);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!{onComplete(),\r\n     *           hashFn():!string,\r\n     *           query: !Query,\r\n     *           tag: ?number}} listenSpec\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.sendListen_ = function (listenSpec) {\r\n        var _this = this;\r\n        var query = listenSpec.query;\r\n        var pathString = query.path.toString();\r\n        var queryId = query.queryIdentifier();\r\n        this.log_('Listen on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'q';\r\n        // Only bother to send query if it's non-default.\r\n        if (listenSpec.tag) {\r\n            req['q'] = query.queryObject();\r\n            req['t'] = listenSpec.tag;\r\n        }\r\n        req[ /*hash*/'h'] = listenSpec.hashFn();\r\n        this.sendRequest(action, req, function (message) {\r\n            var payload = message[ /*data*/'d'];\r\n            var status = message[ /*status*/'s'];\r\n            // print warnings in any case...\r\n            PersistentConnection.warnOnListenWarnings_(payload, query);\r\n            var currentListenSpec = _this.listens_[pathString] && _this.listens_[pathString][queryId];\r\n            // only trigger actions if the listen hasn't been removed and readded\r\n            if (currentListenSpec === listenSpec) {\r\n                _this.log_('listen response', message);\r\n                if (status !== 'ok') {\r\n                    _this.removeListen_(pathString, queryId);\r\n                }\r\n                if (listenSpec.onComplete) {\r\n                    listenSpec.onComplete(status, payload);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @param {*} payload\r\n     * @param {!Query} query\r\n     * @private\r\n     */\r\n    PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\r\n        if (payload && typeof payload === 'object' && util.contains(payload, 'w')) {\r\n            var warnings = util.safeGet(payload, 'w');\r\n            if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\r\n                var indexSpec = '\".indexOn\": \"' +\r\n                    query\r\n                        .getQueryParams()\r\n                        .getIndex()\r\n                        .toString() +\r\n                    '\"';\r\n                var indexPath = query.path.toString();\r\n                warn(\"Using an unspecified index. Your data will be downloaded and \" +\r\n                    (\"filtered on the client. Consider adding \" + indexSpec + \" at \") +\r\n                    (indexPath + \" to your security rules for better performance.\"));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.refreshAuthToken = function (token) {\r\n        this.authToken_ = token;\r\n        this.log_('Auth token refreshed');\r\n        if (this.authToken_) {\r\n            this.tryAuth();\r\n        }\r\n        else {\r\n            //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\r\n            //the credential so we dont become authenticated next time we connect.\r\n            if (this.connected_) {\r\n                this.sendRequest('unauth', {}, function () { });\r\n            }\r\n        }\r\n        this.reduceReconnectDelayIfAdminCredential_(token);\r\n    };\r\n    /**\r\n     * @param {!string} credential\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\r\n        // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\r\n        // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\r\n        var isFirebaseSecret = credential && credential.length === 40;\r\n        if (isFirebaseSecret || util.isAdmin(credential)) {\r\n            this.log_('Admin auth credential detected.  Reducing max reconnect time.');\r\n            this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n        }\r\n    };\r\n    /**\r\n     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n     * a auth revoked (the connection is closed).\r\n     */\r\n    PersistentConnection.prototype.tryAuth = function () {\r\n        var _this = this;\r\n        if (this.connected_ && this.authToken_) {\r\n            var token_1 = this.authToken_;\r\n            var authMethod = util.isValidFormat(token_1) ? 'auth' : 'gauth';\r\n            var requestData = { cred: token_1 };\r\n            if (this.authOverride_ === null) {\r\n                requestData['noauth'] = true;\r\n            }\r\n            else if (typeof this.authOverride_ === 'object') {\r\n                requestData['authvar'] = this.authOverride_;\r\n            }\r\n            this.sendRequest(authMethod, requestData, function (res) {\r\n                var status = res[ /*status*/'s'];\r\n                var data = res[ /*data*/'d'] || 'error';\r\n                if (_this.authToken_ === token_1) {\r\n                    if (status === 'ok') {\r\n                        _this.invalidAuthTokenCount_ = 0;\r\n                    }\r\n                    else {\r\n                        // Triggers reconnect and force refresh for auth token\r\n                        _this.onAuthRevoked_(status, data);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.unlisten = function (query, tag) {\r\n        var pathString = query.path.toString();\r\n        var queryId = query.queryIdentifier();\r\n        this.log_('Unlisten called for ' + pathString + ' ' + queryId);\r\n        util.assert(query.getQueryParams().isDefault() ||\r\n            !query.getQueryParams().loadsAllData(), 'unlisten() called for non-default but complete query');\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && this.connected_) {\r\n            this.sendUnlisten_(pathString, queryId, query.queryObject(), tag);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\r\n        this.log_('Unlisten on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'n';\r\n        // Only bother sending queryId if it's non-default.\r\n        if (tag) {\r\n            req['q'] = queryObj;\r\n            req['t'] = tag;\r\n        }\r\n        this.sendRequest(action, req);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('o', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'o',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('om', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'om',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('oc', pathString, null, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'oc',\r\n                data: null,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\r\n        var request = { /*path*/ p: pathString, /*data*/ d: data };\r\n        this.log_('onDisconnect ' + action, request);\r\n        this.sendRequest(action, request, function (response) {\r\n            if (onComplete) {\r\n                setTimeout(function () {\r\n                    onComplete(response[ /*status*/'s'], response[ /* data */'d']);\r\n                }, Math.floor(0));\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('p', pathString, data, onComplete, hash);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('m', pathString, data, onComplete, hash);\r\n    };\r\n    PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\r\n        var request = {\r\n            /*path*/ p: pathString,\r\n            /*data*/ d: data\r\n        };\r\n        if (hash !== undefined)\r\n            request[ /*hash*/'h'] = hash;\r\n        // TODO: Only keep track of the most recent put for a given path?\r\n        this.outstandingPuts_.push({\r\n            action: action,\r\n            request: request,\r\n            onComplete: onComplete\r\n        });\r\n        this.outstandingPutCount_++;\r\n        var index = this.outstandingPuts_.length - 1;\r\n        if (this.connected_) {\r\n            this.sendPut_(index);\r\n        }\r\n        else {\r\n            this.log_('Buffering put: ' + pathString);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendPut_ = function (index) {\r\n        var _this = this;\r\n        var action = this.outstandingPuts_[index].action;\r\n        var request = this.outstandingPuts_[index].request;\r\n        var onComplete = this.outstandingPuts_[index].onComplete;\r\n        this.outstandingPuts_[index].queued = this.connected_;\r\n        this.sendRequest(action, request, function (message) {\r\n            _this.log_(action + ' response', message);\r\n            delete _this.outstandingPuts_[index];\r\n            _this.outstandingPutCount_--;\r\n            // Clean up array occasionally.\r\n            if (_this.outstandingPutCount_ === 0) {\r\n                _this.outstandingPuts_ = [];\r\n            }\r\n            if (onComplete)\r\n                onComplete(message[ /*status*/'s'], message[ /* data */'d']);\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.reportStats = function (stats) {\r\n        var _this = this;\r\n        // If we're not connected, we just drop the stats.\r\n        if (this.connected_) {\r\n            var request = { /*counters*/ c: stats };\r\n            this.log_('reportStats', request);\r\n            this.sendRequest(/*stats*/ 's', request, function (result) {\r\n                var status = result[ /*status*/'s'];\r\n                if (status !== 'ok') {\r\n                    var errorReason = result[ /* data */'d'];\r\n                    _this.log_('reportStats', 'Error sending stats: ' + errorReason);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @param {*} message\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.onDataMessage_ = function (message) {\r\n        if ('r' in message) {\r\n            // this is a response\r\n            this.log_('from server: ' + util.stringify(message));\r\n            var reqNum = message['r'];\r\n            var onResponse = this.requestCBHash_[reqNum];\r\n            if (onResponse) {\r\n                delete this.requestCBHash_[reqNum];\r\n                onResponse(message[ /*body*/'b']);\r\n            }\r\n        }\r\n        else if ('error' in message) {\r\n            throw 'A server-side error has occurred: ' + message['error'];\r\n        }\r\n        else if ('a' in message) {\r\n            // a and b are action and body, respectively\r\n            this.onDataPush_(message['a'], message['b']);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDataPush_ = function (action, body) {\r\n        this.log_('handleServerMessage', action, body);\r\n        if (action === 'd')\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge*/ false, body['t']);\r\n        else if (action === 'm')\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge=*/ true, body['t']);\r\n        else if (action === 'c')\r\n            this.onListenRevoked_(body[ /*path*/'p'], body[ /*query*/'q']);\r\n        else if (action === 'ac')\r\n            this.onAuthRevoked_(body[ /*status code*/'s'], body[ /* explanation */'d']);\r\n        else if (action === 'sd')\r\n            this.onSecurityDebugPacket_(body);\r\n        else\r\n            error('Unrecognized action received from server: ' +\r\n                util.stringify(action) +\r\n                '\\nAre you using the latest client?');\r\n    };\r\n    PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\r\n        this.log_('connection ready');\r\n        this.connected_ = true;\r\n        this.lastConnectionEstablishedTime_ = new Date().getTime();\r\n        this.handleTimestamp_(timestamp);\r\n        this.lastSessionId = sessionId;\r\n        if (this.firstConnection_) {\r\n            this.sendConnectStats_();\r\n        }\r\n        this.restoreState_();\r\n        this.firstConnection_ = false;\r\n        this.onConnectStatus_(true);\r\n    };\r\n    PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\r\n        var _this = this;\r\n        util.assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\r\n        if (this.establishConnectionTimer_) {\r\n            clearTimeout(this.establishConnectionTimer_);\r\n        }\r\n        // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\r\n        // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\r\n        this.establishConnectionTimer_ = setTimeout(function () {\r\n            _this.establishConnectionTimer_ = null;\r\n            _this.establishConnection_();\r\n        }, Math.floor(timeout));\r\n    };\r\n    /**\r\n     * @param {boolean} visible\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.onVisible_ = function (visible) {\r\n        // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\r\n        if (visible &&\r\n            !this.visible_ &&\r\n            this.reconnectDelay_ === this.maxReconnectDelay_) {\r\n            this.log_('Window became visible.  Reducing delay.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        this.visible_ = visible;\r\n    };\r\n    PersistentConnection.prototype.onOnline_ = function (online) {\r\n        if (online) {\r\n            this.log_('Browser went online.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        else {\r\n            this.log_('Browser went offline.  Killing connection.');\r\n            if (this.realtime_) {\r\n                this.realtime_.close();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\r\n        this.log_('data client disconnected');\r\n        this.connected_ = false;\r\n        this.realtime_ = null;\r\n        // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\r\n        this.cancelSentTransactions_();\r\n        // Clear out the pending requests.\r\n        this.requestCBHash_ = {};\r\n        if (this.shouldReconnect_()) {\r\n            if (!this.visible_) {\r\n                this.log_(\"Window isn't visible.  Delaying reconnect.\");\r\n                this.reconnectDelay_ = this.maxReconnectDelay_;\r\n                this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            }\r\n            else if (this.lastConnectionEstablishedTime_) {\r\n                // If we've been connected long enough, reset reconnect delay to minimum.\r\n                var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\r\n                if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT)\r\n                    this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n                this.lastConnectionEstablishedTime_ = null;\r\n            }\r\n            var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\r\n            var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\r\n            reconnectDelay = Math.random() * reconnectDelay;\r\n            this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\r\n            this.scheduleConnect_(reconnectDelay);\r\n            // Adjust reconnect delay for next time.\r\n            this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\r\n        }\r\n        this.onConnectStatus_(false);\r\n    };\r\n    PersistentConnection.prototype.establishConnection_ = function () {\r\n        if (this.shouldReconnect_()) {\r\n            this.log_('Making a connection attempt');\r\n            this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            this.lastConnectionEstablishedTime_ = null;\r\n            var onDataMessage_1 = this.onDataMessage_.bind(this);\r\n            var onReady_1 = this.onReady_.bind(this);\r\n            var onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\r\n            var connId_1 = this.id + ':' + PersistentConnection.nextConnectionId_++;\r\n            var self_1 = this;\r\n            var lastSessionId_1 = this.lastSessionId;\r\n            var canceled_1 = false;\r\n            var connection_1 = null;\r\n            var closeFn_1 = function () {\r\n                if (connection_1) {\r\n                    connection_1.close();\r\n                }\r\n                else {\r\n                    canceled_1 = true;\r\n                    onDisconnect_1();\r\n                }\r\n            };\r\n            var sendRequestFn = function (msg) {\r\n                util.assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\r\n                connection_1.sendRequest(msg);\r\n            };\r\n            this.realtime_ = {\r\n                close: closeFn_1,\r\n                sendRequest: sendRequestFn\r\n            };\r\n            var forceRefresh = this.forceTokenRefresh_;\r\n            this.forceTokenRefresh_ = false;\r\n            // First fetch auth token, and establish connection after fetching the token was successful\r\n            this.authTokenProvider_\r\n                .getToken(forceRefresh)\r\n                .then(function (result) {\r\n                if (!canceled_1) {\r\n                    log('getToken() completed. Creating connection.');\r\n                    self_1.authToken_ = result && result.accessToken;\r\n                    connection_1 = new Connection(connId_1, self_1.repoInfo_, onDataMessage_1, onReady_1, onDisconnect_1, \r\n                    /* onKill= */ function (reason) {\r\n                        warn(reason + ' (' + self_1.repoInfo_.toString() + ')');\r\n                        self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);\r\n                    }, lastSessionId_1);\r\n                }\r\n                else {\r\n                    log('getToken() completed but was canceled');\r\n                }\r\n            })\r\n                .then(null, function (error$$1) {\r\n                self_1.log_('Failed to get token: ' + error$$1);\r\n                if (!canceled_1) {\r\n                    if (util.CONSTANTS.NODE_ADMIN) {\r\n                        // This may be a critical error for the Admin Node.js SDK, so log a warning.\r\n                        // But getToken() may also just have temporarily failed, so we still want to\r\n                        // continue retrying.\r\n                        warn(error$$1);\r\n                    }\r\n                    closeFn_1();\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} reason\r\n     */\r\n    PersistentConnection.prototype.interrupt = function (reason) {\r\n        log('Interrupting connection for reason: ' + reason);\r\n        this.interruptReasons_[reason] = true;\r\n        if (this.realtime_) {\r\n            this.realtime_.close();\r\n        }\r\n        else {\r\n            if (this.establishConnectionTimer_) {\r\n                clearTimeout(this.establishConnectionTimer_);\r\n                this.establishConnectionTimer_ = null;\r\n            }\r\n            if (this.connected_) {\r\n                this.onRealtimeDisconnect_();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} reason\r\n     */\r\n    PersistentConnection.prototype.resume = function (reason) {\r\n        log('Resuming connection for reason: ' + reason);\r\n        delete this.interruptReasons_[reason];\r\n        if (util.isEmpty(this.interruptReasons_)) {\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\r\n        var delta = timestamp - new Date().getTime();\r\n        this.onServerInfoUpdate_({ serverTimeOffset: delta });\r\n    };\r\n    PersistentConnection.prototype.cancelSentTransactions_ = function () {\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            var put = this.outstandingPuts_[i];\r\n            if (put && /*hash*/ 'h' in put.request && put.queued) {\r\n                if (put.onComplete)\r\n                    put.onComplete('disconnect');\r\n                delete this.outstandingPuts_[i];\r\n                this.outstandingPutCount_--;\r\n            }\r\n        }\r\n        // Clean up array occasionally.\r\n        if (this.outstandingPutCount_ === 0)\r\n            this.outstandingPuts_ = [];\r\n    };\r\n    /**\r\n     * @param {!string} pathString\r\n     * @param {Array.<*>=} query\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\r\n        // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\r\n        var queryId;\r\n        if (!query) {\r\n            queryId = 'default';\r\n        }\r\n        else {\r\n            queryId = query.map(function (q) { return ObjectToUniqueKey(q); }).join('$');\r\n        }\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && listen.onComplete)\r\n            listen.onComplete('permission_denied');\r\n    };\r\n    /**\r\n     * @param {!string} pathString\r\n     * @param {!string} queryId\r\n     * @return {{queries:Array.<Query>, onComplete:function(string)}}\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\r\n        var normalizedPathString = new Path(pathString).toString(); // normalize path.\r\n        var listen;\r\n        if (this.listens_[normalizedPathString] !== undefined) {\r\n            listen = this.listens_[normalizedPathString][queryId];\r\n            delete this.listens_[normalizedPathString][queryId];\r\n            if (util.getCount(this.listens_[normalizedPathString]) === 0) {\r\n                delete this.listens_[normalizedPathString];\r\n            }\r\n        }\r\n        else {\r\n            // all listens for this path has already been removed\r\n            listen = undefined;\r\n        }\r\n        return listen;\r\n    };\r\n    PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\r\n        log('Auth token revoked: ' + statusCode + '/' + explanation);\r\n        this.authToken_ = null;\r\n        this.forceTokenRefresh_ = true;\r\n        this.realtime_.close();\r\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\r\n            // We'll wait a couple times before logging the warning / increasing the\r\n            // retry period since oauth tokens will report as \"invalid\" if they're\r\n            // just expired. Plus there may be transient issues that resolve themselves.\r\n            this.invalidAuthTokenCount_++;\r\n            if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {\r\n                // Set a long reconnect delay because recovery is unlikely\r\n                this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n                // Notify the auth token provider that the token is invalid, which will log\r\n                // a warning\r\n                this.authTokenProvider_.notifyForInvalidToken();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\r\n        if (this.securityDebugCallback_) {\r\n            this.securityDebugCallback_(body);\r\n        }\r\n        else {\r\n            if ('msg' in body) {\r\n                console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.restoreState_ = function () {\r\n        var _this = this;\r\n        //Re-authenticate ourselves if we have a credential stored.\r\n        this.tryAuth();\r\n        // Puts depend on having received the corresponding data update from the server before they complete, so we must\r\n        // make sure to send listens before puts.\r\n        util.forEach(this.listens_, function (pathString, queries) {\r\n            util.forEach(queries, function (key, listenSpec) {\r\n                _this.sendListen_(listenSpec);\r\n            });\r\n        });\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            if (this.outstandingPuts_[i])\r\n                this.sendPut_(i);\r\n        }\r\n        while (this.onDisconnectRequestQueue_.length) {\r\n            var request = this.onDisconnectRequestQueue_.shift();\r\n            this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\r\n        }\r\n    };\r\n    /**\r\n     * Sends client stats for first connection\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.sendConnectStats_ = function () {\r\n        var stats = {};\r\n        var clientName = 'js';\r\n        if (util.CONSTANTS.NODE_ADMIN) {\r\n            clientName = 'admin_node';\r\n        }\r\n        else if (util.CONSTANTS.NODE_CLIENT) {\r\n            clientName = 'node';\r\n        }\r\n        stats['sdk.' + clientName + '.' + firebase.SDK_VERSION.replace(/\\./g, '-')] = 1;\r\n        if (util.isMobileCordova()) {\r\n            stats['framework.cordova'] = 1;\r\n        }\r\n        else if (util.isReactNative()) {\r\n            stats['framework.reactnative'] = 1;\r\n        }\r\n        this.reportStats(stats);\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.shouldReconnect_ = function () {\r\n        var online = OnlineMonitor.getInstance().currentlyOnline();\r\n        return util.isEmpty(this.interruptReasons_) && online;\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    PersistentConnection.nextPersistentConnectionId_ = 0;\r\n    /**\r\n     * Counter for number of connections created. Mainly used for tagging in the logs\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    PersistentConnection.nextConnectionId_ = 0;\r\n    return PersistentConnection;\r\n}(ServerActions));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\r\nvar ReadonlyRestClient = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ReadonlyRestClient, _super);\r\n    /**\r\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\r\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\r\n     * @param {AuthTokenProvider} authTokenProvider_\r\n     * @implements {ServerActions}\r\n     */\r\n    function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        /** @private {function(...[*])} */\r\n        _this.log_ = logWrapper('p:rest:');\r\n        /**\r\n         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n         * that's been removed. :-/\r\n         *\r\n         * @private {!Object.<string, !Object>}\r\n         */\r\n        _this.listens_ = {};\r\n        return _this;\r\n    }\r\n    ReadonlyRestClient.prototype.reportStats = function (stats) {\r\n        throw new Error('Method not implemented.');\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {?number=} tag\r\n     * @return {string}\r\n     * @private\r\n     */\r\n    ReadonlyRestClient.getListenId_ = function (query, tag) {\r\n        if (tag !== undefined) {\r\n            return 'tag$' + tag;\r\n        }\r\n        else {\r\n            util.assert(query.getQueryParams().isDefault(), \"should have a tag if it's not a default query.\");\r\n            return query.path.toString();\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var _this = this;\r\n        var pathString = query.path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + query.queryIdentifier());\r\n        // Mark this listener so we can tell if it's removed.\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        var thisListen = {};\r\n        this.listens_[listenId] = thisListen;\r\n        var queryStringParamaters = query\r\n            .getQueryParams()\r\n            .toRestQueryStringParameters();\r\n        this.restRequest_(pathString + '.json', queryStringParamaters, function (error$$1, result) {\r\n            var data = result;\r\n            if (error$$1 === 404) {\r\n                data = null;\r\n                error$$1 = null;\r\n            }\r\n            if (error$$1 === null) {\r\n                _this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\r\n            }\r\n            if (util.safeGet(_this.listens_, listenId) === thisListen) {\r\n                var status_1;\r\n                if (!error$$1) {\r\n                    status_1 = 'ok';\r\n                }\r\n                else if (error$$1 == 401) {\r\n                    status_1 = 'permission_denied';\r\n                }\r\n                else {\r\n                    status_1 = 'rest_error:' + error$$1;\r\n                }\r\n                onComplete(status_1, null);\r\n            }\r\n        });\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.unlisten = function (query, tag) {\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        delete this.listens_[listenId];\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.refreshAuthToken = function (token) {\r\n        // no-op since we just always call getToken.\r\n    };\r\n    /**\r\n     * Performs a REST request to the given path, with the provided query string parameters,\r\n     * and any auth credentials we have.\r\n     *\r\n     * @param {!string} pathString\r\n     * @param {!Object.<string, *>} queryStringParameters\r\n     * @param {?function(?number, *=)} callback\r\n     * @private\r\n     */\r\n    ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\r\n        var _this = this;\r\n        if (queryStringParameters === void 0) { queryStringParameters = {}; }\r\n        queryStringParameters['format'] = 'export';\r\n        this.authTokenProvider_\r\n            .getToken(/*forceRefresh=*/ false)\r\n            .then(function (authTokenData) {\r\n            var authToken = authTokenData && authTokenData.accessToken;\r\n            if (authToken) {\r\n                queryStringParameters['auth'] = authToken;\r\n            }\r\n            var url = (_this.repoInfo_.secure ? 'https://' : 'http://') +\r\n                _this.repoInfo_.host +\r\n                pathString +\r\n                '?' +\r\n                util.querystring(queryStringParameters);\r\n            _this.log_('Sending REST request for ' + url);\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = function () {\r\n                if (callback && xhr.readyState === 4) {\r\n                    _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\r\n                    var res = null;\r\n                    if (xhr.status >= 200 && xhr.status < 300) {\r\n                        try {\r\n                            res = util.jsonEval(xhr.responseText);\r\n                        }\r\n                        catch (e) {\r\n                            warn('Failed to parse JSON response for ' +\r\n                                url +\r\n                                ': ' +\r\n                                xhr.responseText);\r\n                        }\r\n                        callback(null, res);\r\n                    }\r\n                    else {\r\n                        // 401 and 404 are expected.\r\n                        if (xhr.status !== 401 && xhr.status !== 404) {\r\n                            warn('Got unsuccessful REST response for ' +\r\n                                url +\r\n                                ' Status: ' +\r\n                                xhr.status);\r\n                        }\r\n                        callback(xhr.status);\r\n                    }\r\n                    callback = null;\r\n                }\r\n            };\r\n            xhr.open('GET', url, /*asynchronous=*/ true);\r\n            xhr.send();\r\n        });\r\n    };\r\n    return ReadonlyRestClient;\r\n}(ServerActions));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar INTERRUPT_REASON = 'repo_interrupt';\r\n/**\r\n * A connection to a single data repository.\r\n */\r\nvar Repo = /** @class */ (function () {\r\n    /**\r\n     * @param {!RepoInfo} repoInfo_\r\n     * @param {boolean} forceRestClient\r\n     * @param {!FirebaseApp} app\r\n     */\r\n    function Repo(repoInfo_, forceRestClient, app) {\r\n        var _this = this;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.app = app;\r\n        this.dataUpdateCount = 0;\r\n        this.statsListener_ = null;\r\n        this.eventQueue_ = new EventQueue();\r\n        this.nextWriteId_ = 1;\r\n        this.interceptServerDataCallback_ = null;\r\n        // A list of data pieces and paths to be set when this client disconnects.\r\n        this.onDisconnect_ = new SparseSnapshotTree();\r\n        /**\r\n         * TODO: This should be @private but it's used by test_access.js and internal.js\r\n         * @type {?PersistentConnection}\r\n         */\r\n        this.persistentConnection_ = null;\r\n        /** @type {!AuthTokenProvider} */\r\n        var authTokenProvider = new AuthTokenProvider(app);\r\n        this.stats_ = StatsManager.getCollection(repoInfo_);\r\n        if (forceRestClient || beingCrawled()) {\r\n            this.server_ = new ReadonlyRestClient(this.repoInfo_, this.onDataUpdate_.bind(this), authTokenProvider);\r\n            // Minor hack: Fire onConnect immediately, since there's no actual connection.\r\n            setTimeout(this.onConnectStatus_.bind(this, true), 0);\r\n        }\r\n        else {\r\n            var authOverride = app.options['databaseAuthVariableOverride'];\r\n            // Validate authOverride\r\n            if (typeof authOverride !== 'undefined' && authOverride !== null) {\r\n                if (typeof authOverride !== 'object') {\r\n                    throw new Error('Only objects are supported for option databaseAuthVariableOverride');\r\n                }\r\n                try {\r\n                    util.stringify(authOverride);\r\n                }\r\n                catch (e) {\r\n                    throw new Error('Invalid authOverride provided: ' + e);\r\n                }\r\n            }\r\n            this.persistentConnection_ = new PersistentConnection(this.repoInfo_, this.onDataUpdate_.bind(this), this.onConnectStatus_.bind(this), this.onServerInfoUpdate_.bind(this), authTokenProvider, authOverride);\r\n            this.server_ = this.persistentConnection_;\r\n        }\r\n        authTokenProvider.addTokenChangeListener(function (token) {\r\n            _this.server_.refreshAuthToken(token);\r\n        });\r\n        // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\r\n        // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\r\n        this.statsReporter_ = StatsManager.getOrCreateReporter(repoInfo_, function () { return new StatsReporter(_this.stats_, _this.server_); });\r\n        this.transactions_init_();\r\n        // Used for .info.\r\n        this.infoData_ = new SnapshotHolder();\r\n        this.infoSyncTree_ = new SyncTree({\r\n            startListening: function (query, tag, currentHashFn, onComplete) {\r\n                var infoEvents = [];\r\n                var node = _this.infoData_.getNode(query.path);\r\n                // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\r\n                // on initial data...\r\n                if (!node.isEmpty()) {\r\n                    infoEvents = _this.infoSyncTree_.applyServerOverwrite(query.path, node);\r\n                    setTimeout(function () {\r\n                        onComplete('ok');\r\n                    }, 0);\r\n                }\r\n                return infoEvents;\r\n            },\r\n            stopListening: function () { }\r\n        });\r\n        this.updateInfo_('connected', false);\r\n        this.serverSyncTree_ = new SyncTree({\r\n            startListening: function (query, tag, currentHashFn, onComplete) {\r\n                _this.server_.listen(query, currentHashFn, tag, function (status, data) {\r\n                    var events = onComplete(status, data);\r\n                    _this.eventQueue_.raiseEventsForChangedPath(query.path, events);\r\n                });\r\n                // No synchronous events for network-backed sync trees\r\n                return [];\r\n            },\r\n            stopListening: function (query, tag) {\r\n                _this.server_.unlisten(query, tag);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @return {string}  The URL corresponding to the root of this Firebase.\r\n     */\r\n    Repo.prototype.toString = function () {\r\n        return ((this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host);\r\n    };\r\n    /**\r\n     * @return {!string} The namespace represented by the repo.\r\n     */\r\n    Repo.prototype.name = function () {\r\n        return this.repoInfo_.namespace;\r\n    };\r\n    /**\r\n     * @return {!number} The time in milliseconds, taking the server offset into account if we have one.\r\n     */\r\n    Repo.prototype.serverTime = function () {\r\n        var offsetNode = this.infoData_.getNode(new Path('.info/serverTimeOffset'));\r\n        var offset = offsetNode.val() || 0;\r\n        return new Date().getTime() + offset;\r\n    };\r\n    /**\r\n     * Generate ServerValues using some variables from the repo object.\r\n     * @return {!Object}\r\n     */\r\n    Repo.prototype.generateServerValues = function () {\r\n        return generateWithValues({\r\n            timestamp: this.serverTime()\r\n        });\r\n    };\r\n    /**\r\n     * Called by realtime when we get new messages from the server.\r\n     *\r\n     * @private\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {boolean} isMerge\r\n     * @param {?number} tag\r\n     */\r\n    Repo.prototype.onDataUpdate_ = function (pathString, data, isMerge, tag) {\r\n        // For testing.\r\n        this.dataUpdateCount++;\r\n        var path = new Path(pathString);\r\n        data = this.interceptServerDataCallback_\r\n            ? this.interceptServerDataCallback_(pathString, data)\r\n            : data;\r\n        var events = [];\r\n        if (tag) {\r\n            if (isMerge) {\r\n                var taggedChildren = util.map(data, function (raw) {\r\n                    return nodeFromJSON$1(raw);\r\n                });\r\n                events = this.serverSyncTree_.applyTaggedQueryMerge(path, taggedChildren, tag);\r\n            }\r\n            else {\r\n                var taggedSnap = nodeFromJSON$1(data);\r\n                events = this.serverSyncTree_.applyTaggedQueryOverwrite(path, taggedSnap, tag);\r\n            }\r\n        }\r\n        else if (isMerge) {\r\n            var changedChildren = util.map(data, function (raw) {\r\n                return nodeFromJSON$1(raw);\r\n            });\r\n            events = this.serverSyncTree_.applyServerMerge(path, changedChildren);\r\n        }\r\n        else {\r\n            var snap = nodeFromJSON$1(data);\r\n            events = this.serverSyncTree_.applyServerOverwrite(path, snap);\r\n        }\r\n        var affectedPath = path;\r\n        if (events.length > 0) {\r\n            // Since we have a listener outstanding for each transaction, receiving any events\r\n            // is a proxy for some change having occurred.\r\n            affectedPath = this.rerunTransactions_(path);\r\n        }\r\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, events);\r\n    };\r\n    /**\r\n     * TODO: This should be @private but it's used by test_access.js and internal.js\r\n     * @param {?function(!string, *):*} callback\r\n     * @private\r\n     */\r\n    Repo.prototype.interceptServerData_ = function (callback) {\r\n        this.interceptServerDataCallback_ = callback;\r\n    };\r\n    /**\r\n     * @param {!boolean} connectStatus\r\n     * @private\r\n     */\r\n    Repo.prototype.onConnectStatus_ = function (connectStatus) {\r\n        this.updateInfo_('connected', connectStatus);\r\n        if (connectStatus === false) {\r\n            this.runOnDisconnectEvents_();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Object} updates\r\n     * @private\r\n     */\r\n    Repo.prototype.onServerInfoUpdate_ = function (updates) {\r\n        var _this = this;\r\n        each(updates, function (value, key) {\r\n            _this.updateInfo_(key, value);\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param {!string} pathString\r\n     * @param {*} value\r\n     * @private\r\n     */\r\n    Repo.prototype.updateInfo_ = function (pathString, value) {\r\n        var path = new Path('/.info/' + pathString);\r\n        var newNode = nodeFromJSON$1(value);\r\n        this.infoData_.updateSnapshot(path, newNode);\r\n        var events = this.infoSyncTree_.applyServerOverwrite(path, newNode);\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n    };\r\n    /**\r\n     * @return {!number}\r\n     * @private\r\n     */\r\n    Repo.prototype.getNextWriteId_ = function () {\r\n        return this.nextWriteId_++;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} newVal\r\n     * @param {number|string|null} newPriority\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.setWithPriority = function (path, newVal, newPriority, onComplete) {\r\n        var _this = this;\r\n        this.log_('set', {\r\n            path: path.toString(),\r\n            value: newVal,\r\n            priority: newPriority\r\n        });\r\n        // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\r\n        // (b) store unresolved paths on JSON parse\r\n        var serverValues = this.generateServerValues();\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, newPriority);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\r\n        var writeId = this.getNextWriteId_();\r\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, writeId, true);\r\n        this.eventQueue_.queueEvents(events);\r\n        this.server_.put(path.toString(), newNodeUnresolved.val(/*export=*/ true), function (status, errorReason) {\r\n            var success = status === 'ok';\r\n            if (!success) {\r\n                warn('set at ' + path + ' failed: ' + status);\r\n            }\r\n            var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId, !success);\r\n            _this.eventQueue_.raiseEventsForChangedPath(path, clearEvents);\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n        var affectedPath = this.abortTransactions_(path);\r\n        this.rerunTransactions_(affectedPath);\r\n        // We queued the events above, so just flush the queue here\r\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, []);\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!Object} childrenToMerge\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.update = function (path, childrenToMerge, onComplete) {\r\n        var _this = this;\r\n        this.log_('update', { path: path.toString(), value: childrenToMerge });\r\n        // Start with our existing data and merge each child into it.\r\n        var empty = true;\r\n        var serverValues = this.generateServerValues();\r\n        var changedChildren = {};\r\n        util.forEach(childrenToMerge, function (changedKey, changedValue) {\r\n            empty = false;\r\n            var newNodeUnresolved = nodeFromJSON$1(changedValue);\r\n            changedChildren[changedKey] = resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\r\n        });\r\n        if (!empty) {\r\n            var writeId_1 = this.getNextWriteId_();\r\n            var events = this.serverSyncTree_.applyUserMerge(path, changedChildren, writeId_1);\r\n            this.eventQueue_.queueEvents(events);\r\n            this.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n                var success = status === 'ok';\r\n                if (!success) {\r\n                    warn('update at ' + path + ' failed: ' + status);\r\n                }\r\n                var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId_1, !success);\r\n                var affectedPath = clearEvents.length > 0 ? _this.rerunTransactions_(path) : path;\r\n                _this.eventQueue_.raiseEventsForChangedPath(affectedPath, clearEvents);\r\n                _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n            });\r\n            util.forEach(childrenToMerge, function (changedPath) {\r\n                var affectedPath = _this.abortTransactions_(path.child(changedPath));\r\n                _this.rerunTransactions_(affectedPath);\r\n            });\r\n            // We queued the events above, so just flush the queue here\r\n            this.eventQueue_.raiseEventsForChangedPath(path, []);\r\n        }\r\n        else {\r\n            log(\"update() called with empty data.  Don't do anything.\");\r\n            this.callOnCompleteCallback(onComplete, 'ok');\r\n        }\r\n    };\r\n    /**\r\n     * Applies all of the changes stored up in the onDisconnect_ tree.\r\n     * @private\r\n     */\r\n    Repo.prototype.runOnDisconnectEvents_ = function () {\r\n        var _this = this;\r\n        this.log_('onDisconnectEvents');\r\n        var serverValues = this.generateServerValues();\r\n        var resolvedOnDisconnectTree = resolveDeferredValueTree(this.onDisconnect_, serverValues);\r\n        var events = [];\r\n        resolvedOnDisconnectTree.forEachTree(Path.Empty, function (path, snap) {\r\n            events = events.concat(_this.serverSyncTree_.applyServerOverwrite(path, snap));\r\n            var affectedPath = _this.abortTransactions_(path);\r\n            _this.rerunTransactions_(affectedPath);\r\n        });\r\n        this.onDisconnect_ = new SparseSnapshotTree();\r\n        this.eventQueue_.raiseEventsForChangedPath(Path.Empty, events);\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectCancel = function (path, onComplete) {\r\n        var _this = this;\r\n        this.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.forget(path);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} value\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectSet = function (path, value, onComplete) {\r\n        var _this = this;\r\n        var newNode = nodeFromJSON$1(value);\r\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.remember(path, newNode);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} value\r\n     * @param {*} priority\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectSetWithPriority = function (path, value, priority, onComplete) {\r\n        var _this = this;\r\n        var newNode = nodeFromJSON$1(value, priority);\r\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.remember(path, newNode);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} childrenToMerge\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectUpdate = function (path, childrenToMerge, onComplete) {\r\n        var _this = this;\r\n        if (util.isEmpty(childrenToMerge)) {\r\n            log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\r\n            this.callOnCompleteCallback(onComplete, 'ok');\r\n            return;\r\n        }\r\n        this.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                util.forEach(childrenToMerge, function (childName, childNode) {\r\n                    var newChildNode = nodeFromJSON$1(childNode);\r\n                    _this.onDisconnect_.remember(path.child(childName), newChildNode);\r\n                });\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     */\r\n    Repo.prototype.addEventCallbackForQuery = function (query, eventRegistration) {\r\n        var events;\r\n        if (query.path.getFront() === '.info') {\r\n            events = this.infoSyncTree_.addEventRegistration(query, eventRegistration);\r\n        }\r\n        else {\r\n            events = this.serverSyncTree_.addEventRegistration(query, eventRegistration);\r\n        }\r\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration\r\n     */\r\n    Repo.prototype.removeEventCallbackForQuery = function (query, eventRegistration) {\r\n        // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\r\n        // a little bit by handling the return values anyways.\r\n        var events;\r\n        if (query.path.getFront() === '.info') {\r\n            events = this.infoSyncTree_.removeEventRegistration(query, eventRegistration);\r\n        }\r\n        else {\r\n            events = this.serverSyncTree_.removeEventRegistration(query, eventRegistration);\r\n        }\r\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\r\n    };\r\n    Repo.prototype.interrupt = function () {\r\n        if (this.persistentConnection_) {\r\n            this.persistentConnection_.interrupt(INTERRUPT_REASON);\r\n        }\r\n    };\r\n    Repo.prototype.resume = function () {\r\n        if (this.persistentConnection_) {\r\n            this.persistentConnection_.resume(INTERRUPT_REASON);\r\n        }\r\n    };\r\n    Repo.prototype.stats = function (showDelta) {\r\n        if (showDelta === void 0) { showDelta = false; }\r\n        if (typeof console === 'undefined')\r\n            return;\r\n        var stats;\r\n        if (showDelta) {\r\n            if (!this.statsListener_)\r\n                this.statsListener_ = new StatsListener(this.stats_);\r\n            stats = this.statsListener_.get();\r\n        }\r\n        else {\r\n            stats = this.stats_.get();\r\n        }\r\n        var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\r\n            return Math.max(currentValue.length, previousValue);\r\n        }, 0);\r\n        util.forEach(stats, function (stat, value) {\r\n            // pad stat names to be the same length (plus 2 extra spaces).\r\n            for (var i = stat.length; i < longestName + 2; i++)\r\n                stat += ' ';\r\n            console.log(stat + value);\r\n        });\r\n    };\r\n    Repo.prototype.statsIncrementCounter = function (metric) {\r\n        this.stats_.incrementCounter(metric);\r\n        this.statsReporter_.includeStat(metric);\r\n    };\r\n    /**\r\n     * @param {...*} var_args\r\n     * @private\r\n     */\r\n    Repo.prototype.log_ = function () {\r\n        var var_args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            var_args[_i] = arguments[_i];\r\n        }\r\n        var prefix = '';\r\n        if (this.persistentConnection_) {\r\n            prefix = this.persistentConnection_.id + ':';\r\n        }\r\n        log.apply(void 0, [prefix].concat(var_args));\r\n    };\r\n    /**\r\n     * @param {?function(?Error, *=)} callback\r\n     * @param {!string} status\r\n     * @param {?string=} errorReason\r\n     */\r\n    Repo.prototype.callOnCompleteCallback = function (callback, status, errorReason) {\r\n        if (callback) {\r\n            exceptionGuard(function () {\r\n                if (status == 'ok') {\r\n                    callback(null);\r\n                }\r\n                else {\r\n                    var code = (status || 'error').toUpperCase();\r\n                    var message = code;\r\n                    if (errorReason)\r\n                        message += ': ' + errorReason;\r\n                    var error$$1 = new Error(message);\r\n                    error$$1.code = code;\r\n                    callback(error$$1);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    Object.defineProperty(Repo.prototype, \"database\", {\r\n        get: function () {\r\n            return this.__database || (this.__database = new Database(this));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Repo;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\r\nvar RangedFilter = /** @class */ (function () {\r\n    /**\r\n     * @param {!QueryParams} params\r\n     */\r\n    function RangedFilter(params) {\r\n        this.indexedFilter_ = new IndexedFilter(params.getIndex());\r\n        this.index_ = params.getIndex();\r\n        this.startPost_ = RangedFilter.getStartPost_(params);\r\n        this.endPost_ = RangedFilter.getEndPost_(params);\r\n    }\r\n    /**\r\n     * @return {!NamedNode}\r\n     */\r\n    RangedFilter.prototype.getStartPost = function () {\r\n        return this.startPost_;\r\n    };\r\n    /**\r\n     * @return {!NamedNode}\r\n     */\r\n    RangedFilter.prototype.getEndPost = function () {\r\n        return this.endPost_;\r\n    };\r\n    /**\r\n     * @param {!NamedNode} node\r\n     * @return {boolean}\r\n     */\r\n    RangedFilter.prototype.matches = function (node) {\r\n        return (this.index_.compare(this.getStartPost(), node) <= 0 &&\r\n            this.index_.compare(node, this.getEndPost()) <= 0);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (newSnap.isLeafNode()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            newSnap = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var filtered = newSnap.withIndex(this.index_);\r\n        // Don't support priorities on queries\r\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n        var self = this;\r\n        newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            if (!self.matches(new NamedNode(key, childNode))) {\r\n                filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\r\n            }\r\n        });\r\n        return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.getIndexedFilter = function () {\r\n        return this.indexedFilter_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */\r\n    RangedFilter.getStartPost_ = function (params) {\r\n        if (params.hasStart()) {\r\n            var startName = params.getIndexStartName();\r\n            return params.getIndex().makePost(params.getIndexStartValue(), startName);\r\n        }\r\n        else {\r\n            return params.getIndex().minPost();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */\r\n    RangedFilter.getEndPost_ = function (params) {\r\n        if (params.hasEnd()) {\r\n            var endName = params.getIndexEndName();\r\n            return params.getIndex().makePost(params.getIndexEndValue(), endName);\r\n        }\r\n        else {\r\n            return params.getIndex().maxPost();\r\n        }\r\n    };\r\n    return RangedFilter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\r\nvar LimitedFilter = /** @class */ (function () {\r\n    /**\r\n     * @param {!QueryParams} params\r\n     */\r\n    function LimitedFilter(params) {\r\n        this.rangedFilter_ = new RangedFilter(params);\r\n        this.index_ = params.getIndex();\r\n        this.limit_ = params.getLimit();\r\n        this.reverse_ = !params.isViewFromLeft();\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        if (snap.getImmediateChild(key).equals(newChild)) {\r\n            // No change\r\n            return snap;\r\n        }\r\n        else if (snap.numChildren() < this.limit_) {\r\n            return this.rangedFilter_\r\n                .getIndexedFilter()\r\n                .updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n        }\r\n        else {\r\n            return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        var filtered;\r\n        if (newSnap.isLeafNode() || newSnap.isEmpty()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n        }\r\n        else {\r\n            if (this.limit_ * 2 < newSnap.numChildren() &&\r\n                newSnap.isIndexed(this.index_)) {\r\n                // Easier to build up a snapshot, since what we're given has more than twice the elements we want\r\n                filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n                // anchor to the startPost, endPost, or last element as appropriate\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\r\n                }\r\n                else {\r\n                    iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\r\n                }\r\n                var count = 0;\r\n                while (iterator.hasNext() && count < this.limit_) {\r\n                    var next = iterator.getNext();\r\n                    var inRange = void 0;\r\n                    if (this.reverse_) {\r\n                        inRange =\r\n                            this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\r\n                    }\r\n                    else {\r\n                        inRange =\r\n                            this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\r\n                    }\r\n                    if (inRange) {\r\n                        filtered = filtered.updateImmediateChild(next.name, next.node);\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        // if we have reached the end post, we cannot keep adding elemments\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\r\n                filtered = newSnap.withIndex(this.index_);\r\n                // Don't support priorities on queries\r\n                filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n                var startPost = void 0;\r\n                var endPost = void 0;\r\n                var cmp = void 0;\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = filtered.getReverseIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getEndPost();\r\n                    endPost = this.rangedFilter_.getStartPost();\r\n                    var indexCompare_1 = this.index_.getCompare();\r\n                    cmp = function (a, b) { return indexCompare_1(b, a); };\r\n                }\r\n                else {\r\n                    iterator = filtered.getIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getStartPost();\r\n                    endPost = this.rangedFilter_.getEndPost();\r\n                    cmp = this.index_.getCompare();\r\n                }\r\n                var count = 0;\r\n                var foundStartPost = false;\r\n                while (iterator.hasNext()) {\r\n                    var next = iterator.getNext();\r\n                    if (!foundStartPost && cmp(startPost, next) <= 0) {\r\n                        // start adding\r\n                        foundStartPost = true;\r\n                    }\r\n                    var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\r\n                    if (inRange) {\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this.rangedFilter_\r\n            .getIndexedFilter()\r\n            .updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.getIndexedFilter = function () {\r\n        return this.rangedFilter_.getIndexedFilter();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @param {!Node} snap\r\n     * @param {string} childKey\r\n     * @param {!Node} childSnap\r\n     * @param {!CompleteChildSource} source\r\n     * @param {?ChildChangeAccumulator} changeAccumulator\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {\r\n        // TODO: rename all cache stuff etc to general snap terminology\r\n        var cmp;\r\n        if (this.reverse_) {\r\n            var indexCmp_1 = this.index_.getCompare();\r\n            cmp = function (a, b) { return indexCmp_1(b, a); };\r\n        }\r\n        else {\r\n            cmp = this.index_.getCompare();\r\n        }\r\n        var oldEventCache = snap;\r\n        util.assert(oldEventCache.numChildren() == this.limit_, '');\r\n        var newChildNamedNode = new NamedNode(childKey, childSnap);\r\n        var windowBoundary = this.reverse_\r\n            ? oldEventCache.getFirstChild(this.index_)\r\n            : oldEventCache.getLastChild(this.index_);\r\n        var inRange = this.rangedFilter_.matches(newChildNamedNode);\r\n        if (oldEventCache.hasChild(childKey)) {\r\n            var oldChildSnap = oldEventCache.getImmediateChild(childKey);\r\n            var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\r\n            while (nextChild != null &&\r\n                (nextChild.name == childKey || oldEventCache.hasChild(nextChild.name))) {\r\n                // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\r\n                // been applied to the limited filter yet. Ignore this next child which will be updated later in\r\n                // the limited filter...\r\n                nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\r\n            }\r\n            var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\r\n            var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\r\n            if (remainsInWindow) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childChangedChange(childKey, childSnap, oldChildSnap));\r\n                }\r\n                return oldEventCache.updateImmediateChild(childKey, childSnap);\r\n            }\r\n            else {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childRemovedChange(childKey, oldChildSnap));\r\n                }\r\n                var newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\r\n                var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\r\n                if (nextChildInRange) {\r\n                    if (changeAccumulator != null) {\r\n                        changeAccumulator.trackChildChange(Change.childAddedChange(nextChild.name, nextChild.node));\r\n                    }\r\n                    return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\r\n                }\r\n                else {\r\n                    return newEventCache;\r\n                }\r\n            }\r\n        }\r\n        else if (childSnap.isEmpty()) {\r\n            // we're deleting a node, but it was not in the window, so ignore it\r\n            return snap;\r\n        }\r\n        else if (inRange) {\r\n            if (cmp(windowBoundary, newChildNamedNode) >= 0) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childRemovedChange(windowBoundary.name, windowBoundary.node));\r\n                    changeAccumulator.trackChildChange(Change.childAddedChange(childKey, childSnap));\r\n                }\r\n                return oldEventCache\r\n                    .updateImmediateChild(childKey, childSnap)\r\n                    .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\r\n            }\r\n            else {\r\n                return snap;\r\n            }\r\n        }\r\n        else {\r\n            return snap;\r\n        }\r\n    };\r\n    return LimitedFilter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n * @constructor\r\n */\r\nvar QueryParams = /** @class */ (function () {\r\n    function QueryParams() {\r\n        this.limitSet_ = false;\r\n        this.startSet_ = false;\r\n        this.startNameSet_ = false;\r\n        this.endSet_ = false;\r\n        this.endNameSet_ = false;\r\n        this.limit_ = 0;\r\n        this.viewFrom_ = '';\r\n        this.indexStartValue_ = null;\r\n        this.indexStartName_ = '';\r\n        this.indexEndValue_ = null;\r\n        this.indexEndName_ = '';\r\n        this.index_ = PRIORITY_INDEX;\r\n    }\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasStart = function () {\r\n        return this.startSet_;\r\n    };\r\n    /**\r\n     * @return {boolean} True if it would return from left.\r\n     */\r\n    QueryParams.prototype.isViewFromLeft = function () {\r\n        if (this.viewFrom_ === '') {\r\n            // limit(), rather than limitToFirst or limitToLast was called.\r\n            // This means that only one of startSet_ and endSet_ is true. Use them\r\n            // to calculate which side of the view to anchor to. If neither is set,\r\n            // anchor to the end.\r\n            return this.startSet_;\r\n        }\r\n        else {\r\n            return (this.viewFrom_ === QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT);\r\n        }\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true\r\n     * @return {*}\r\n     */\r\n    QueryParams.prototype.getIndexStartValue = function () {\r\n        util.assert(this.startSet_, 'Only valid if start has been set');\r\n        return this.indexStartValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true.\r\n     * Returns the starting key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */\r\n    QueryParams.prototype.getIndexStartName = function () {\r\n        util.assert(this.startSet_, 'Only valid if start has been set');\r\n        if (this.startNameSet_) {\r\n            return this.indexStartName_;\r\n        }\r\n        else {\r\n            return MIN_NAME;\r\n        }\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasEnd = function () {\r\n        return this.endSet_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * @return {*}\r\n     */\r\n    QueryParams.prototype.getIndexEndValue = function () {\r\n        util.assert(this.endSet_, 'Only valid if end has been set');\r\n        return this.indexEndValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * Returns the end key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */\r\n    QueryParams.prototype.getIndexEndName = function () {\r\n        util.assert(this.endSet_, 'Only valid if end has been set');\r\n        if (this.endNameSet_) {\r\n            return this.indexEndName_;\r\n        }\r\n        else {\r\n            return MAX_NAME;\r\n        }\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasLimit = function () {\r\n        return this.limitSet_;\r\n    };\r\n    /**\r\n     * @return {boolean} True if a limit has been set and it has been explicitly anchored\r\n     */\r\n    QueryParams.prototype.hasAnchoredLimit = function () {\r\n        return this.limitSet_ && this.viewFrom_ !== '';\r\n    };\r\n    /**\r\n     * Only valid to call if hasLimit() returns true\r\n     * @return {!number}\r\n     */\r\n    QueryParams.prototype.getLimit = function () {\r\n        util.assert(this.limitSet_, 'Only valid if limit has been set');\r\n        return this.limit_;\r\n    };\r\n    /**\r\n     * @return {!Index}\r\n     */\r\n    QueryParams.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @return {!QueryParams}\r\n     * @private\r\n     */\r\n    QueryParams.prototype.copy_ = function () {\r\n        var copy = new QueryParams();\r\n        copy.limitSet_ = this.limitSet_;\r\n        copy.limit_ = this.limit_;\r\n        copy.startSet_ = this.startSet_;\r\n        copy.indexStartValue_ = this.indexStartValue_;\r\n        copy.startNameSet_ = this.startNameSet_;\r\n        copy.indexStartName_ = this.indexStartName_;\r\n        copy.endSet_ = this.endSet_;\r\n        copy.indexEndValue_ = this.indexEndValue_;\r\n        copy.endNameSet_ = this.endNameSet_;\r\n        copy.indexEndName_ = this.indexEndName_;\r\n        copy.index_ = this.index_;\r\n        copy.viewFrom_ = this.viewFrom_;\r\n        return copy;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limit = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = '';\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limitToFirst = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limitToLast = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_RIGHT;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.startAt = function (indexValue, key) {\r\n        var newParams = this.copy_();\r\n        newParams.startSet_ = true;\r\n        if (!(indexValue !== undefined)) {\r\n            indexValue = null;\r\n        }\r\n        newParams.indexStartValue_ = indexValue;\r\n        if (key != null) {\r\n            newParams.startNameSet_ = true;\r\n            newParams.indexStartName_ = key;\r\n        }\r\n        else {\r\n            newParams.startNameSet_ = false;\r\n            newParams.indexStartName_ = '';\r\n        }\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.endAt = function (indexValue, key) {\r\n        var newParams = this.copy_();\r\n        newParams.endSet_ = true;\r\n        if (!(indexValue !== undefined)) {\r\n            indexValue = null;\r\n        }\r\n        newParams.indexEndValue_ = indexValue;\r\n        if (key !== undefined) {\r\n            newParams.endNameSet_ = true;\r\n            newParams.indexEndName_ = key;\r\n        }\r\n        else {\r\n            newParams.endNameSet_ = false;\r\n            newParams.indexEndName_ = '';\r\n        }\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!Index} index\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.orderBy = function (index) {\r\n        var newParams = this.copy_();\r\n        newParams.index_ = index;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @return {!Object}\r\n     */\r\n    QueryParams.prototype.getQueryObject = function () {\r\n        var WIRE_PROTOCOL_CONSTANTS = QueryParams.WIRE_PROTOCOL_CONSTANTS_;\r\n        var obj = {};\r\n        if (this.startSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] = this.indexStartValue_;\r\n            if (this.startNameSet_) {\r\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] = this.indexStartName_;\r\n            }\r\n        }\r\n        if (this.endSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = this.indexEndValue_;\r\n            if (this.endNameSet_) {\r\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = this.indexEndName_;\r\n            }\r\n        }\r\n        if (this.limitSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = this.limit_;\r\n            var viewFrom = this.viewFrom_;\r\n            if (viewFrom === '') {\r\n                if (this.isViewFromLeft()) {\r\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\r\n                }\r\n                else {\r\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\r\n                }\r\n            }\r\n            obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\r\n        }\r\n        // For now, priority index is the default, so we only specify if it's some other index\r\n        if (this.index_ !== PRIORITY_INDEX) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = this.index_.toString();\r\n        }\r\n        return obj;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.loadsAllData = function () {\r\n        return !(this.startSet_ || this.endSet_ || this.limitSet_);\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.isDefault = function () {\r\n        return this.loadsAllData() && this.index_ == PRIORITY_INDEX;\r\n    };\r\n    /**\r\n     * @return {!NodeFilter}\r\n     */\r\n    QueryParams.prototype.getNodeFilter = function () {\r\n        if (this.loadsAllData()) {\r\n            return new IndexedFilter(this.getIndex());\r\n        }\r\n        else if (this.hasLimit()) {\r\n            return new LimitedFilter(this);\r\n        }\r\n        else {\r\n            return new RangedFilter(this);\r\n        }\r\n    };\r\n    /**\r\n     * Returns a set of REST query string parameters representing this query.\r\n     *\r\n     * @return {!Object.<string,*>} query string parameters\r\n     */\r\n    QueryParams.prototype.toRestQueryStringParameters = function () {\r\n        var REST_CONSTANTS = QueryParams.REST_QUERY_CONSTANTS_;\r\n        var qs = {};\r\n        if (this.isDefault()) {\r\n            return qs;\r\n        }\r\n        var orderBy;\r\n        if (this.index_ === PRIORITY_INDEX) {\r\n            orderBy = REST_CONSTANTS.PRIORITY_INDEX;\r\n        }\r\n        else if (this.index_ === VALUE_INDEX) {\r\n            orderBy = REST_CONSTANTS.VALUE_INDEX;\r\n        }\r\n        else if (this.index_ === KEY_INDEX) {\r\n            orderBy = REST_CONSTANTS.KEY_INDEX;\r\n        }\r\n        else {\r\n            util.assert(this.index_ instanceof PathIndex, 'Unrecognized index type!');\r\n            orderBy = this.index_.toString();\r\n        }\r\n        qs[REST_CONSTANTS.ORDER_BY] = util.stringify(orderBy);\r\n        if (this.startSet_) {\r\n            qs[REST_CONSTANTS.START_AT] = util.stringify(this.indexStartValue_);\r\n            if (this.startNameSet_) {\r\n                qs[REST_CONSTANTS.START_AT] += ',' + util.stringify(this.indexStartName_);\r\n            }\r\n        }\r\n        if (this.endSet_) {\r\n            qs[REST_CONSTANTS.END_AT] = util.stringify(this.indexEndValue_);\r\n            if (this.endNameSet_) {\r\n                qs[REST_CONSTANTS.END_AT] += ',' + util.stringify(this.indexEndName_);\r\n            }\r\n        }\r\n        if (this.limitSet_) {\r\n            if (this.isViewFromLeft()) {\r\n                qs[REST_CONSTANTS.LIMIT_TO_FIRST] = this.limit_;\r\n            }\r\n            else {\r\n                qs[REST_CONSTANTS.LIMIT_TO_LAST] = this.limit_;\r\n            }\r\n        }\r\n        return qs;\r\n    };\r\n    /**\r\n     * Wire Protocol Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */\r\n    QueryParams.WIRE_PROTOCOL_CONSTANTS_ = {\r\n        INDEX_START_VALUE: 'sp',\r\n        INDEX_START_NAME: 'sn',\r\n        INDEX_END_VALUE: 'ep',\r\n        INDEX_END_NAME: 'en',\r\n        LIMIT: 'l',\r\n        VIEW_FROM: 'vf',\r\n        VIEW_FROM_LEFT: 'l',\r\n        VIEW_FROM_RIGHT: 'r',\r\n        INDEX: 'i'\r\n    };\r\n    /**\r\n     * REST Query Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */\r\n    QueryParams.REST_QUERY_CONSTANTS_ = {\r\n        ORDER_BY: 'orderBy',\r\n        PRIORITY_INDEX: '$priority',\r\n        VALUE_INDEX: '$value',\r\n        KEY_INDEX: '$key',\r\n        START_AT: 'startAt',\r\n        END_AT: 'endAt',\r\n        LIMIT_TO_FIRST: 'limitToFirst',\r\n        LIMIT_TO_LAST: 'limitToLast'\r\n    };\r\n    /**\r\n     * Default, empty query parameters\r\n     * @type {!QueryParams}\r\n     * @const\r\n     */\r\n    QueryParams.DEFAULT = new QueryParams();\r\n    return QueryParams;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Reference = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Reference, _super);\r\n    /**\r\n     * Call options:\r\n     *   new Reference(Repo, Path) or\r\n     *   new Reference(url: string, string|RepoManager)\r\n     *\r\n     * Externally - this is the firebase.database.Reference type.\r\n     *\r\n     * @param {!Repo} repo\r\n     * @param {(!Path)} path\r\n     * @extends {Query}\r\n     */\r\n    function Reference(repo, path) {\r\n        var _this = this;\r\n        if (!(repo instanceof Repo)) {\r\n            throw new Error('new Reference() no longer supported - use app.database().');\r\n        }\r\n        // call Query's constructor, passing in the repo and path.\r\n        _this = _super.call(this, repo, path, QueryParams.DEFAULT, false) || this;\r\n        return _this;\r\n    }\r\n    /** @return {?string} */\r\n    Reference.prototype.getKey = function () {\r\n        util.validateArgCount('Reference.key', 0, 0, arguments.length);\r\n        if (this.path.isEmpty())\r\n            return null;\r\n        else\r\n            return this.path.getBack();\r\n    };\r\n    /**\r\n     * @param {!(string|Path)} pathString\r\n     * @return {!Reference}\r\n     */\r\n    Reference.prototype.child = function (pathString) {\r\n        util.validateArgCount('Reference.child', 1, 1, arguments.length);\r\n        if (typeof pathString === 'number') {\r\n            pathString = String(pathString);\r\n        }\r\n        else if (!(pathString instanceof Path)) {\r\n            if (this.path.getFront() === null)\r\n                validateRootPathString('Reference.child', 1, pathString, false);\r\n            else\r\n                validatePathString('Reference.child', 1, pathString, false);\r\n        }\r\n        return new Reference(this.repo, this.path.child(pathString));\r\n    };\r\n    /** @return {?Reference} */\r\n    Reference.prototype.getParent = function () {\r\n        util.validateArgCount('Reference.parent', 0, 0, arguments.length);\r\n        var parentPath = this.path.parent();\r\n        return parentPath === null ? null : new Reference(this.repo, parentPath);\r\n    };\r\n    /** @return {!Reference} */\r\n    Reference.prototype.getRoot = function () {\r\n        util.validateArgCount('Reference.root', 0, 0, arguments.length);\r\n        var ref = this;\r\n        while (ref.getParent() !== null) {\r\n            ref = ref.getParent();\r\n        }\r\n        return ref;\r\n    };\r\n    /** @return {!Database} */\r\n    Reference.prototype.databaseProp = function () {\r\n        return this.repo.database;\r\n    };\r\n    /**\r\n     * @param {*} newVal\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.set = function (newVal, onComplete) {\r\n        util.validateArgCount('Reference.set', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.set', this.path);\r\n        validateFirebaseDataArg('Reference.set', 1, newVal, this.path, false);\r\n        util.validateCallback('Reference.set', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path, newVal, \r\n        /*priority=*/ null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.update = function (objectToMerge, onComplete) {\r\n        util.validateArgCount('Reference.update', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.update', this.path);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to Firebase.update() is deprecated. ' +\r\n                'Use set() if you want to overwrite the existing data, or ' +\r\n                'an Object with integer keys if you really do want to ' +\r\n                'only update some of the children.');\r\n        }\r\n        validateFirebaseMergeDataArg('Reference.update', 1, objectToMerge, this.path, false);\r\n        util.validateCallback('Reference.update', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.update(this.path, objectToMerge, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} newVal\r\n     * @param {string|number|null} newPriority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {\r\n        util.validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\r\n        validateWritablePath('Reference.setWithPriority', this.path);\r\n        validateFirebaseDataArg('Reference.setWithPriority', 1, newVal, this.path, false);\r\n        validatePriority('Reference.setWithPriority', 2, newPriority, false);\r\n        util.validateCallback('Reference.setWithPriority', 3, onComplete, true);\r\n        if (this.getKey() === '.length' || this.getKey() === '.keys')\r\n            throw 'Reference.setWithPriority failed: ' +\r\n                this.getKey() +\r\n                ' is a read-only object.';\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path, newVal, newPriority, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.remove = function (onComplete) {\r\n        util.validateArgCount('Reference.remove', 0, 1, arguments.length);\r\n        validateWritablePath('Reference.remove', this.path);\r\n        util.validateCallback('Reference.remove', 1, onComplete, true);\r\n        return this.set(null, onComplete);\r\n    };\r\n    /**\r\n     * @param {function(*):*} transactionUpdate\r\n     * @param {(function(?Error, boolean, ?DataSnapshot))=} onComplete\r\n     * @param {boolean=} applyLocally\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {\r\n        util.validateArgCount('Reference.transaction', 1, 3, arguments.length);\r\n        validateWritablePath('Reference.transaction', this.path);\r\n        util.validateCallback('Reference.transaction', 1, transactionUpdate, false);\r\n        util.validateCallback('Reference.transaction', 2, onComplete, true);\r\n        // NOTE: applyLocally is an internal-only option for now.  We need to decide if we want to keep it and how\r\n        // to expose it.\r\n        validateBoolean('Reference.transaction', 3, applyLocally, true);\r\n        if (this.getKey() === '.length' || this.getKey() === '.keys')\r\n            throw 'Reference.transaction failed: ' +\r\n                this.getKey() +\r\n                ' is a read-only object.';\r\n        if (applyLocally === undefined)\r\n            applyLocally = true;\r\n        var deferred = new util.Deferred();\r\n        if (typeof onComplete === 'function') {\r\n            deferred.promise.catch(function () { });\r\n        }\r\n        var promiseComplete = function (error$$1, committed, snapshot) {\r\n            if (error$$1) {\r\n                deferred.reject(error$$1);\r\n            }\r\n            else {\r\n                deferred.resolve(new TransactionResult(committed, snapshot));\r\n            }\r\n            if (typeof onComplete === 'function') {\r\n                onComplete(error$$1, committed, snapshot);\r\n            }\r\n        };\r\n        this.repo.startTransaction(this.path, transactionUpdate, promiseComplete, applyLocally);\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {string|number|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.setPriority = function (priority, onComplete) {\r\n        util.validateArgCount('Reference.setPriority', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.setPriority', this.path);\r\n        validatePriority('Reference.setPriority', 1, priority, false);\r\n        util.validateCallback('Reference.setPriority', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path.child('.priority'), priority, null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*=} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Reference}\r\n     */\r\n    Reference.prototype.push = function (value, onComplete) {\r\n        util.validateArgCount('Reference.push', 0, 2, arguments.length);\r\n        validateWritablePath('Reference.push', this.path);\r\n        validateFirebaseDataArg('Reference.push', 1, value, this.path, true);\r\n        util.validateCallback('Reference.push', 2, onComplete, true);\r\n        var now = this.repo.serverTime();\r\n        var name = nextPushId(now);\r\n        // push() returns a ThennableReference whose promise is fulfilled with a regular Reference.\r\n        // We use child() to create handles to two different references. The first is turned into a\r\n        // ThennableReference below by adding then() and catch() methods and is used as the\r\n        // return value of push(). The second remains a regular Reference and is used as the fulfilled\r\n        // value of the first ThennableReference.\r\n        var thennablePushRef = this.child(name);\r\n        var pushRef = this.child(name);\r\n        var promise;\r\n        if (value != null) {\r\n            promise = thennablePushRef.set(value, onComplete).then(function () { return pushRef; });\r\n        }\r\n        else {\r\n            promise = Promise.resolve(pushRef);\r\n        }\r\n        thennablePushRef.then = promise.then.bind(promise);\r\n        thennablePushRef.catch = promise.then.bind(promise, undefined);\r\n        if (typeof onComplete === 'function') {\r\n            promise.catch(function () { });\r\n        }\r\n        return thennablePushRef;\r\n    };\r\n    /**\r\n     * @return {!OnDisconnect}\r\n     */\r\n    Reference.prototype.onDisconnect = function () {\r\n        validateWritablePath('Reference.onDisconnect', this.path);\r\n        return new OnDisconnect(this.repo, this.path);\r\n    };\r\n    Object.defineProperty(Reference.prototype, \"database\", {\r\n        get: function () {\r\n            return this.databaseProp();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"key\", {\r\n        get: function () {\r\n            return this.getKey();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"parent\", {\r\n        get: function () {\r\n            return this.getParent();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"root\", {\r\n        get: function () {\r\n            return this.getRoot();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Reference;\r\n}(Query));\r\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\r\nQuery.__referenceConstructor = Reference;\r\nSyncPoint.__referenceConstructor = Reference;\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Node in a Tree.\r\n */\r\nvar TreeNode = /** @class */ (function () {\r\n    function TreeNode() {\r\n        // TODO: Consider making accessors that create children and value lazily or\r\n        // separate Internal / Leaf 'types'.\r\n        this.children = {};\r\n        this.childCount = 0;\r\n        this.value = null;\r\n    }\r\n    return TreeNode;\r\n}());\r\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\r\nvar Tree = /** @class */ (function () {\r\n    /**\r\n     * @template T\r\n     * @param {string=} name_ Optional name of the node.\r\n     * @param {Tree=} parent_ Optional parent node.\r\n     * @param {TreeNode=} node_ Optional node to wrap.\r\n     */\r\n    function Tree(name_, parent_, node_) {\r\n        if (name_ === void 0) { name_ = ''; }\r\n        if (parent_ === void 0) { parent_ = null; }\r\n        if (node_ === void 0) { node_ = new TreeNode(); }\r\n        this.name_ = name_;\r\n        this.parent_ = parent_;\r\n        this.node_ = node_;\r\n    }\r\n    /**\r\n     * Returns a sub-Tree for the given path.\r\n     *\r\n     * @param {!(string|Path)} pathObj Path to look up.\r\n     * @return {!Tree.<T>} Tree for path.\r\n     */\r\n    Tree.prototype.subTree = function (pathObj) {\r\n        // TODO: Require pathObj to be Path?\r\n        var path = pathObj instanceof Path ? pathObj : new Path(pathObj);\r\n        var child = this, next;\r\n        while ((next = path.getFront()) !== null) {\r\n            var childNode = util.safeGet(child.node_.children, next) || new TreeNode();\r\n            child = new Tree(next, child, childNode);\r\n            path = path.popFront();\r\n        }\r\n        return child;\r\n    };\r\n    /**\r\n     * Returns the data associated with this tree node.\r\n     *\r\n     * @return {?T} The data or null if no data exists.\r\n     */\r\n    Tree.prototype.getValue = function () {\r\n        return this.node_.value;\r\n    };\r\n    /**\r\n     * Sets data to this tree node.\r\n     *\r\n     * @param {!T} value Value to set.\r\n     */\r\n    Tree.prototype.setValue = function (value) {\r\n        util.assert(typeof value !== 'undefined', 'Cannot set value to undefined');\r\n        this.node_.value = value;\r\n        this.updateParents_();\r\n    };\r\n    /**\r\n     * Clears the contents of the tree node (its value and all children).\r\n     */\r\n    Tree.prototype.clear = function () {\r\n        this.node_.value = null;\r\n        this.node_.children = {};\r\n        this.node_.childCount = 0;\r\n        this.updateParents_();\r\n    };\r\n    /**\r\n     * @return {boolean} Whether the tree has any children.\r\n     */\r\n    Tree.prototype.hasChildren = function () {\r\n        return this.node_.childCount > 0;\r\n    };\r\n    /**\r\n     * @return {boolean} Whether the tree is empty (no value or children).\r\n     */\r\n    Tree.prototype.isEmpty = function () {\r\n        return this.getValue() === null && !this.hasChildren();\r\n    };\r\n    /**\r\n     * Calls action for each child of this tree node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */\r\n    Tree.prototype.forEachChild = function (action) {\r\n        var _this = this;\r\n        util.forEach(this.node_.children, function (child, childTree) {\r\n            action(new Tree(child, _this, childTree));\r\n        });\r\n    };\r\n    /**\r\n     * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well. Defaults to\r\n     *   false.\r\n     * @param {boolean=} childrenFirst Whether to call action on children before calling it on\r\n     *   parent.\r\n     */\r\n    Tree.prototype.forEachDescendant = function (action, includeSelf, childrenFirst) {\r\n        if (includeSelf && !childrenFirst)\r\n            action(this);\r\n        this.forEachChild(function (child) {\r\n            child.forEachDescendant(action, /*includeSelf=*/ true, childrenFirst);\r\n        });\r\n        if (includeSelf && childrenFirst)\r\n            action(this);\r\n    };\r\n    /**\r\n     * Calls action on each ancestor node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called on each parent; return\r\n     *   true to abort.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well.\r\n     * @return {boolean} true if the action callback returned true.\r\n     */\r\n    Tree.prototype.forEachAncestor = function (action, includeSelf) {\r\n        var node = includeSelf ? this : this.parent();\r\n        while (node !== null) {\r\n            if (action(node)) {\r\n                return true;\r\n            }\r\n            node = node.parent();\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Does a depth-first traversal of this node's descendants.  When a descendant with a value\r\n     * is found, action is called on it and traversal does not continue inside the node.\r\n     * Action is *not* called on this node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */\r\n    Tree.prototype.forEachImmediateDescendantWithValue = function (action) {\r\n        this.forEachChild(function (child) {\r\n            if (child.getValue() !== null)\r\n                action(child);\r\n            else\r\n                child.forEachImmediateDescendantWithValue(action);\r\n        });\r\n    };\r\n    /**\r\n     * @return {!Path} The path of this tree node, as a Path.\r\n     */\r\n    Tree.prototype.path = function () {\r\n        return new Path(this.parent_ === null\r\n            ? this.name_\r\n            : this.parent_.path() + '/' + this.name_);\r\n    };\r\n    /**\r\n     * @return {string} The name of the tree node.\r\n     */\r\n    Tree.prototype.name = function () {\r\n        return this.name_;\r\n    };\r\n    /**\r\n     * @return {?Tree} The parent tree node, or null if this is the root of the tree.\r\n     */\r\n    Tree.prototype.parent = function () {\r\n        return this.parent_;\r\n    };\r\n    /**\r\n     * Adds or removes this child from its parent based on whether it's empty or not.\r\n     *\r\n     * @private\r\n     */\r\n    Tree.prototype.updateParents_ = function () {\r\n        if (this.parent_ !== null)\r\n            this.parent_.updateChild_(this.name_, this);\r\n    };\r\n    /**\r\n     * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n     *\r\n     * @param {string} childName The name of the child to update.\r\n     * @param {!Tree.<T>} child The child to update.\r\n     * @private\r\n     */\r\n    Tree.prototype.updateChild_ = function (childName, child) {\r\n        var childEmpty = child.isEmpty();\r\n        var childExists = util.contains(this.node_.children, childName);\r\n        if (childEmpty && childExists) {\r\n            delete this.node_.children[childName];\r\n            this.node_.childCount--;\r\n            this.updateParents_();\r\n        }\r\n        else if (!childEmpty && !childExists) {\r\n            this.node_.children[childName] = child.node_;\r\n            this.node_.childCount++;\r\n            this.updateParents_();\r\n        }\r\n    };\r\n    return Tree;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: This is pretty messy.  Ideally, a lot of this would move into FirebaseData, or a transaction-specific\r\n// component used by FirebaseData, but it has ties to user callbacks (transaction update and onComplete) as well\r\n// as the realtime connection (to send transactions to the server).  So that all needs to be decoupled first.\r\n// For now it's part of Repo, but in its own file.\r\n/**\r\n * @enum {number}\r\n */\r\nvar TransactionStatus;\r\n(function (TransactionStatus) {\r\n    // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\r\n    // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\r\n    // mismatched hash.\r\n    TransactionStatus[TransactionStatus[\"RUN\"] = 0] = \"RUN\";\r\n    // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\r\n    // or rejected yet).\r\n    TransactionStatus[TransactionStatus[\"SENT\"] = 1] = \"SENT\";\r\n    // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\r\n    // removed when we get a chance to prune completed ones.\r\n    TransactionStatus[TransactionStatus[\"COMPLETED\"] = 2] = \"COMPLETED\";\r\n    // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\r\n    // If it comes back as unsuccessful, we'll abort it.\r\n    TransactionStatus[TransactionStatus[\"SENT_NEEDS_ABORT\"] = 3] = \"SENT_NEEDS_ABORT\";\r\n    // Temporary state used to mark transactions that need to be aborted.\r\n    TransactionStatus[TransactionStatus[\"NEEDS_ABORT\"] = 4] = \"NEEDS_ABORT\";\r\n})(TransactionStatus || (TransactionStatus = {}));\r\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it.  Among other things this ensure that if there's\r\n * ever a bug causing a mismatch between client / server hashes for some data, we won't retry indefinitely.\r\n * @type {number}\r\n * @const\r\n * @private\r\n */\r\nRepo.MAX_TRANSACTION_RETRIES_ = 25;\r\n/**\r\n * Setup the transaction data structures\r\n * @private\r\n */\r\nRepo.prototype.transactions_init_ = function () {\r\n    /**\r\n     * Stores queues of outstanding transactions for Firebase locations.\r\n     *\r\n     * @type {!Tree.<Array.<!Transaction>>}\r\n     * @private\r\n     */\r\n    this.transactionQueueTree_ = new Tree();\r\n};\r\n/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and sends it to the server if possible.\r\n *\r\n * @param {!Path} path Path at which to do transaction.\r\n * @param {function(*):*} transactionUpdate Update callback.\r\n * @param {?function(?Error, boolean, ?DataSnapshot)} onComplete Completion callback.\r\n * @param {boolean} applyLocally Whether or not to make intermediate results visible\r\n */\r\nRepo.prototype.startTransaction = function (path, transactionUpdate, onComplete, applyLocally) {\r\n    this.log_('transaction on ' + path);\r\n    // Add a watch to make sure we get server updates.\r\n    var valueCallback = function () { };\r\n    var watchRef = new Reference(this, path);\r\n    watchRef.on('value', valueCallback);\r\n    var unwatcher = function () {\r\n        watchRef.off('value', valueCallback);\r\n    };\r\n    // Initialize transaction.\r\n    var transaction = {\r\n        path: path,\r\n        update: transactionUpdate,\r\n        onComplete: onComplete,\r\n        // One of TransactionStatus enums.\r\n        status: null,\r\n        // Used when combining transactions at different locations to figure out which one goes first.\r\n        order: LUIDGenerator(),\r\n        // Whether to raise local events for this transaction.\r\n        applyLocally: applyLocally,\r\n        // Count of how many times we've retried the transaction.\r\n        retryCount: 0,\r\n        // Function to call to clean up our .on() listener.\r\n        unwatcher: unwatcher,\r\n        // Stores why a transaction was aborted.\r\n        abortReason: null,\r\n        currentWriteId: null,\r\n        currentInputSnapshot: null,\r\n        currentOutputSnapshotRaw: null,\r\n        currentOutputSnapshotResolved: null\r\n    };\r\n    // Run transaction initially.\r\n    var currentState = this.getLatestState_(path);\r\n    transaction.currentInputSnapshot = currentState;\r\n    var newVal = transaction.update(currentState.val());\r\n    if (newVal === undefined) {\r\n        // Abort transaction.\r\n        transaction.unwatcher();\r\n        transaction.currentOutputSnapshotRaw = null;\r\n        transaction.currentOutputSnapshotResolved = null;\r\n        if (transaction.onComplete) {\r\n            // We just set the input snapshot, so this cast should be safe\r\n            var snapshot = new DataSnapshot(transaction.currentInputSnapshot, new Reference(this, transaction.path), PRIORITY_INDEX);\r\n            transaction.onComplete(null, false, snapshot);\r\n        }\r\n    }\r\n    else {\r\n        validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path);\r\n        // Mark as run and add to our queue.\r\n        transaction.status = TransactionStatus.RUN;\r\n        var queueNode = this.transactionQueueTree_.subTree(path);\r\n        var nodeQueue = queueNode.getValue() || [];\r\n        nodeQueue.push(transaction);\r\n        queueNode.setValue(nodeQueue);\r\n        // Update visibleData and raise events\r\n        // Note: We intentionally raise events after updating all of our transaction state, since the user could\r\n        // start new transactions from the event callbacks.\r\n        var priorityForNode = void 0;\r\n        if (typeof newVal === 'object' &&\r\n            newVal !== null &&\r\n            util.contains(newVal, '.priority')) {\r\n            priorityForNode = util.safeGet(newVal, '.priority');\r\n            util.assert(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' +\r\n                'Priority must be a valid string, finite number, server value, or null.');\r\n        }\r\n        else {\r\n            var currentNode = this.serverSyncTree_.calcCompleteEventCache(path) ||\r\n                ChildrenNode.EMPTY_NODE;\r\n            priorityForNode = currentNode.getPriority().val();\r\n        }\r\n        priorityForNode /** @type {null|number|string} */ = priorityForNode;\r\n        var serverValues = this.generateServerValues();\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, priorityForNode);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\r\n        transaction.currentOutputSnapshotRaw = newNodeUnresolved;\r\n        transaction.currentOutputSnapshotResolved = newNode;\r\n        transaction.currentWriteId = this.getNextWriteId_();\r\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, transaction.currentWriteId, transaction.applyLocally);\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n        this.sendReadyTransactions_();\r\n    }\r\n};\r\n/**\r\n * @param {!Path} path\r\n * @param {Array.<number>=} excludeSets A specific set to exclude\r\n * @return {Node}\r\n * @private\r\n */\r\nRepo.prototype.getLatestState_ = function (path, excludeSets) {\r\n    return (this.serverSyncTree_.calcCompleteEventCache(path, excludeSets) ||\r\n        ChildrenNode.EMPTY_NODE);\r\n};\r\n/**\r\n * Sends any already-run transactions that aren't waiting for outstanding transactions to\r\n * complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively with a particular\r\n * transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param {Tree.<Array.<Transaction>>=} node  transactionQueueTree node to start at.\r\n * @private\r\n */\r\nRepo.prototype.sendReadyTransactions_ = function (node) {\r\n    var _this = this;\r\n    if (node === void 0) { node = this.transactionQueueTree_; }\r\n    // Before recursing, make sure any completed transactions are removed.\r\n    if (!node) {\r\n        this.pruneCompletedTransactionsBelowNode_(node);\r\n    }\r\n    if (node.getValue() !== null) {\r\n        var queue = this.buildTransactionQueue_(node);\r\n        util.assert(queue.length > 0, 'Sending zero length transaction queue');\r\n        var allRun = queue.every(function (transaction) { return transaction.status === TransactionStatus.RUN; });\r\n        // If they're all run (and not sent), we can send them.  Else, we must wait.\r\n        if (allRun) {\r\n            this.sendTransactionQueue_(node.path(), queue);\r\n        }\r\n    }\r\n    else if (node.hasChildren()) {\r\n        node.forEachChild(function (childNode) {\r\n            _this.sendReadyTransactions_(childNode);\r\n        });\r\n    }\r\n};\r\n/**\r\n * Given a list of run transactions, send them to the server and then handle the result (success or failure).\r\n *\r\n * @param {!Path} path The location of the queue.\r\n * @param {!Array.<Transaction>} queue Queue of transactions under the specified location.\r\n * @private\r\n */\r\nRepo.prototype.sendTransactionQueue_ = function (path, queue) {\r\n    var _this = this;\r\n    // Mark transactions as sent and increment retry count!\r\n    var setsToIgnore = queue.map(function (txn) {\r\n        return txn.currentWriteId;\r\n    });\r\n    var latestState = this.getLatestState_(path, setsToIgnore);\r\n    var snapToSend = latestState;\r\n    var latestHash = latestState.hash();\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var txn = queue[i];\r\n        util.assert(txn.status === TransactionStatus.RUN, 'tryToSendTransactionQueue_: items in queue should all be run.');\r\n        txn.status = TransactionStatus.SENT;\r\n        txn.retryCount++;\r\n        var relativePath = Path.relativePath(path, txn.path);\r\n        // If we've gotten to this point, the output snapshot must be defined.\r\n        snapToSend = snapToSend.updateChild(relativePath /**@type {!Node} */, txn.currentOutputSnapshotRaw);\r\n    }\r\n    var dataToSend = snapToSend.val(true);\r\n    var pathToSend = path;\r\n    // Send the put.\r\n    this.server_.put(pathToSend.toString(), dataToSend, function (status) {\r\n        _this.log_('transaction put response', {\r\n            path: pathToSend.toString(),\r\n            status: status\r\n        });\r\n        var events = [];\r\n        if (status === 'ok') {\r\n            // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n            // the callback could trigger more transactions or sets.\r\n            var callbacks = [];\r\n            for (var i = 0; i < queue.length; i++) {\r\n                queue[i].status = TransactionStatus.COMPLETED;\r\n                events = events.concat(_this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId));\r\n                if (queue[i].onComplete) {\r\n                    // We never unset the output snapshot, and given that this transaction is complete, it should be set\r\n                    var node = queue[i].currentOutputSnapshotResolved;\r\n                    var ref = new Reference(_this, queue[i].path);\r\n                    var snapshot = new DataSnapshot(node, ref, PRIORITY_INDEX);\r\n                    callbacks.push(queue[i].onComplete.bind(null, null, true, snapshot));\r\n                }\r\n                queue[i].unwatcher();\r\n            }\r\n            // Now remove the completed transactions.\r\n            _this.pruneCompletedTransactionsBelowNode_(_this.transactionQueueTree_.subTree(path));\r\n            // There may be pending transactions that we can now send.\r\n            _this.sendReadyTransactions_();\r\n            _this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n            // Finally, trigger onComplete callbacks.\r\n            for (var i = 0; i < callbacks.length; i++) {\r\n                exceptionGuard(callbacks[i]);\r\n            }\r\n        }\r\n        else {\r\n            // transactions are no longer sent.  Update their status appropriately.\r\n            if (status === 'datastale') {\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT)\r\n                        queue[i].status = TransactionStatus.NEEDS_ABORT;\r\n                    else\r\n                        queue[i].status = TransactionStatus.RUN;\r\n                }\r\n            }\r\n            else {\r\n                warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    queue[i].status = TransactionStatus.NEEDS_ABORT;\r\n                    queue[i].abortReason = status;\r\n                }\r\n            }\r\n            _this.rerunTransactions_(path);\r\n        }\r\n    }, latestHash);\r\n};\r\n/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions.  This is the path at which events need to\r\n * be raised for.\r\n *\r\n * @param {!Path} changedPath The path in mergedData that changed.\r\n * @return {!Path} The rootmost path that was affected by rerunning transactions.\r\n * @private\r\n */\r\nRepo.prototype.rerunTransactions_ = function (changedPath) {\r\n    var rootMostTransactionNode = this.getAncestorTransactionNode_(changedPath);\r\n    var path = rootMostTransactionNode.path();\r\n    var queue = this.buildTransactionQueue_(rootMostTransactionNode);\r\n    this.rerunTransactionQueue_(queue, path);\r\n    return path;\r\n};\r\n/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted transactions and whatnot).\r\n *\r\n * @param {Array.<Transaction>} queue The queue of transactions to run.\r\n * @param {!Path} path The path the queue is for.\r\n * @private\r\n */\r\nRepo.prototype.rerunTransactionQueue_ = function (queue, path) {\r\n    if (queue.length === 0) {\r\n        return; // Nothing to do!\r\n    }\r\n    // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n    // the callback could trigger more transactions or sets.\r\n    var callbacks = [];\r\n    var events = [];\r\n    // Ignore all of the sets we're going to re-run.\r\n    var txnsToRerun = queue.filter(function (q) {\r\n        return q.status === TransactionStatus.RUN;\r\n    });\r\n    var setsToIgnore = txnsToRerun.map(function (q) {\r\n        return q.currentWriteId;\r\n    });\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var transaction = queue[i];\r\n        var relativePath = Path.relativePath(path, transaction.path);\r\n        var abortTransaction = false, abortReason = void 0;\r\n        util.assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\r\n        if (transaction.status === TransactionStatus.NEEDS_ABORT) {\r\n            abortTransaction = true;\r\n            abortReason = transaction.abortReason;\r\n            events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n        }\r\n        else if (transaction.status === TransactionStatus.RUN) {\r\n            if (transaction.retryCount >= Repo.MAX_TRANSACTION_RETRIES_) {\r\n                abortTransaction = true;\r\n                abortReason = 'maxretry';\r\n                events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n            }\r\n            else {\r\n                // This code reruns a transaction\r\n                var currentNode = this.getLatestState_(transaction.path, setsToIgnore);\r\n                transaction.currentInputSnapshot = currentNode;\r\n                var newData = queue[i].update(currentNode.val());\r\n                if (newData !== undefined) {\r\n                    validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\r\n                    var newDataNode = nodeFromJSON$1(newData);\r\n                    var hasExplicitPriority = typeof newData === 'object' &&\r\n                        newData != null &&\r\n                        util.contains(newData, '.priority');\r\n                    if (!hasExplicitPriority) {\r\n                        // Keep the old priority if there wasn't a priority explicitly specified.\r\n                        newDataNode = newDataNode.updatePriority(currentNode.getPriority());\r\n                    }\r\n                    var oldWriteId = transaction.currentWriteId;\r\n                    var serverValues = this.generateServerValues();\r\n                    var newNodeResolved = resolveDeferredValueSnapshot(newDataNode, serverValues);\r\n                    transaction.currentOutputSnapshotRaw = newDataNode;\r\n                    transaction.currentOutputSnapshotResolved = newNodeResolved;\r\n                    transaction.currentWriteId = this.getNextWriteId_();\r\n                    // Mutates setsToIgnore in place\r\n                    setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\r\n                    events = events.concat(this.serverSyncTree_.applyUserOverwrite(transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\r\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(oldWriteId, true));\r\n                }\r\n                else {\r\n                    abortTransaction = true;\r\n                    abortReason = 'nodata';\r\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n                }\r\n            }\r\n        }\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n        events = [];\r\n        if (abortTransaction) {\r\n            // Abort.\r\n            queue[i].status = TransactionStatus.COMPLETED;\r\n            // Removing a listener can trigger pruning which can muck with mergedData/visibleData (as it prunes data).\r\n            // So defer the unwatcher until we're done.\r\n            (function (unwatcher) {\r\n                setTimeout(unwatcher, Math.floor(0));\r\n            })(queue[i].unwatcher);\r\n            if (queue[i].onComplete) {\r\n                if (abortReason === 'nodata') {\r\n                    var ref = new Reference(this, queue[i].path);\r\n                    // We set this field immediately, so it's safe to cast to an actual snapshot\r\n                    var lastInput /** @type {!Node} */ = queue[i].currentInputSnapshot;\r\n                    var snapshot = new DataSnapshot(lastInput, ref, PRIORITY_INDEX);\r\n                    callbacks.push(queue[i].onComplete.bind(null, null, false, snapshot));\r\n                }\r\n                else {\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error(abortReason), false, null));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // Clean up completed transactions.\r\n    this.pruneCompletedTransactionsBelowNode_(this.transactionQueueTree_);\r\n    // Now fire callbacks, now that we're in a good, known state.\r\n    for (var i = 0; i < callbacks.length; i++) {\r\n        exceptionGuard(callbacks[i]);\r\n    }\r\n    // Try to send the transaction result to the server.\r\n    this.sendReadyTransactions_();\r\n};\r\n/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending transaction on it, or just returns\r\n * the node for the given path if there are no pending transactions on any ancestor.\r\n *\r\n * @param {!Path} path The location to start at.\r\n * @return {!Tree.<Array.<!Transaction>>} The rootmost node with a transaction.\r\n * @private\r\n */\r\nRepo.prototype.getAncestorTransactionNode_ = function (path) {\r\n    var front;\r\n    // Start at the root and walk deeper into the tree towards path until we find a node with pending transactions.\r\n    var transactionNode = this.transactionQueueTree_;\r\n    while ((front = path.getFront()) !== null &&\r\n        transactionNode.getValue() === null) {\r\n        transactionNode = transactionNode.subTree(front);\r\n        path = path.popFront();\r\n    }\r\n    return transactionNode;\r\n};\r\n/**\r\n * Builds the queue of all transactions at or below the specified transactionNode.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} transactionNode\r\n * @return {Array.<Transaction>} The generated queue.\r\n * @private\r\n */\r\nRepo.prototype.buildTransactionQueue_ = function (transactionNode) {\r\n    // Walk any child transaction queues and aggregate them into a single queue.\r\n    var transactionQueue = [];\r\n    this.aggregateTransactionQueuesForNode_(transactionNode, transactionQueue);\r\n    // Sort them by the order the transactions were created.\r\n    transactionQueue.sort(function (a, b) {\r\n        return a.order - b.order;\r\n    });\r\n    return transactionQueue;\r\n};\r\n/**\r\n * @param {!Tree.<Array.<Transaction>>} node\r\n * @param {Array.<Transaction>} queue\r\n * @private\r\n */\r\nRepo.prototype.aggregateTransactionQueuesForNode_ = function (node, queue) {\r\n    var _this = this;\r\n    var nodeQueue = node.getValue();\r\n    if (nodeQueue !== null) {\r\n        for (var i = 0; i < nodeQueue.length; i++) {\r\n            queue.push(nodeQueue[i]);\r\n        }\r\n    }\r\n    node.forEachChild(function (child) {\r\n        _this.aggregateTransactionQueuesForNode_(child, queue);\r\n    });\r\n};\r\n/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n *\r\n * @param {!Tree.<Array.<!Transaction>>} node\r\n * @private\r\n */\r\nRepo.prototype.pruneCompletedTransactionsBelowNode_ = function (node) {\r\n    var _this = this;\r\n    var queue = node.getValue();\r\n    if (queue) {\r\n        var to = 0;\r\n        for (var from = 0; from < queue.length; from++) {\r\n            if (queue[from].status !== TransactionStatus.COMPLETED) {\r\n                queue[to] = queue[from];\r\n                to++;\r\n            }\r\n        }\r\n        queue.length = to;\r\n        node.setValue(queue.length > 0 ? queue : null);\r\n    }\r\n    node.forEachChild(function (childNode) {\r\n        _this.pruneCompletedTransactionsBelowNode_(childNode);\r\n    });\r\n};\r\n/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.  Called when doing a set() or update()\r\n * since we consider them incompatible with transactions.\r\n *\r\n * @param {!Path} path Path for which we want to abort related transactions.\r\n * @return {!Path}\r\n * @private\r\n */\r\nRepo.prototype.abortTransactions_ = function (path) {\r\n    var _this = this;\r\n    var affectedPath = this.getAncestorTransactionNode_(path).path();\r\n    var transactionNode = this.transactionQueueTree_.subTree(path);\r\n    transactionNode.forEachAncestor(function (node) {\r\n        _this.abortTransactionsOnNode_(node);\r\n    });\r\n    this.abortTransactionsOnNode_(transactionNode);\r\n    transactionNode.forEachDescendant(function (node) {\r\n        _this.abortTransactionsOnNode_(node);\r\n    });\r\n    return affectedPath;\r\n};\r\n/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} node Node to abort transactions for.\r\n * @private\r\n */\r\nRepo.prototype.abortTransactionsOnNode_ = function (node) {\r\n    var queue = node.getValue();\r\n    if (queue !== null) {\r\n        // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n        // the callback could trigger more transactions or sets.\r\n        var callbacks = [];\r\n        // Go through queue.  Any already-sent transactions must be marked for abort, while the unsent ones\r\n        // can be immediately aborted and removed.\r\n        var events = [];\r\n        var lastSent = -1;\r\n        for (var i = 0; i < queue.length; i++) {\r\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\r\n                // Already marked.  No action needed.\r\n            }\r\n            else if (queue[i].status === TransactionStatus.SENT) {\r\n                util.assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\r\n                lastSent = i;\r\n                // Mark transaction for abort when it comes back.\r\n                queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\r\n                queue[i].abortReason = 'set';\r\n            }\r\n            else {\r\n                util.assert(queue[i].status === TransactionStatus.RUN, 'Unexpected transaction status in abort');\r\n                // We can abort it immediately.\r\n                queue[i].unwatcher();\r\n                events = events.concat(this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId, true));\r\n                if (queue[i].onComplete) {\r\n                    var snapshot = null;\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, snapshot));\r\n                }\r\n            }\r\n        }\r\n        if (lastSent === -1) {\r\n            // We're not waiting for any sent transactions.  We can clear the queue.\r\n            node.setValue(null);\r\n        }\r\n        else {\r\n            // Remove the transactions we aborted.\r\n            queue.length = lastSent + 1;\r\n        }\r\n        // Now fire the callbacks.\r\n        this.eventQueue_.raiseEventsForChangedPath(node.path(), events);\r\n        for (var i = 0; i < callbacks.length; i++) {\r\n            exceptionGuard(callbacks[i]);\r\n        }\r\n    }\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** @const {string} */\r\nvar DATABASE_URL_OPTION = 'databaseURL';\r\nvar _staticInstance;\r\n/**\r\n * Creates and caches Repo instances.\r\n */\r\nvar RepoManager = /** @class */ (function () {\r\n    function RepoManager() {\r\n        /**\r\n         * @private {!Object.<string, Object<string, !fb.core.Repo>>}\r\n         */\r\n        this.repos_ = {};\r\n        /**\r\n         * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\r\n         * @private {boolean}\r\n         */\r\n        this.useRestClient_ = false;\r\n    }\r\n    RepoManager.getInstance = function () {\r\n        if (!_staticInstance) {\r\n            _staticInstance = new RepoManager();\r\n        }\r\n        return _staticInstance;\r\n    };\r\n    // TODO(koss): Remove these functions unless used in tests?\r\n    RepoManager.prototype.interrupt = function () {\r\n        for (var appName in this.repos_) {\r\n            for (var dbUrl in this.repos_[appName]) {\r\n                this.repos_[appName][dbUrl].interrupt();\r\n            }\r\n        }\r\n    };\r\n    RepoManager.prototype.resume = function () {\r\n        for (var appName in this.repos_) {\r\n            for (var dbUrl in this.repos_[appName]) {\r\n                this.repos_[appName][dbUrl].resume();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * This function should only ever be called to CREATE a new database instance.\r\n     *\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Database}\r\n     */\r\n    RepoManager.prototype.databaseFromApp = function (app, url) {\r\n        var dbUrl = url || app.options[DATABASE_URL_OPTION];\r\n        if (dbUrl === undefined) {\r\n            fatal(\"Can't determine Firebase Database URL.  Be sure to include \" +\r\n                DATABASE_URL_OPTION +\r\n                ' option when calling firebase.initializeApp().');\r\n        }\r\n        var parsedUrl = parseRepoInfo(dbUrl);\r\n        var repoInfo = parsedUrl.repoInfo;\r\n        validateUrl('Invalid Firebase Database URL', 1, parsedUrl);\r\n        if (!parsedUrl.path.isEmpty()) {\r\n            fatal('Database URL must point to the root of a Firebase Database ' +\r\n                '(not including a child path).');\r\n        }\r\n        var repo = this.createRepo(repoInfo, app);\r\n        return repo.database;\r\n    };\r\n    /**\r\n     * Remove the repo and make sure it is disconnected.\r\n     *\r\n     * @param {!Repo} repo\r\n     */\r\n    RepoManager.prototype.deleteRepo = function (repo) {\r\n        var appRepos = util.safeGet(this.repos_, repo.app.name);\r\n        // This should never happen...\r\n        if (!appRepos || util.safeGet(appRepos, repo.repoInfo_.toURLString()) !== repo) {\r\n            fatal(\"Database \" + repo.app.name + \"(\" + repo.repoInfo_ + \") has already been deleted.\");\r\n        }\r\n        repo.interrupt();\r\n        delete appRepos[repo.repoInfo_.toURLString()];\r\n    };\r\n    /**\r\n     * Ensures a repo doesn't already exist and then creates one using the\r\n     * provided app.\r\n     *\r\n     * @param {!RepoInfo} repoInfo The metadata about the Repo\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Repo} The Repo object for the specified server / repoName.\r\n     */\r\n    RepoManager.prototype.createRepo = function (repoInfo, app) {\r\n        var appRepos = util.safeGet(this.repos_, app.name);\r\n        if (!appRepos) {\r\n            appRepos = {};\r\n            this.repos_[app.name] = appRepos;\r\n        }\r\n        var repo = util.safeGet(appRepos, repoInfo.toURLString());\r\n        if (repo) {\r\n            fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\r\n        }\r\n        repo = new Repo(repoInfo, this.useRestClient_, app);\r\n        appRepos[repoInfo.toURLString()] = repo;\r\n        return repo;\r\n    };\r\n    /**\r\n     * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n     * @param {boolean} forceRestClient\r\n     */\r\n    RepoManager.prototype.forceRestClient = function (forceRestClient) {\r\n        this.useRestClient_ = forceRestClient;\r\n    };\r\n    return RepoManager;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase database.\r\n * @implements {FirebaseService}\r\n */\r\nvar Database = /** @class */ (function () {\r\n    /**\r\n     * The constructor should not be called by users of our public API.\r\n     * @param {!Repo} repo_\r\n     */\r\n    function Database(repo_) {\r\n        this.repo_ = repo_;\r\n        if (!(repo_ instanceof Repo)) {\r\n            fatal(\"Don't call new Database() directly - please use firebase.database().\");\r\n        }\r\n        /** @type {Reference} */\r\n        this.root_ = new Reference(repo_, Path.Empty);\r\n        this.INTERNAL = new DatabaseInternals(this);\r\n    }\r\n    Object.defineProperty(Database.prototype, \"app\", {\r\n        get: function () {\r\n            return this.repo_.app;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Database.prototype.ref = function (path) {\r\n        this.checkDeleted_('ref');\r\n        util.validateArgCount('database.ref', 0, 1, arguments.length);\r\n        if (path instanceof Reference) {\r\n            return this.refFromURL(path.toString());\r\n        }\r\n        return path !== undefined ? this.root_.child(path) : this.root_;\r\n    };\r\n    /**\r\n     * Returns a reference to the root or the path specified in url.\r\n     * We throw a exception if the url is not in the same domain as the\r\n     * current repo.\r\n     * @param {string} url\r\n     * @return {!Reference} Firebase reference.\r\n     */\r\n    Database.prototype.refFromURL = function (url) {\r\n        /** @const {string} */\r\n        var apiName = 'database.refFromURL';\r\n        this.checkDeleted_(apiName);\r\n        util.validateArgCount(apiName, 1, 1, arguments.length);\r\n        var parsedURL = parseRepoInfo(url);\r\n        validateUrl(apiName, 1, parsedURL);\r\n        var repoInfo = parsedURL.repoInfo;\r\n        if (repoInfo.host !== this.repo_.repoInfo_.host) {\r\n            fatal(apiName +\r\n                ': Host name does not match the current database: ' +\r\n                '(found ' +\r\n                repoInfo.host +\r\n                ' but expected ' +\r\n                this.repo_.repoInfo_.host +\r\n                ')');\r\n        }\r\n        return this.ref(parsedURL.path.toString());\r\n    };\r\n    /**\r\n     * @param {string} apiName\r\n     */\r\n    Database.prototype.checkDeleted_ = function (apiName) {\r\n        if (this.repo_ === null) {\r\n            fatal('Cannot call ' + apiName + ' on a deleted database.');\r\n        }\r\n    };\r\n    // Make individual repo go offline.\r\n    Database.prototype.goOffline = function () {\r\n        util.validateArgCount('database.goOffline', 0, 0, arguments.length);\r\n        this.checkDeleted_('goOffline');\r\n        this.repo_.interrupt();\r\n    };\r\n    Database.prototype.goOnline = function () {\r\n        util.validateArgCount('database.goOnline', 0, 0, arguments.length);\r\n        this.checkDeleted_('goOnline');\r\n        this.repo_.resume();\r\n    };\r\n    Database.ServerValue = {\r\n        TIMESTAMP: {\r\n            '.sv': 'timestamp'\r\n        }\r\n    };\r\n    return Database;\r\n}());\r\nvar DatabaseInternals = /** @class */ (function () {\r\n    /** @param {!Database} database */\r\n    function DatabaseInternals(database) {\r\n        this.database = database;\r\n    }\r\n    /** @return {Promise<void>} */\r\n    DatabaseInternals.prototype.delete = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                this.database.checkDeleted_('delete');\r\n                RepoManager.getInstance().deleteRepo(this.database.repo_);\r\n                this.database.repo_ = null;\r\n                this.database.root_ = null;\r\n                this.database.INTERNAL = null;\r\n                this.database = null;\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    return DatabaseInternals;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * INTERNAL methods for internal-use only (tests, etc.).\r\n *\r\n * Customers shouldn't use these or else should be aware that they could break at any time.\r\n *\r\n * @const\r\n */\r\nvar forceLongPolling = function () {\r\n    WebSocketConnection.forceDisallow();\r\n    BrowserPollConnection.forceAllow();\r\n};\r\nvar forceWebSockets = function () {\r\n    BrowserPollConnection.forceDisallow();\r\n};\r\n/* Used by App Manager */\r\nvar isWebSocketsAvailable = function () {\r\n    return WebSocketConnection['isAvailable']();\r\n};\r\nvar setSecurityDebugCallback = function (ref, callback) {\r\n    ref.repo.persistentConnection_.securityDebugCallback_ = callback;\r\n};\r\nvar stats = function (ref, showDelta) {\r\n    ref.repo.stats(showDelta);\r\n};\r\nvar statsIncrementCounter = function (ref, metric) {\r\n    ref.repo.statsIncrementCounter(metric);\r\n};\r\nvar dataUpdateCount = function (ref) {\r\n    return ref.repo.dataUpdateCount;\r\n};\r\nvar interceptServerData = function (ref, callback) {\r\n    return ref.repo.interceptServerData_(callback);\r\n};\n\nvar INTERNAL = /*#__PURE__*/Object.freeze({\n  forceLongPolling: forceLongPolling,\n  forceWebSockets: forceWebSockets,\n  isWebSocketsAvailable: isWebSocketsAvailable,\n  setSecurityDebugCallback: setSecurityDebugCallback,\n  stats: stats,\n  statsIncrementCounter: statsIncrementCounter,\n  dataUpdateCount: dataUpdateCount,\n  interceptServerData: interceptServerData\n});\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DataConnection = PersistentConnection;\r\n/**\r\n * @param {!string} pathString\r\n * @param {function(*)} onComplete\r\n */\r\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\r\n    this.sendRequest('q', { p: pathString }, onComplete);\r\n};\r\n/**\r\n * @param {*} data\r\n * @param {function(*)} onEcho\r\n */\r\nPersistentConnection.prototype.echo = function (data, onEcho) {\r\n    this.sendRequest('echo', { d: data }, onEcho);\r\n};\r\n// RealTimeConnection properties that we use in tests.\r\nvar RealTimeConnection = Connection;\r\n/**\r\n * @param {function(): string} newHash\r\n * @return {function()}\r\n */\r\nvar hijackHash = function (newHash) {\r\n    var oldPut = PersistentConnection.prototype.put;\r\n    PersistentConnection.prototype.put = function (pathString, data, opt_onComplete, opt_hash) {\r\n        if (opt_hash !== undefined) {\r\n            opt_hash = newHash();\r\n        }\r\n        oldPut.call(this, pathString, data, opt_onComplete, opt_hash);\r\n    };\r\n    return function () {\r\n        PersistentConnection.prototype.put = oldPut;\r\n    };\r\n};\r\n/**\r\n * @type {function(new:RepoInfo, !string, boolean, !string, boolean): undefined}\r\n */\r\nvar ConnectionTarget = RepoInfo;\r\n/**\r\n * @param {!Query} query\r\n * @return {!string}\r\n */\r\nvar queryIdentifier = function (query) {\r\n    return query.queryIdentifier();\r\n};\r\n/**\r\n * @param {!Query} firebaseRef\r\n * @return {!Object}\r\n */\r\nvar listens = function (firebaseRef) {\r\n    return firebaseRef.repo.persistentConnection_.listens_;\r\n};\r\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n *\r\n * @param {boolean} forceRestClient\r\n */\r\nvar forceRestClient = function (forceRestClient) {\r\n    RepoManager.getInstance().forceRestClient(forceRestClient);\r\n};\n\nvar TEST_ACCESS = /*#__PURE__*/Object.freeze({\n  DataConnection: DataConnection,\n  RealTimeConnection: RealTimeConnection,\n  hijackHash: hijackHash,\n  ConnectionTarget: ConnectionTarget,\n  queryIdentifier: queryIdentifier,\n  listens: listens,\n  forceRestClient: forceRestClient\n});\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ServerValue = Database.ServerValue;\r\nfunction registerDatabase(instance) {\r\n    // Register the Database Service with the 'firebase' namespace.\r\n    var namespace = instance.INTERNAL.registerService('database', function (app, unused, url) { return RepoManager.getInstance().databaseFromApp(app, url); }, \r\n    // firebase.database namespace properties\r\n    {\r\n        Reference: Reference,\r\n        Query: Query,\r\n        Database: Database,\r\n        enableLogging: enableLogging,\r\n        INTERNAL: INTERNAL,\r\n        ServerValue: ServerValue,\r\n        TEST_ACCESS: TEST_ACCESS\r\n    }, null, true);\r\n    if (util.isNodeSdk()) {\r\n        module.exports = namespace;\r\n    }\r\n}\r\nregisterDatabase(firebase);\n\nexports.registerDatabase = registerDatabase;\nexports.Database = Database;\nexports.Query = Query;\nexports.Reference = Reference;\nexports.enableLogging = enableLogging;\nexports.ServerValue = ServerValue;\nexports.DataSnapshot = DataSnapshot;\nexports.OnDisconnect = OnDisconnect;\n","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = require('./_has');\nvar toObject = require('./_to-object');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n","'use strict';\nvar create = require('./_object-create');\nvar descriptor = require('./_property-desc');\nvar setToStringTag = require('./_set-to-string-tag');\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n","exports.nextTick = function nextTick(fn) {\n\tsetTimeout(fn, 0);\n};\n\nexports.platform = exports.arch = \nexports.execPath = exports.title = 'browser';\nexports.pid = 1;\nexports.browser = true;\nexports.env = {};\nexports.argv = [];\n\nexports.binding = function (name) {\n\tthrow new Error('No such module. (Possibly not yet loaded)')\n};\n\n(function () {\n    var cwd = '/';\n    var path;\n    exports.cwd = function () { return cwd };\n    exports.chdir = function (dir) {\n        if (!path) path = require('path');\n        cwd = path.resolve(dir, cwd);\n    };\n})();\n\nexports.exit = exports.kill = \nexports.umask = exports.dlopen = \nexports.uptime = exports.memoryUsage = \nexports.uvCounters = function() {};\nexports.features = {};\n","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var ctx = require('./_ctx');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar anObject = require('./_an-object');\nvar toLength = require('./_to-length');\nvar getIterFn = require('./core.get-iterator-method');\nvar BREAK = {};\nvar RETURN = {};\nvar exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\n  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);\n  var f = ctx(fn, that, entries ? 2 : 1);\n  var index = 0;\n  var length, step, iterator, result;\n  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');\n  // fast case for arrays with default iterator\n  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if (result === BREAK || result === RETURN) return result;\n  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\n    result = call(iterator, f, step.value, entries);\n    if (result === BREAK || result === RETURN) return result;\n  }\n};\nexports.BREAK = BREAK;\nexports.RETURN = RETURN;\n","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = options.status === undefined ? 200 : options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n","'use strict';\nvar LIBRARY = require('./_library');\nvar global = require('./_global');\nvar ctx = require('./_ctx');\nvar classof = require('./_classof');\nvar $export = require('./_export');\nvar isObject = require('./_is-object');\nvar aFunction = require('./_a-function');\nvar anInstance = require('./_an-instance');\nvar forOf = require('./_for-of');\nvar speciesConstructor = require('./_species-constructor');\nvar task = require('./_task').set;\nvar microtask = require('./_microtask')();\nvar newPromiseCapabilityModule = require('./_new-promise-capability');\nvar perform = require('./_perform');\nvar userAgent = require('./_user-agent');\nvar promiseResolve = require('./_promise-resolve');\nvar PROMISE = 'Promise';\nvar TypeError = global.TypeError;\nvar process = global.process;\nvar versions = process && process.versions;\nvar v8 = versions && versions.v8 || '';\nvar $Promise = global[PROMISE];\nvar isNode = classof(process) == 'process';\nvar empty = function () { /* empty */ };\nvar Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;\nvar newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;\n\nvar USE_NATIVE = !!function () {\n  try {\n    // correct subclassing with @@species support\n    var promise = $Promise.resolve(1);\n    var FakePromise = (promise.constructor = {})[require('./_wks')('species')] = function (exec) {\n      exec(empty, empty);\n    };\n    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n    return (isNode || typeof PromiseRejectionEvent == 'function')\n      && promise.then(empty) instanceof FakePromise\n      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565\n      // we can't detect it synchronously, so just check versions\n      && v8.indexOf('6.6') !== 0\n      && userAgent.indexOf('Chrome/66') === -1;\n  } catch (e) { /* empty */ }\n}();\n\n// helpers\nvar isThenable = function (it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar notify = function (promise, isReject) {\n  if (promise._n) return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function () {\n    var value = promise._v;\n    var ok = promise._s == 1;\n    var i = 0;\n    var run = function (reaction) {\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then, exited;\n      try {\n        if (handler) {\n          if (!ok) {\n            if (promise._h == 2) onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          if (handler === true) result = value;\n          else {\n            if (domain) domain.enter();\n            result = handler(value); // may throw\n            if (domain) {\n              domain.exit();\n              exited = true;\n            }\n          }\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (e) {\n        if (domain && !exited) domain.exit();\n        reject(e);\n      }\n    };\n    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach\n    promise._c = [];\n    promise._n = false;\n    if (isReject && !promise._h) onUnhandled(promise);\n  });\n};\nvar onUnhandled = function (promise) {\n  task.call(global, function () {\n    var value = promise._v;\n    var unhandled = isUnhandled(promise);\n    var result, handler, console;\n    if (unhandled) {\n      result = perform(function () {\n        if (isNode) {\n          process.emit('unhandledRejection', value, promise);\n        } else if (handler = global.onunhandledrejection) {\n          handler({ promise: promise, reason: value });\n        } else if ((console = global.console) && console.error) {\n          console.error('Unhandled promise rejection', value);\n        }\n      });\n      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n    } promise._a = undefined;\n    if (unhandled && result.e) throw result.v;\n  });\n};\nvar isUnhandled = function (promise) {\n  return promise._h !== 1 && (promise._a || promise._c).length === 0;\n};\nvar onHandleUnhandled = function (promise) {\n  task.call(global, function () {\n    var handler;\n    if (isNode) {\n      process.emit('rejectionHandled', promise);\n    } else if (handler = global.onrejectionhandled) {\n      handler({ promise: promise, reason: promise._v });\n    }\n  });\n};\nvar $reject = function (value) {\n  var promise = this;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  promise._v = value;\n  promise._s = 2;\n  if (!promise._a) promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function (value) {\n  var promise = this;\n  var then;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  try {\n    if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n    if (then = isThenable(value)) {\n      microtask(function () {\n        var wrapper = { _w: promise, _d: false }; // wrap\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch (e) {\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch (e) {\n    $reject.call({ _w: promise, _d: false }, e); // wrap\n  }\n};\n\n// constructor polyfill\nif (!USE_NATIVE) {\n  // 25.4.3.1 Promise(executor)\n  $Promise = function Promise(executor) {\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch (err) {\n      $reject.call(this, err);\n    }\n  };\n  // eslint-disable-next-line no-unused-vars\n  Internal = function Promise(executor) {\n    this._c = [];             // <- awaiting reactions\n    this._a = undefined;      // <- checked in isUnhandled reactions\n    this._s = 0;              // <- state\n    this._d = false;          // <- done\n    this._v = undefined;      // <- value\n    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled\n    this._n = false;          // <- notify\n  };\n  Internal.prototype = require('./_redefine-all')($Promise.prototype, {\n    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)\n    then: function then(onFulfilled, onRejected) {\n      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = isNode ? process.domain : undefined;\n      this._c.push(reaction);\n      if (this._a) this._a.push(reaction);\n      if (this._s) notify(this, false);\n      return reaction.promise;\n    },\n    // 25.4.5.1 Promise.prototype.catch(onRejected)\n    'catch': function (onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  OwnPromiseCapability = function () {\n    var promise = new Internal();\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject = ctx($reject, promise, 1);\n  };\n  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {\n    return C === $Promise || C === Wrapper\n      ? new OwnPromiseCapability(C)\n      : newGenericPromiseCapability(C);\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });\nrequire('./_set-to-string-tag')($Promise, PROMISE);\nrequire('./_set-species')(PROMISE);\nWrapper = require('./_core')[PROMISE];\n\n// statics\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  // 25.4.4.5 Promise.reject(r)\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    var $$reject = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n  // 25.4.4.6 Promise.resolve(x)\n  resolve: function resolve(x) {\n    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && require('./_iter-detect')(function (iter) {\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  // 25.4.4.1 Promise.all(iterable)\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var values = [];\n      var index = 0;\n      var remaining = 1;\n      forOf(iterable, false, function (promise) {\n        var $index = index++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        C.resolve(promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[$index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  },\n  // 25.4.4.4 Promise.race(iterable)\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      forOf(iterable, false, function (promise) {\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  }\n});\n","var core = require('./_core');\nvar global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: require('./_library') ? 'pure' : 'global',\n  copyright: '© 2018 Denis Pushkarev (zloirock.ru)'\n});\n","'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nrequire('@firebase/polyfill');\nvar firebase = _interopDefault(require('@firebase/app'));\n\n/**\r\n * Copyright 2018 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nmodule.exports = firebase;\n","var global = require('./_global');\nvar core = require('./_core');\nvar hide = require('./_hide');\nvar redefine = require('./_redefine');\nvar ctx = require('./_ctx');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    // export native or passed\n    out = (own ? target : source)[key];\n    // bind timers to global for call from export context\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // extend global\n    if (target) redefine(target, key, out, type & $export.U);\n    // export\n    if (exports[key] != out) hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\nglobal.core = core;\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n","var ITERATOR = require('./_wks')('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () { SAFE_CLOSING = true; };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(riter, function () { throw 2; });\n} catch (e) { /* empty */ }\n\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () { return { done: safe = true }; };\n    arr[ITERATOR] = function () { return iter; };\n    exec(arr);\n  } catch (e) { /* empty */ }\n  return safe;\n};\n","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n","import '@firebase/database';\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","'use strict';\nvar global = require('./_global');\nvar dP = require('./_object-dp');\nvar DESCRIPTORS = require('./_descriptors');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (KEY) {\n  var C = global[KEY];\n  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\n    configurable: true,\n    get: function () { return this; }\n  });\n};\n","var def = require('./_object-dp').f;\nvar has = require('./_has');\nvar TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n","var global = require('./_global');\nvar macrotask = require('./_task').set;\nvar Observer = global.MutationObserver || global.WebKitMutationObserver;\nvar process = global.process;\nvar Promise = global.Promise;\nvar isNode = require('./_cof')(process) == 'process';\n\nmodule.exports = function () {\n  var head, last, notify;\n\n  var flush = function () {\n    var parent, fn;\n    if (isNode && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (e) {\n        if (head) notify();\n        else last = undefined;\n        throw e;\n      }\n    } last = undefined;\n    if (parent) parent.enter();\n  };\n\n  // Node.js\n  if (isNode) {\n    notify = function () {\n      process.nextTick(flush);\n    };\n  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339\n  } else if (Observer && !(global.navigator && global.navigator.standalone)) {\n    var toggle = true;\n    var node = document.createTextNode('');\n    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new\n    notify = function () {\n      node.data = toggle = !toggle;\n    };\n  // environments with maybe non-completely correct, but existent Promise\n  } else if (Promise && Promise.resolve) {\n    // Promise.resolve without an argument throws an error in LG WebOS 2\n    var promise = Promise.resolve(undefined);\n    notify = function () {\n      promise.then(flush);\n    };\n  // for other environments - macrotask based on:\n  // - setImmediate\n  // - MessageChannel\n  // - window.postMessag\n  // - onreadystatechange\n  // - setTimeout\n  } else {\n    notify = function () {\n      // strange IE + webpack dev server bug - use .call(global)\n      macrotask.call(global, flush);\n    };\n  }\n\n  return function (fn) {\n    var task = { fn: fn, next: undefined };\n    if (last) last.next = task;\n    if (!head) {\n      head = task;\n      notify();\n    } last = task;\n  };\n};\n","var core = module.exports = { version: '2.5.7' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","module.exports = {};\n","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","import 'whatwg-fetch';\n\n// Store setTimeout reference so promise-polyfill will be unaffected by\n// other code modifying setTimeout (like sinon.useFakeTimers())\nvar setTimeoutFunc = setTimeout;\n\nfunction noop() {}\n\n// Polyfill for Function.prototype.bind\nfunction bind(fn, thisArg) {\n  return function() {\n    fn.apply(thisArg, arguments);\n  };\n}\n\nfunction Promise(fn) {\n  if (!(this instanceof Promise))\n    throw new TypeError('Promises must be constructed via new');\n  if (typeof fn !== 'function') throw new TypeError('not a function');\n  this._state = 0;\n  this._handled = false;\n  this._value = undefined;\n  this._deferreds = [];\n\n  doResolve(fn, this);\n}\n\nfunction handle(self, deferred) {\n  while (self._state === 3) {\n    self = self._value;\n  }\n  if (self._state === 0) {\n    self._deferreds.push(deferred);\n    return;\n  }\n  self._handled = true;\n  Promise._immediateFn(function() {\n    var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n      return;\n    }\n    var ret;\n    try {\n      ret = cb(self._value);\n    } catch (e) {\n      reject(deferred.promise, e);\n      return;\n    }\n    resolve(deferred.promise, ret);\n  });\n}\n\nfunction resolve(self, newValue) {\n  try {\n    // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n    if (newValue === self)\n      throw new TypeError('A promise cannot be resolved with itself.');\n    if (\n      newValue &&\n      (typeof newValue === 'object' || typeof newValue === 'function')\n    ) {\n      var then = newValue.then;\n      if (newValue instanceof Promise) {\n        self._state = 3;\n        self._value = newValue;\n        finale(self);\n        return;\n      } else if (typeof then === 'function') {\n        doResolve(bind(then, newValue), self);\n        return;\n      }\n    }\n    self._state = 1;\n    self._value = newValue;\n    finale(self);\n  } catch (e) {\n    reject(self, e);\n  }\n}\n\nfunction reject(self, newValue) {\n  self._state = 2;\n  self._value = newValue;\n  finale(self);\n}\n\nfunction finale(self) {\n  if (self._state === 2 && self._deferreds.length === 0) {\n    Promise._immediateFn(function() {\n      if (!self._handled) {\n        Promise._unhandledRejectionFn(self._value);\n      }\n    });\n  }\n\n  for (var i = 0, len = self._deferreds.length; i < len; i++) {\n    handle(self, self._deferreds[i]);\n  }\n  self._deferreds = null;\n}\n\nfunction Handler(onFulfilled, onRejected, promise) {\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, self) {\n  var done = false;\n  try {\n    fn(\n      function(value) {\n        if (done) return;\n        done = true;\n        resolve(self, value);\n      },\n      function(reason) {\n        if (done) return;\n        done = true;\n        reject(self, reason);\n      }\n    );\n  } catch (ex) {\n    if (done) return;\n    done = true;\n    reject(self, ex);\n  }\n}\n\nPromise.prototype['catch'] = function(onRejected) {\n  return this.then(null, onRejected);\n};\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  var prom = new this.constructor(noop);\n\n  handle(this, new Handler(onFulfilled, onRejected, prom));\n  return prom;\n};\n\nPromise.prototype['finally'] = function(callback) {\n  var constructor = this.constructor;\n  return this.then(\n    function(value) {\n      return constructor.resolve(callback()).then(function() {\n        return value;\n      });\n    },\n    function(reason) {\n      return constructor.resolve(callback()).then(function() {\n        return constructor.reject(reason);\n      });\n    }\n  );\n};\n\nPromise.all = function(arr) {\n  return new Promise(function(resolve, reject) {\n    if (!arr || typeof arr.length === 'undefined')\n      throw new TypeError('Promise.all accepts an array');\n    var args = Array.prototype.slice.call(arr);\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n\n    function res(i, val) {\n      try {\n        if (val && (typeof val === 'object' || typeof val === 'function')) {\n          var then = val.then;\n          if (typeof then === 'function') {\n            then.call(\n              val,\n              function(val) {\n                res(i, val);\n              },\n              reject\n            );\n            return;\n          }\n        }\n        args[i] = val;\n        if (--remaining === 0) {\n          resolve(args);\n        }\n      } catch (ex) {\n        reject(ex);\n      }\n    }\n\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.resolve = function(value) {\n  if (value && typeof value === 'object' && value.constructor === Promise) {\n    return value;\n  }\n\n  return new Promise(function(resolve) {\n    resolve(value);\n  });\n};\n\nPromise.reject = function(value) {\n  return new Promise(function(resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function(values) {\n  return new Promise(function(resolve, reject) {\n    for (var i = 0, len = values.length; i < len; i++) {\n      values[i].then(resolve, reject);\n    }\n  });\n};\n\n// Use polyfill for setImmediate for performance gains\nPromise._immediateFn =\n  (typeof setImmediate === 'function' &&\n    function(fn) {\n      setImmediate(fn);\n    }) ||\n  function(fn) {\n    setTimeoutFunc(fn, 0);\n  };\n\nPromise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n  if (typeof console !== 'undefined' && console) {\n    console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n  }\n};\n\nvar globalNS = (function() {\n  // the only reliable means to get the global object is\n  // `Function('return this')()`\n  // However, this causes CSP violations in Chrome apps.\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('unable to locate global object');\n})();\n\nif (!globalNS.Promise) {\n  globalNS.Promise = Promise;\n}\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar _global = createCommonjsModule(function (module) {\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n});\n\nvar _core = createCommonjsModule(function (module) {\nvar core = module.exports = { version: '2.5.5' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n});\nvar _core_1 = _core.version;\n\nvar _isObject = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\nvar _anObject = function (it) {\n  if (!_isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\nvar _fails = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n// Thank's IE8 for his funny defineProperty\nvar _descriptors = !_fails(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n\nvar document = _global.document;\n// typeof document.createElement is 'object' in old IE\nvar is = _isObject(document) && _isObject(document.createElement);\nvar _domCreate = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\nvar _ie8DomDefine = !_descriptors && !_fails(function () {\n  return Object.defineProperty(_domCreate('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n\n// 7.1.1 ToPrimitive(input [, PreferredType])\n\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nvar _toPrimitive = function (it, S) {\n  if (!_isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !_isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\nvar dP = Object.defineProperty;\n\nvar f = _descriptors ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  _anObject(O);\n  P = _toPrimitive(P, true);\n  _anObject(Attributes);\n  if (_ie8DomDefine) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\nvar _objectDp = {\n\tf: f\n};\n\nvar _propertyDesc = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\nvar _hide = _descriptors ? function (object, key, value) {\n  return _objectDp.f(object, key, _propertyDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\nvar hasOwnProperty = {}.hasOwnProperty;\nvar _has = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\nvar id = 0;\nvar px = Math.random();\nvar _uid = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\nvar _redefine = createCommonjsModule(function (module) {\nvar SRC = _uid('src');\nvar TO_STRING = 'toString';\nvar $toString = Function[TO_STRING];\nvar TPL = ('' + $toString).split(TO_STRING);\n\n_core.inspectSource = function (it) {\n  return $toString.call(it);\n};\n\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) _has(val, 'name') || _hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) _has(val, SRC) || _hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === _global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    _hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    _hide(O, key, val);\n  }\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n});\n\nvar _aFunction = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n// optional / simple context binding\n\nvar _ctx = function (fn, that, length) {\n  _aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? _global : IS_STATIC ? _global[name] || (_global[name] = {}) : (_global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? _core : _core[name] || (_core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    // export native or passed\n    out = (own ? target : source)[key];\n    // bind timers to global for call from export context\n    exp = IS_BIND && own ? _ctx(out, _global) : IS_PROTO && typeof out == 'function' ? _ctx(Function.call, out) : out;\n    // extend global\n    if (target) _redefine(target, key, out, type & $export.U);\n    // export\n    if (exports[key] != out) _hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\n_global.core = _core;\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nvar _export = $export;\n\nvar toString = {}.toString;\n\nvar _cof = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\n\n// eslint-disable-next-line no-prototype-builtins\nvar _iobject = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return _cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n// 7.2.1 RequireObjectCoercible(argument)\nvar _defined = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n// 7.1.13 ToObject(argument)\n\nvar _toObject = function (it) {\n  return Object(_defined(it));\n};\n\n// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nvar _toInteger = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n// 7.1.15 ToLength\n\nvar min = Math.min;\nvar _toLength = function (it) {\n  return it > 0 ? min(_toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n// 7.2.2 IsArray(argument)\n\nvar _isArray = Array.isArray || function isArray(arg) {\n  return _cof(arg) == 'Array';\n};\n\nvar SHARED = '__core-js_shared__';\nvar store = _global[SHARED] || (_global[SHARED] = {});\nvar _shared = function (key) {\n  return store[key] || (store[key] = {});\n};\n\nvar _wks = createCommonjsModule(function (module) {\nvar store = _shared('wks');\n\nvar Symbol = _global.Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : _uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n});\n\nvar SPECIES = _wks('species');\n\nvar _arraySpeciesConstructor = function (original) {\n  var C;\n  if (_isArray(original)) {\n    C = original.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || _isArray(C.prototype))) C = undefined;\n    if (_isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? Array : C;\n};\n\n// 9.4.2.3 ArraySpeciesCreate(originalArray, length)\n\n\nvar _arraySpeciesCreate = function (original, length) {\n  return new (_arraySpeciesConstructor(original))(length);\n};\n\n// 0 -> Array#forEach\n// 1 -> Array#map\n// 2 -> Array#filter\n// 3 -> Array#some\n// 4 -> Array#every\n// 5 -> Array#find\n// 6 -> Array#findIndex\n\n\n\n\n\nvar _arrayMethods = function (TYPE, $create) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = $create || _arraySpeciesCreate;\n  return function ($this, callbackfn, that) {\n    var O = _toObject($this);\n    var self = _iobject(O);\n    var f = _ctx(callbackfn, that, 3);\n    var length = _toLength(self.length);\n    var index = 0;\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var val, res;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      val = self[index];\n      res = f(val, index, O);\n      if (TYPE) {\n        if (IS_MAP) result[index] = res;   // map\n        else if (res) switch (TYPE) {\n          case 3: return true;             // some\n          case 5: return val;              // find\n          case 6: return index;            // findIndex\n          case 2: result.push(val);        // filter\n        } else if (IS_EVERY) return false; // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n\n// 22.1.3.31 Array.prototype[@@unscopables]\nvar UNSCOPABLES = _wks('unscopables');\nvar ArrayProto = Array.prototype;\nif (ArrayProto[UNSCOPABLES] == undefined) _hide(ArrayProto, UNSCOPABLES, {});\nvar _addToUnscopables = function (key) {\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n\n// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)\n\nvar $find = _arrayMethods(5);\nvar KEY = 'find';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n_export(_export.P + _export.F * forced, 'Array', {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n_addToUnscopables(KEY);\n\nvar find = _core.Array.find;\n\n// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)\n\nvar $find$1 = _arrayMethods(6);\nvar KEY$1 = 'findIndex';\nvar forced$1 = true;\n// Shouldn't skip holes\nif (KEY$1 in []) Array(1)[KEY$1](function () { forced$1 = false; });\n_export(_export.P + _export.F * forced$1, 'Array', {\n  findIndex: function findIndex(callbackfn /* , that = undefined */) {\n    return $find$1(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n_addToUnscopables(KEY$1);\n\nvar findIndex = _core.Array.findIndex;\n\n// to indexed object, toObject with fallback for non-array-like ES3 strings\n\n\nvar _toIobject = function (it) {\n  return _iobject(_defined(it));\n};\n\nvar max = Math.max;\nvar min$1 = Math.min;\nvar _toAbsoluteIndex = function (index, length) {\n  index = _toInteger(index);\n  return index < 0 ? max(index + length, 0) : min$1(index, length);\n};\n\n// false -> Array#indexOf\n// true  -> Array#includes\n\n\n\nvar _arrayIncludes = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = _toIobject($this);\n    var length = _toLength(O.length);\n    var index = _toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nvar shared = _shared('keys');\n\nvar _sharedKey = function (key) {\n  return shared[key] || (shared[key] = _uid(key));\n};\n\nvar arrayIndexOf = _arrayIncludes(false);\nvar IE_PROTO = _sharedKey('IE_PROTO');\n\nvar _objectKeysInternal = function (object, names) {\n  var O = _toIobject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) _has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (_has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n\n// IE 8- don't enum bug keys\nvar _enumBugKeys = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n\n// 19.1.2.14 / 15.2.3.14 Object.keys(O)\n\n\n\nvar _objectKeys = Object.keys || function keys(O) {\n  return _objectKeysInternal(O, _enumBugKeys);\n};\n\nvar f$1 = Object.getOwnPropertySymbols;\n\nvar _objectGops = {\n\tf: f$1\n};\n\nvar f$2 = {}.propertyIsEnumerable;\n\nvar _objectPie = {\n\tf: f$2\n};\n\n// 19.1.2.1 Object.assign(target, source, ...)\n\n\n\n\n\nvar $assign = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nvar _objectAssign = !$assign || _fails(function () {\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) { B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = _toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = _objectGops.f;\n  var isEnum = _objectPie.f;\n  while (aLen > index) {\n    var S = _iobject(arguments[index++]);\n    var keys = getSymbols ? _objectKeys(S).concat(getSymbols(S)) : _objectKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n  } return T;\n} : $assign;\n\n// 19.1.3.1 Object.assign(target, source)\n\n\n_export(_export.S + _export.F, 'Object', { assign: _objectAssign });\n\nvar assign = _core.Object.assign;\n\n// 7.2.8 IsRegExp(argument)\n\n\nvar MATCH = _wks('match');\nvar _isRegexp = function (it) {\n  var isRegExp;\n  return _isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : _cof(it) == 'RegExp');\n};\n\n// helper for String#{startsWith, endsWith, includes}\n\n\n\nvar _stringContext = function (that, searchString, NAME) {\n  if (_isRegexp(searchString)) throw TypeError('String#' + NAME + \" doesn't accept regex!\");\n  return String(_defined(that));\n};\n\nvar MATCH$1 = _wks('match');\nvar _failsIsRegexp = function (KEY) {\n  var re = /./;\n  try {\n    '/./'[KEY](re);\n  } catch (e) {\n    try {\n      re[MATCH$1] = false;\n      return !'/./'[KEY](re);\n    } catch (f) { /* empty */ }\n  } return true;\n};\n\nvar STARTS_WITH = 'startsWith';\nvar $startsWith = ''[STARTS_WITH];\n\n_export(_export.P + _export.F * _failsIsRegexp(STARTS_WITH), 'String', {\n  startsWith: function startsWith(searchString /* , position = 0 */) {\n    var that = _stringContext(this, searchString, STARTS_WITH);\n    var index = _toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));\n    var search = String(searchString);\n    return $startsWith\n      ? $startsWith.call(that, search, index)\n      : that.slice(index, index + search.length) === search;\n  }\n});\n\nvar startsWith = _core.String.startsWith;\n\nvar _stringRepeat = function repeat(count) {\n  var str = String(_defined(this));\n  var res = '';\n  var n = _toInteger(count);\n  if (n < 0 || n == Infinity) throw RangeError(\"Count can't be negative\");\n  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) res += str;\n  return res;\n};\n\n_export(_export.P, 'String', {\n  // 21.1.3.13 String.prototype.repeat(count)\n  repeat: _stringRepeat\n});\n\nvar repeat = _core.String.repeat;\n\nvar _meta = createCommonjsModule(function (module) {\nvar META = _uid('meta');\n\n\nvar setDesc = _objectDp.f;\nvar id = 0;\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\nvar FREEZE = !_fails(function () {\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function (it) {\n  setDesc(it, META, { value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  } });\n};\nvar fastKey = function (it, create) {\n  // return primitive with prefix\n  if (!_isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!_has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F';\n    // not necessary to add metadata\n    if (!create) return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function (it, create) {\n  if (!_has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true;\n    // not necessary to add metadata\n    if (!create) return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function (it) {\n  if (FREEZE && meta.NEED && isExtensible(it) && !_has(it, META)) setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY: META,\n  NEED: false,\n  fastKey: fastKey,\n  getWeak: getWeak,\n  onFreeze: onFreeze\n};\n});\nvar _meta_1 = _meta.KEY;\nvar _meta_2 = _meta.NEED;\nvar _meta_3 = _meta.fastKey;\nvar _meta_4 = _meta.getWeak;\nvar _meta_5 = _meta.onFreeze;\n\nvar def = _objectDp.f;\n\nvar TAG = _wks('toStringTag');\n\nvar _setToStringTag = function (it, tag, stat) {\n  if (it && !_has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n\nvar f$3 = _wks;\n\nvar _wksExt = {\n\tf: f$3\n};\n\nvar _library = false;\n\nvar defineProperty = _objectDp.f;\nvar _wksDefine = function (name) {\n  var $Symbol = _core.Symbol || (_core.Symbol = _library ? {} : _global.Symbol || {});\n  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: _wksExt.f(name) });\n};\n\n// all enumerable object keys, includes symbols\n\n\n\nvar _enumKeys = function (it) {\n  var result = _objectKeys(it);\n  var getSymbols = _objectGops.f;\n  if (getSymbols) {\n    var symbols = getSymbols(it);\n    var isEnum = _objectPie.f;\n    var i = 0;\n    var key;\n    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);\n  } return result;\n};\n\nvar _objectDps = _descriptors ? Object.defineProperties : function defineProperties(O, Properties) {\n  _anObject(O);\n  var keys = _objectKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) _objectDp.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n\nvar document$1 = _global.document;\nvar _html = document$1 && document$1.documentElement;\n\n// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\n\n\n\nvar IE_PROTO$1 = _sharedKey('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE$1 = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = _domCreate('iframe');\n  var i = _enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  _html.appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE$1][_enumBugKeys[i]];\n  return createDict();\n};\n\nvar _objectCreate = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE$1] = _anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE$1] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO$1] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : _objectDps(result, Properties);\n};\n\n// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\n\nvar hiddenKeys = _enumBugKeys.concat('length', 'prototype');\n\nvar f$4 = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return _objectKeysInternal(O, hiddenKeys);\n};\n\nvar _objectGopn = {\n\tf: f$4\n};\n\n// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\n\nvar gOPN = _objectGopn.f;\nvar toString$1 = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return gOPN(it);\n  } catch (e) {\n    return windowNames.slice();\n  }\n};\n\nvar f$5 = function getOwnPropertyNames(it) {\n  return windowNames && toString$1.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(_toIobject(it));\n};\n\nvar _objectGopnExt = {\n\tf: f$5\n};\n\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar f$6 = _descriptors ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = _toIobject(O);\n  P = _toPrimitive(P, true);\n  if (_ie8DomDefine) try {\n    return gOPD(O, P);\n  } catch (e) { /* empty */ }\n  if (_has(O, P)) return _propertyDesc(!_objectPie.f.call(O, P), O[P]);\n};\n\nvar _objectGopd = {\n\tf: f$6\n};\n\n// ECMAScript 6 symbols shim\n\n\n\n\n\nvar META = _meta.KEY;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar gOPD$1 = _objectGopd.f;\nvar dP$1 = _objectDp.f;\nvar gOPN$1 = _objectGopnExt.f;\nvar $Symbol = _global.Symbol;\nvar $JSON = _global.JSON;\nvar _stringify = $JSON && $JSON.stringify;\nvar PROTOTYPE$2 = 'prototype';\nvar HIDDEN = _wks('_hidden');\nvar TO_PRIMITIVE = _wks('toPrimitive');\nvar isEnum = {}.propertyIsEnumerable;\nvar SymbolRegistry = _shared('symbol-registry');\nvar AllSymbols = _shared('symbols');\nvar OPSymbols = _shared('op-symbols');\nvar ObjectProto = Object[PROTOTYPE$2];\nvar USE_NATIVE = typeof $Symbol == 'function';\nvar QObject = _global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar setter = !QObject || !QObject[PROTOTYPE$2] || !QObject[PROTOTYPE$2].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDesc = _descriptors && _fails(function () {\n  return _objectCreate(dP$1({}, 'a', {\n    get: function () { return dP$1(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (it, key, D) {\n  var protoDesc = gOPD$1(ObjectProto, key);\n  if (protoDesc) delete ObjectProto[key];\n  dP$1(it, key, D);\n  if (protoDesc && it !== ObjectProto) dP$1(ObjectProto, key, protoDesc);\n} : dP$1;\n\nvar wrap = function (tag) {\n  var sym = AllSymbols[tag] = _objectCreate($Symbol[PROTOTYPE$2]);\n  sym._k = tag;\n  return sym;\n};\n\nvar isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  return it instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(it, key, D) {\n  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);\n  _anObject(it);\n  key = _toPrimitive(key, true);\n  _anObject(D);\n  if (_has(AllSymbols, key)) {\n    if (!D.enumerable) {\n      if (!_has(it, HIDDEN)) dP$1(it, HIDDEN, _propertyDesc(1, {}));\n      it[HIDDEN][key] = true;\n    } else {\n      if (_has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;\n      D = _objectCreate(D, { enumerable: _propertyDesc(0, false) });\n    } return setSymbolDesc(it, key, D);\n  } return dP$1(it, key, D);\n};\nvar $defineProperties = function defineProperties(it, P) {\n  _anObject(it);\n  var keys = _enumKeys(P = _toIobject(P));\n  var i = 0;\n  var l = keys.length;\n  var key;\n  while (l > i) $defineProperty(it, key = keys[i++], P[key]);\n  return it;\n};\nvar $create = function create(it, P) {\n  return P === undefined ? _objectCreate(it) : $defineProperties(_objectCreate(it), P);\n};\nvar $propertyIsEnumerable = function propertyIsEnumerable(key) {\n  var E = isEnum.call(this, key = _toPrimitive(key, true));\n  if (this === ObjectProto && _has(AllSymbols, key) && !_has(OPSymbols, key)) return false;\n  return E || !_has(this, key) || !_has(AllSymbols, key) || _has(this, HIDDEN) && this[HIDDEN][key] ? E : true;\n};\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {\n  it = _toIobject(it);\n  key = _toPrimitive(key, true);\n  if (it === ObjectProto && _has(AllSymbols, key) && !_has(OPSymbols, key)) return;\n  var D = gOPD$1(it, key);\n  if (D && _has(AllSymbols, key) && !(_has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;\n  return D;\n};\nvar $getOwnPropertyNames = function getOwnPropertyNames(it) {\n  var names = gOPN$1(_toIobject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (!_has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);\n  } return result;\n};\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(it) {\n  var IS_OP = it === ObjectProto;\n  var names = gOPN$1(IS_OP ? OPSymbols : _toIobject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (_has(AllSymbols, key = names[i++]) && (IS_OP ? _has(ObjectProto, key) : true)) result.push(AllSymbols[key]);\n  } return result;\n};\n\n// 19.4.1.1 Symbol([description])\nif (!USE_NATIVE) {\n  $Symbol = function Symbol() {\n    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');\n    var tag = _uid(arguments.length > 0 ? arguments[0] : undefined);\n    var $set = function (value) {\n      if (this === ObjectProto) $set.call(OPSymbols, value);\n      if (_has(this, HIDDEN) && _has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDesc(this, tag, _propertyDesc(1, value));\n    };\n    if (_descriptors && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });\n    return wrap(tag);\n  };\n  _redefine($Symbol[PROTOTYPE$2], 'toString', function toString() {\n    return this._k;\n  });\n\n  _objectGopd.f = $getOwnPropertyDescriptor;\n  _objectDp.f = $defineProperty;\n  _objectGopn.f = _objectGopnExt.f = $getOwnPropertyNames;\n  _objectPie.f = $propertyIsEnumerable;\n  _objectGops.f = $getOwnPropertySymbols;\n\n  if (_descriptors && !_library) {\n    _redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);\n  }\n\n  _wksExt.f = function (name) {\n    return wrap(_wks(name));\n  };\n}\n\n_export(_export.G + _export.W + _export.F * !USE_NATIVE, { Symbol: $Symbol });\n\nfor (var es6Symbols = (\n  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14\n  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'\n).split(','), j = 0; es6Symbols.length > j;)_wks(es6Symbols[j++]);\n\nfor (var wellKnownSymbols = _objectKeys(_wks.store), k = 0; wellKnownSymbols.length > k;) _wksDefine(wellKnownSymbols[k++]);\n\n_export(_export.S + _export.F * !USE_NATIVE, 'Symbol', {\n  // 19.4.2.1 Symbol.for(key)\n  'for': function (key) {\n    return _has(SymbolRegistry, key += '')\n      ? SymbolRegistry[key]\n      : SymbolRegistry[key] = $Symbol(key);\n  },\n  // 19.4.2.5 Symbol.keyFor(sym)\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');\n    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;\n  },\n  useSetter: function () { setter = true; },\n  useSimple: function () { setter = false; }\n});\n\n_export(_export.S + _export.F * !USE_NATIVE, 'Object', {\n  // 19.1.2.2 Object.create(O [, Properties])\n  create: $create,\n  // 19.1.2.4 Object.defineProperty(O, P, Attributes)\n  defineProperty: $defineProperty,\n  // 19.1.2.3 Object.defineProperties(O, Properties)\n  defineProperties: $defineProperties,\n  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,\n  // 19.1.2.7 Object.getOwnPropertyNames(O)\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // 19.1.2.8 Object.getOwnPropertySymbols(O)\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// 24.3.2 JSON.stringify(value [, replacer [, space]])\n$JSON && _export(_export.S + _export.F * (!USE_NATIVE || _fails(function () {\n  var S = $Symbol();\n  // MS Edge converts symbol values to JSON as {}\n  // WebKit converts symbol values to JSON as null\n  // V8 throws on boxed symbols\n  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';\n})), 'JSON', {\n  stringify: function stringify(it) {\n    var args = [it];\n    var i = 1;\n    var replacer, $replacer;\n    while (arguments.length > i) args.push(arguments[i++]);\n    $replacer = replacer = args[1];\n    if (!_isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n    if (!_isArray(replacer)) replacer = function (key, value) {\n      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);\n      if (!isSymbol(value)) return value;\n    };\n    args[1] = replacer;\n    return _stringify.apply($JSON, args);\n  }\n});\n\n// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)\n$Symbol[PROTOTYPE$2][TO_PRIMITIVE] || _hide($Symbol[PROTOTYPE$2], TO_PRIMITIVE, $Symbol[PROTOTYPE$2].valueOf);\n// 19.4.3.5 Symbol.prototype[@@toStringTag]\n_setToStringTag($Symbol, 'Symbol');\n// 20.2.1.9 Math[@@toStringTag]\n_setToStringTag(Math, 'Math', true);\n// 24.3.3 JSON[@@toStringTag]\n_setToStringTag(_global.JSON, 'JSON', true);\n\n// getting tag from 19.1.3.6 Object.prototype.toString()\n\nvar TAG$1 = _wks('toStringTag');\n// ES3 wrong here\nvar ARG = _cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nvar _classof = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG$1)) == 'string' ? T\n    // builtinTag case\n    : ARG ? _cof(O)\n    // ES3 arguments fallback\n    : (B = _cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n// 19.1.3.6 Object.prototype.toString()\n\nvar test = {};\ntest[_wks('toStringTag')] = 'z';\nif (test + '' != '[object z]') {\n  _redefine(Object.prototype, 'toString', function toString() {\n    return '[object ' + _classof(this) + ']';\n  }, true);\n}\n\n_wksDefine('asyncIterator');\n\n_wksDefine('observable');\n\nvar symbol = _core.Symbol;\n\n// true  -> String#at\n// false -> String#codePointAt\nvar _stringAt = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(_defined(that));\n    var i = _toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\nvar _iterators = {};\n\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\n_hide(IteratorPrototype, _wks('iterator'), function () { return this; });\n\nvar _iterCreate = function (Constructor, NAME, next) {\n  Constructor.prototype = _objectCreate(IteratorPrototype, { next: _propertyDesc(1, next) });\n  _setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\n\n\nvar IE_PROTO$2 = _sharedKey('IE_PROTO');\nvar ObjectProto$1 = Object.prototype;\n\nvar _objectGpo = Object.getPrototypeOf || function (O) {\n  O = _toObject(O);\n  if (_has(O, IE_PROTO$2)) return O[IE_PROTO$2];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto$1 : null;\n};\n\nvar ITERATOR = _wks('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nvar _iterDefine = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  _iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = _objectGpo($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      _setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!_library && typeof IteratorPrototype[ITERATOR] != 'function') _hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!_library || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    _hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  _iterators[NAME] = $default;\n  _iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) _redefine(proto, key, methods[key]);\n    } else _export(_export.P + _export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\nvar $at = _stringAt(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\n_iterDefine(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n\nvar _iterStep = function (done, value) {\n  return { value: value, done: !!done };\n};\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nvar es6_array_iterator = _iterDefine(Array, 'Array', function (iterated, kind) {\n  this._t = _toIobject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return _iterStep(1);\n  }\n  if (kind == 'keys') return _iterStep(0, index);\n  if (kind == 'values') return _iterStep(0, O[index]);\n  return _iterStep(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\n_iterators.Arguments = _iterators.Array;\n\n_addToUnscopables('keys');\n_addToUnscopables('values');\n_addToUnscopables('entries');\n\nvar ITERATOR$1 = _wks('iterator');\nvar TO_STRING_TAG = _wks('toStringTag');\nvar ArrayValues = _iterators.Array;\n\nvar DOMIterables = {\n  CSSRuleList: true, // TODO: Not spec compliant, should be false.\n  CSSStyleDeclaration: false,\n  CSSValueList: false,\n  ClientRectList: false,\n  DOMRectList: false,\n  DOMStringList: false,\n  DOMTokenList: true,\n  DataTransferItemList: false,\n  FileList: false,\n  HTMLAllCollection: false,\n  HTMLCollection: false,\n  HTMLFormElement: false,\n  HTMLSelectElement: false,\n  MediaList: true, // TODO: Not spec compliant, should be false.\n  MimeTypeArray: false,\n  NamedNodeMap: false,\n  NodeList: true,\n  PaintRequestList: false,\n  Plugin: false,\n  PluginArray: false,\n  SVGLengthList: false,\n  SVGNumberList: false,\n  SVGPathSegList: false,\n  SVGPointList: false,\n  SVGStringList: false,\n  SVGTransformList: false,\n  SourceBufferList: false,\n  StyleSheetList: true, // TODO: Not spec compliant, should be false.\n  TextTrackCueList: false,\n  TextTrackList: false,\n  TouchList: false\n};\n\nfor (var collections = _objectKeys(DOMIterables), i = 0; i < collections.length; i++) {\n  var NAME = collections[i];\n  var explicit = DOMIterables[NAME];\n  var Collection = _global[NAME];\n  var proto = Collection && Collection.prototype;\n  var key;\n  if (proto) {\n    if (!proto[ITERATOR$1]) _hide(proto, ITERATOR$1, ArrayValues);\n    if (!proto[TO_STRING_TAG]) _hide(proto, TO_STRING_TAG, NAME);\n    _iterators[NAME] = ArrayValues;\n    if (explicit) for (key in es6_array_iterator) if (!proto[key]) _redefine(proto, key, es6_array_iterator[key], true);\n  }\n}\n\nvar iterator = _wksExt.f('iterator');\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","// 22.1.3.31 Array.prototype[@@unscopables]\nvar UNSCOPABLES = require('./_wks')('unscopables');\nvar ArrayProto = Array.prototype;\nif (ArrayProto[UNSCOPABLES] == undefined) require('./_hide')(ArrayProto, UNSCOPABLES, {});\nmodule.exports = function (key) {\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n","module.exports = function (exec) {\n  try {\n    return { e: false, v: exec() };\n  } catch (e) {\n    return { e: true, v: e };\n  }\n};\n","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","var global = require('./_global');\nvar navigator = global.navigator;\n\nmodule.exports = navigator && navigator.userAgent || '';\n","'use strict';\n// 25.4.1.5 NewPromiseCapability(C)\nvar aFunction = require('./_a-function');\n\nfunction PromiseCapability(C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n}\n\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n","/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A container for all of the Logger instances\r\n */\r\nvar instances = [];\r\n/**\r\n * The JS SDK supports 5 log levels and also allows a user the ability to\r\n * silence the logs altogether.\r\n *\r\n * The order is a follows:\r\n * DEBUG < VERBOSE < INFO < WARN < ERROR\r\n *\r\n * All of the log types above the current log level will be captured (i.e. if\r\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\r\n * `VERBOSE` logs will not)\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\r\n    LogLevel[LogLevel[\"VERBOSE\"] = 1] = \"VERBOSE\";\r\n    LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\r\n    LogLevel[LogLevel[\"WARN\"] = 3] = \"WARN\";\r\n    LogLevel[LogLevel[\"ERROR\"] = 4] = \"ERROR\";\r\n    LogLevel[LogLevel[\"SILENT\"] = 5] = \"SILENT\";\r\n})(LogLevel || (LogLevel = {}));\r\n/**\r\n * The default log level\r\n */\r\nvar defaultLogLevel = LogLevel.INFO;\r\n/**\r\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\r\n * messages on to their corresponding console counterparts (if the log method\r\n * is supported by the current log level)\r\n */\r\nvar defaultLogHandler = function (instance, logType) {\r\n    var args = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        args[_i - 2] = arguments[_i];\r\n    }\r\n    if (logType < instance.logLevel)\r\n        return;\r\n    var now = new Date().toISOString();\r\n    switch (logType) {\r\n        /**\r\n         * By default, `console.debug` is not displayed in the developer console (in\r\n         * chrome). To avoid forcing users to have to opt-in to these logs twice\r\n         * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\r\n         * logs to the `console.log` function.\r\n         */\r\n        case LogLevel.DEBUG:\r\n            console.log.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        case LogLevel.VERBOSE:\r\n            console.log.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        case LogLevel.INFO:\r\n            console.info.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        case LogLevel.WARN:\r\n            console.warn.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        case LogLevel.ERROR:\r\n            console.error.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        default:\r\n            throw new Error(\"Attempted to log a message with an invalid logType (value: \" + logType + \")\");\r\n    }\r\n};\r\nvar Logger = /** @class */ (function () {\r\n    /**\r\n     * Gives you an instance of a Logger to capture messages according to\r\n     * Firebase's logging scheme.\r\n     *\r\n     * @param name The name that the logs will be associated with\r\n     */\r\n    function Logger(name) {\r\n        this.name = name;\r\n        /**\r\n         * The log level of the given Logger instance.\r\n         */\r\n        this._logLevel = defaultLogLevel;\r\n        /**\r\n         * The log handler for the Logger instance.\r\n         */\r\n        this._logHandler = defaultLogHandler;\r\n        /**\r\n         * Capture the current instance for later use\r\n         */\r\n        instances.push(this);\r\n    }\r\n    Object.defineProperty(Logger.prototype, \"logLevel\", {\r\n        get: function () {\r\n            return this._logLevel;\r\n        },\r\n        set: function (val) {\r\n            if (!(val in LogLevel)) {\r\n                throw new TypeError('Invalid value assigned to `logLevel`');\r\n            }\r\n            this._logLevel = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Logger.prototype, \"logHandler\", {\r\n        get: function () {\r\n            return this._logHandler;\r\n        },\r\n        set: function (val) {\r\n            if (typeof val !== 'function') {\r\n                throw new TypeError('Value assigned to `logHandler` must be a function');\r\n            }\r\n            this._logHandler = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * The functions below are all based on the `console` interface\r\n     */\r\n    Logger.prototype.debug = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.DEBUG].concat(args));\r\n    };\r\n    Logger.prototype.log = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.VERBOSE].concat(args));\r\n    };\r\n    Logger.prototype.info = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.INFO].concat(args));\r\n    };\r\n    Logger.prototype.warn = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.WARN].concat(args));\r\n    };\r\n    Logger.prototype.error = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.ERROR].concat(args));\r\n    };\r\n    return Logger;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction setLogLevel(level) {\r\n    instances.forEach(function (inst) {\r\n        inst.logLevel = level;\r\n    });\r\n}\n\nexport { setLogLevel, Logger, LogLevel };\n","var anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar newPromiseCapability = require('./_new-promise-capability');\n\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar util = require('@firebase/util');\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar contains = function (obj, key) {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n};\r\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\r\n// An array to capture listeners before the true auth functions\r\n// exist\r\nvar tokenListeners = [];\r\n/**\r\n * Global context object for a collection of services using\r\n * a shared authentication state.\r\n */\r\nvar FirebaseAppImpl = /** @class */ (function () {\r\n    function FirebaseAppImpl(options, config, firebase_) {\r\n        this.firebase_ = firebase_;\r\n        this.isDeleted_ = false;\r\n        this.services_ = {};\r\n        this.name_ = config.name;\r\n        this._automaticDataCollectionEnabled =\r\n            config.automaticDataCollectionEnabled || false;\r\n        this.options_ = util.deepCopy(options);\r\n        this.INTERNAL = {\r\n            getUid: function () { return null; },\r\n            getToken: function () { return Promise.resolve(null); },\r\n            addAuthTokenListener: function (callback) {\r\n                tokenListeners.push(callback);\r\n                // Make sure callback is called, asynchronously, in the absence of the auth module\r\n                setTimeout(function () { return callback(null); }, 0);\r\n            },\r\n            removeAuthTokenListener: function (callback) {\r\n                tokenListeners = tokenListeners.filter(function (listener) { return listener !== callback; });\r\n            }\r\n        };\r\n    }\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"automaticDataCollectionEnabled\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this._automaticDataCollectionEnabled;\r\n        },\r\n        set: function (val) {\r\n            this.checkDestroyed_();\r\n            this._automaticDataCollectionEnabled = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"name\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this.name_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"options\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this.options_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FirebaseAppImpl.prototype.delete = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            _this.checkDestroyed_();\r\n            resolve();\r\n        })\r\n            .then(function () {\r\n            _this.firebase_.INTERNAL.removeApp(_this.name_);\r\n            var services = [];\r\n            Object.keys(_this.services_).forEach(function (serviceKey) {\r\n                Object.keys(_this.services_[serviceKey]).forEach(function (instanceKey) {\r\n                    services.push(_this.services_[serviceKey][instanceKey]);\r\n                });\r\n            });\r\n            return Promise.all(services.map(function (service) {\r\n                return service.INTERNAL.delete();\r\n            }));\r\n        })\r\n            .then(function () {\r\n            _this.isDeleted_ = true;\r\n            _this.services_ = {};\r\n        });\r\n    };\r\n    /**\r\n     * Return a service instance associated with this app (creating it\r\n     * on demand), identified by the passed instanceIdentifier.\r\n     *\r\n     * NOTE: Currently storage is the only one that is leveraging this\r\n     * functionality. They invoke it by calling:\r\n     *\r\n     * ```javascript\r\n     * firebase.app().storage('STORAGE BUCKET ID')\r\n     * ```\r\n     *\r\n     * The service name is passed to this already\r\n     * @internal\r\n     */\r\n    FirebaseAppImpl.prototype._getService = function (name, instanceIdentifier) {\r\n        if (instanceIdentifier === void 0) { instanceIdentifier = DEFAULT_ENTRY_NAME; }\r\n        this.checkDestroyed_();\r\n        if (!this.services_[name]) {\r\n            this.services_[name] = {};\r\n        }\r\n        if (!this.services_[name][instanceIdentifier]) {\r\n            /**\r\n             * If a custom instance has been defined (i.e. not '[DEFAULT]')\r\n             * then we will pass that instance on, otherwise we pass `null`\r\n             */\r\n            var instanceSpecifier = instanceIdentifier !== DEFAULT_ENTRY_NAME\r\n                ? instanceIdentifier\r\n                : undefined;\r\n            var service = this.firebase_.INTERNAL.factories[name](this, this.extendApp.bind(this), instanceSpecifier);\r\n            this.services_[name][instanceIdentifier] = service;\r\n        }\r\n        return this.services_[name][instanceIdentifier];\r\n    };\r\n    /**\r\n     * Callback function used to extend an App instance at the time\r\n     * of service instance creation.\r\n     */\r\n    FirebaseAppImpl.prototype.extendApp = function (props) {\r\n        var _this = this;\r\n        // Copy the object onto the FirebaseAppImpl prototype\r\n        util.deepExtend(this, props);\r\n        /**\r\n         * If the app has overwritten the addAuthTokenListener stub, forward\r\n         * the active token listeners on to the true fxn.\r\n         *\r\n         * TODO: This function is required due to our current module\r\n         * structure. Once we are able to rely strictly upon a single module\r\n         * implementation, this code should be refactored and Auth should\r\n         * provide these stubs and the upgrade logic\r\n         */\r\n        if (props.INTERNAL && props.INTERNAL.addAuthTokenListener) {\r\n            tokenListeners.forEach(function (listener) {\r\n                _this.INTERNAL.addAuthTokenListener(listener);\r\n            });\r\n            tokenListeners = [];\r\n        }\r\n    };\r\n    /**\r\n     * This function will throw an Error if the App has already been deleted -\r\n     * use before performing API actions on the App.\r\n     */\r\n    FirebaseAppImpl.prototype.checkDestroyed_ = function () {\r\n        if (this.isDeleted_) {\r\n            error('app-deleted', { name: this.name_ });\r\n        }\r\n    };\r\n    return FirebaseAppImpl;\r\n}());\r\n// Prevent dead-code elimination of these methods w/o invalid property\r\n// copying.\r\n(FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options) ||\r\n    FirebaseAppImpl.prototype.delete ||\r\n    console.log('dc');\r\n/**\r\n * Return a firebase namespace object.\r\n *\r\n * In production, this will be called exactly once and the result\r\n * assigned to the 'firebase' global.  It may be called multiple times\r\n * in unit tests.\r\n */\r\nfunction createFirebaseNamespace() {\r\n    var apps_ = {};\r\n    var factories = {};\r\n    var appHooks = {};\r\n    // A namespace is a plain JavaScript Object.\r\n    var namespace = {\r\n        // Hack to prevent Babel from modifying the object returned\r\n        // as the firebase namespace.\r\n        __esModule: true,\r\n        initializeApp: initializeApp,\r\n        app: app,\r\n        apps: null,\r\n        Promise: Promise,\r\n        SDK_VERSION: '5.5.0',\r\n        INTERNAL: {\r\n            registerService: registerService,\r\n            createFirebaseNamespace: createFirebaseNamespace,\r\n            extendNamespace: extendNamespace,\r\n            createSubscribe: util.createSubscribe,\r\n            ErrorFactory: util.ErrorFactory,\r\n            removeApp: removeApp,\r\n            factories: factories,\r\n            useAsService: useAsService,\r\n            Promise: Promise,\r\n            deepExtend: util.deepExtend\r\n        }\r\n    };\r\n    // Inject a circular default export to allow Babel users who were previously\r\n    // using:\r\n    //\r\n    //   import firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase').default;\r\n    //\r\n    // instead of\r\n    //\r\n    //   import * as firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase');\r\n    util.patchProperty(namespace, 'default', namespace);\r\n    // firebase.apps is a read-only getter.\r\n    Object.defineProperty(namespace, 'apps', {\r\n        get: getApps\r\n    });\r\n    /**\r\n     * Called by App.delete() - but before any services associated with the App\r\n     * are deleted.\r\n     */\r\n    function removeApp(name) {\r\n        var app = apps_[name];\r\n        callAppHooks(app, 'delete');\r\n        delete apps_[name];\r\n    }\r\n    /**\r\n     * Get the App object for a given name (or DEFAULT).\r\n     */\r\n    function app(name) {\r\n        name = name || DEFAULT_ENTRY_NAME;\r\n        if (!contains(apps_, name)) {\r\n            error('no-app', { name: name });\r\n        }\r\n        return apps_[name];\r\n    }\r\n    util.patchProperty(app, 'App', FirebaseAppImpl);\r\n    function initializeApp(options, rawConfig) {\r\n        if (rawConfig === void 0) { rawConfig = {}; }\r\n        if (typeof rawConfig !== 'object' || rawConfig === null) {\r\n            var name_1 = rawConfig;\r\n            rawConfig = { name: name_1 };\r\n        }\r\n        var config = rawConfig;\r\n        if (config.name === undefined) {\r\n            config.name = DEFAULT_ENTRY_NAME;\r\n        }\r\n        var name = config.name;\r\n        if (typeof name !== 'string' || !name) {\r\n            error('bad-app-name', { name: name + '' });\r\n        }\r\n        if (contains(apps_, name)) {\r\n            error('duplicate-app', { name: name });\r\n        }\r\n        var app = new FirebaseAppImpl(options, config, namespace);\r\n        apps_[name] = app;\r\n        callAppHooks(app, 'create');\r\n        return app;\r\n    }\r\n    /*\r\n     * Return an array of all the non-deleted FirebaseApps.\r\n     */\r\n    function getApps() {\r\n        // Make a copy so caller cannot mutate the apps list.\r\n        return Object.keys(apps_).map(function (name) { return apps_[name]; });\r\n    }\r\n    /*\r\n     * Register a Firebase Service.\r\n     *\r\n     * firebase.INTERNAL.registerService()\r\n     *\r\n     * TODO: Implement serviceProperties.\r\n     */\r\n    function registerService(name, createService, serviceProperties, appHook, allowMultipleInstances) {\r\n        // Cannot re-register a service that already exists\r\n        if (factories[name]) {\r\n            error('duplicate-service', { name: name });\r\n        }\r\n        // Capture the service factory for later service instantiation\r\n        factories[name] = createService;\r\n        // Capture the appHook, if passed\r\n        if (appHook) {\r\n            appHooks[name] = appHook;\r\n            // Run the **new** app hook on all existing apps\r\n            getApps().forEach(function (app) {\r\n                appHook('create', app);\r\n            });\r\n        }\r\n        // The Service namespace is an accessor function ...\r\n        var serviceNamespace = function (appArg) {\r\n            if (appArg === void 0) { appArg = app(); }\r\n            if (typeof appArg[name] !== 'function') {\r\n                // Invalid argument.\r\n                // This happens in the following case: firebase.storage('gs:/')\r\n                error('invalid-app-argument', { name: name });\r\n            }\r\n            // Forward service instance lookup to the FirebaseApp.\r\n            return appArg[name]();\r\n        };\r\n        // ... and a container for service-level properties.\r\n        if (serviceProperties !== undefined) {\r\n            util.deepExtend(serviceNamespace, serviceProperties);\r\n        }\r\n        // Monkey-patch the serviceNamespace onto the firebase namespace\r\n        namespace[name] = serviceNamespace;\r\n        // Patch the FirebaseAppImpl prototype\r\n        FirebaseAppImpl.prototype[name] = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            var serviceFxn = this._getService.bind(this, name);\r\n            return serviceFxn.apply(this, allowMultipleInstances ? args : []);\r\n        };\r\n        return serviceNamespace;\r\n    }\r\n    /**\r\n     * Patch the top-level firebase namespace with additional properties.\r\n     *\r\n     * firebase.INTERNAL.extendNamespace()\r\n     */\r\n    function extendNamespace(props) {\r\n        util.deepExtend(namespace, props);\r\n    }\r\n    function callAppHooks(app, eventName) {\r\n        Object.keys(factories).forEach(function (serviceName) {\r\n            // Ignore virtual services\r\n            var factoryName = useAsService(app, serviceName);\r\n            if (factoryName === null) {\r\n                return;\r\n            }\r\n            if (appHooks[factoryName]) {\r\n                appHooks[factoryName](eventName, app);\r\n            }\r\n        });\r\n    }\r\n    // Map the requested service to a registered service name\r\n    // (used to map auth to serverAuth service when needed).\r\n    function useAsService(app, name) {\r\n        if (name === 'serverAuth') {\r\n            return null;\r\n        }\r\n        var useService = name;\r\n        var options = app.options;\r\n        return useService;\r\n    }\r\n    return namespace;\r\n}\r\nfunction error(code, args) {\r\n    throw appErrors.create(code, args);\r\n}\r\n// TypeScript does not support non-string indexes!\r\n// let errors: {[code: AppError: string} = {\r\nvar errors = {\r\n    'no-app': \"No Firebase App '{$name}' has been created - \" +\r\n        'call Firebase App.initializeApp()',\r\n    'bad-app-name': \"Illegal App name: '{$name}\",\r\n    'duplicate-app': \"Firebase App named '{$name}' already exists\",\r\n    'app-deleted': \"Firebase App named '{$name}' already deleted\",\r\n    'duplicate-service': \"Firebase service named '{$name}' already registered\",\r\n    'sa-not-supported': 'Initializing the Firebase SDK with a service ' +\r\n        'account is only allowed in a Node.js environment. On client ' +\r\n        'devices, you should instead initialize the SDK with an api key and ' +\r\n        'auth domain',\r\n    'invalid-app-argument': 'firebase.{$name}() takes either no argument or a ' +\r\n        'Firebase App instance.'\r\n};\r\nvar appErrors = new util.ErrorFactory('app', 'Firebase', errors);\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar firebase = createFirebaseNamespace();\n\nexports.firebase = firebase;\nexports.default = firebase;\n","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables');\nvar step = require('./_iter-step');\nvar Iterators = require('./_iterators');\nvar toIObject = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar tslib_1 = require('tslib');\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\r\n */\r\nvar CONSTANTS = {\r\n    /**\r\n     * @define {boolean} Whether this is the client Node.js SDK.\r\n     */\r\n    NODE_CLIENT: false,\r\n    /**\r\n     * @define {boolean} Whether this is the Admin Node.js SDK.\r\n     */\r\n    NODE_ADMIN: false,\r\n    /**\r\n     * Firebase SDK Version\r\n     */\r\n    SDK_VERSION: '${JSCORE_VERSION}'\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws an error if the provided assertion is falsy\r\n * @param {*} assertion The assertion to be tested for falsiness\r\n * @param {!string} message The message to display if the check fails\r\n */\r\nvar assert = function (assertion, message) {\r\n    if (!assertion) {\r\n        throw assertionError(message);\r\n    }\r\n};\r\n/**\r\n * Returns an Error object suitable for throwing.\r\n * @param {string} message\r\n * @return {!Error}\r\n */\r\nvar assertionError = function (message) {\r\n    return new Error('Firebase Database (' +\r\n        CONSTANTS.SDK_VERSION +\r\n        ') INTERNAL ASSERT FAILED: ' +\r\n        message);\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar stringToByteArray = function (str) {\r\n    // TODO(user): Use native implementations if/when available\r\n    var out = [], p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if ((c & 0xfc00) == 0xd800 &&\r\n            i + 1 < str.length &&\r\n            (str.charCodeAt(i + 1) & 0xfc00) == 0xdc00) {\r\n            // Surrogate Pair\r\n            c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Turns an array of numbers into the string given by the concatenation of the\r\n * characters to which the numbers correspond.\r\n * @param {Array<number>} bytes Array of numbers representing characters.\r\n * @return {string} Stringification of the array.\r\n */\r\nvar byteArrayToString = function (bytes) {\r\n    // TODO(user): Use native implementations if/when available\r\n    var out = [], pos = 0, c = 0;\r\n    while (pos < bytes.length) {\r\n        var c1 = bytes[pos++];\r\n        if (c1 < 128) {\r\n            out[c++] = String.fromCharCode(c1);\r\n        }\r\n        else if (c1 > 191 && c1 < 224) {\r\n            var c2 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\r\n        }\r\n        else if (c1 > 239 && c1 < 365) {\r\n            // Surrogate Pair\r\n            var c2 = bytes[pos++];\r\n            var c3 = bytes[pos++];\r\n            var c4 = bytes[pos++];\r\n            var u = (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\r\n                0x10000;\r\n            out[c++] = String.fromCharCode(0xd800 + (u >> 10));\r\n            out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\r\n        }\r\n        else {\r\n            var c2 = bytes[pos++];\r\n            var c3 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\r\n        }\r\n    }\r\n    return out.join('');\r\n};\r\n// Static lookup maps, lazily populated by init_()\r\nvar base64 = {\r\n    /**\r\n     * Maps bytes to characters.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    byteToCharMap_: null,\r\n    /**\r\n     * Maps characters to bytes.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    charToByteMap_: null,\r\n    /**\r\n     * Maps bytes to websafe characters.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    byteToCharMapWebSafe_: null,\r\n    /**\r\n     * Maps websafe characters to bytes.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    charToByteMapWebSafe_: null,\r\n    /**\r\n     * Our default alphabet, shared between\r\n     * ENCODED_VALS and ENCODED_VALS_WEBSAFE\r\n     * @type {string}\r\n     */\r\n    ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\r\n    /**\r\n     * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\r\n     * @type {string}\r\n     */\r\n    get ENCODED_VALS() {\r\n        return this.ENCODED_VALS_BASE + '+/=';\r\n    },\r\n    /**\r\n     * Our websafe alphabet.\r\n     * @type {string}\r\n     */\r\n    get ENCODED_VALS_WEBSAFE() {\r\n        return this.ENCODED_VALS_BASE + '-_.';\r\n    },\r\n    /**\r\n     * Whether this browser supports the atob and btoa functions. This extension\r\n     * started at Mozilla but is now implemented by many browsers. We use the\r\n     * ASSUME_* variables to avoid pulling in the full useragent detection library\r\n     * but still allowing the standard per-browser compilations.\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    HAS_NATIVE_SUPPORT: typeof atob === 'function',\r\n    /**\r\n     * Base64-encode an array of bytes.\r\n     *\r\n     * @param {Array<number>|Uint8Array} input An array of bytes (numbers with\r\n     *     value in [0, 255]) to encode.\r\n     * @param {boolean=} opt_webSafe Boolean indicating we should use the\r\n     *     alternative alphabet.\r\n     * @return {string} The base64 encoded string.\r\n     */\r\n    encodeByteArray: function (input, opt_webSafe) {\r\n        if (!Array.isArray(input)) {\r\n            throw Error('encodeByteArray takes an array as a parameter');\r\n        }\r\n        this.init_();\r\n        var byteToCharMap = opt_webSafe\r\n            ? this.byteToCharMapWebSafe_\r\n            : this.byteToCharMap_;\r\n        var output = [];\r\n        for (var i = 0; i < input.length; i += 3) {\r\n            var byte1 = input[i];\r\n            var haveByte2 = i + 1 < input.length;\r\n            var byte2 = haveByte2 ? input[i + 1] : 0;\r\n            var haveByte3 = i + 2 < input.length;\r\n            var byte3 = haveByte3 ? input[i + 2] : 0;\r\n            var outByte1 = byte1 >> 2;\r\n            var outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\r\n            var outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\r\n            var outByte4 = byte3 & 0x3f;\r\n            if (!haveByte3) {\r\n                outByte4 = 64;\r\n                if (!haveByte2) {\r\n                    outByte3 = 64;\r\n                }\r\n            }\r\n            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);\r\n        }\r\n        return output.join('');\r\n    },\r\n    /**\r\n     * Base64-encode a string.\r\n     *\r\n     * @param {string} input A string to encode.\r\n     * @param {boolean=} opt_webSafe If true, we should use the\r\n     *     alternative alphabet.\r\n     * @return {string} The base64 encoded string.\r\n     */\r\n    encodeString: function (input, opt_webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !opt_webSafe) {\r\n            return btoa(input);\r\n        }\r\n        return this.encodeByteArray(stringToByteArray(input), opt_webSafe);\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * @param {string} input to decode.\r\n     * @param {boolean=} opt_webSafe True if we should use the\r\n     *     alternative alphabet.\r\n     * @return {string} string representing the decoded value.\r\n     */\r\n    decodeString: function (input, opt_webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !opt_webSafe) {\r\n            return atob(input);\r\n        }\r\n        return byteArrayToString(this.decodeStringToByteArray(input, opt_webSafe));\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * In base-64 decoding, groups of four characters are converted into three\r\n     * bytes.  If the encoder did not apply padding, the input length may not\r\n     * be a multiple of 4.\r\n     *\r\n     * In this case, the last group will have fewer than 4 characters, and\r\n     * padding will be inferred.  If the group has one or two characters, it decodes\r\n     * to one byte.  If the group has three characters, it decodes to two bytes.\r\n     *\r\n     * @param {string} input Input to decode.\r\n     * @param {boolean=} opt_webSafe True if we should use the web-safe alphabet.\r\n     * @return {!Array<number>} bytes representing the decoded value.\r\n     */\r\n    decodeStringToByteArray: function (input, opt_webSafe) {\r\n        this.init_();\r\n        var charToByteMap = opt_webSafe\r\n            ? this.charToByteMapWebSafe_\r\n            : this.charToByteMap_;\r\n        var output = [];\r\n        for (var i = 0; i < input.length;) {\r\n            var byte1 = charToByteMap[input.charAt(i++)];\r\n            var haveByte2 = i < input.length;\r\n            var byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\r\n            ++i;\r\n            var haveByte3 = i < input.length;\r\n            var byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            var haveByte4 = i < input.length;\r\n            var byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\r\n                throw Error();\r\n            }\r\n            var outByte1 = (byte1 << 2) | (byte2 >> 4);\r\n            output.push(outByte1);\r\n            if (byte3 != 64) {\r\n                var outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\r\n                output.push(outByte2);\r\n                if (byte4 != 64) {\r\n                    var outByte3 = ((byte3 << 6) & 0xc0) | byte4;\r\n                    output.push(outByte3);\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    },\r\n    /**\r\n     * Lazy static initialization function. Called before\r\n     * accessing any of the static map variables.\r\n     * @private\r\n     */\r\n    init_: function () {\r\n        if (!this.byteToCharMap_) {\r\n            this.byteToCharMap_ = {};\r\n            this.charToByteMap_ = {};\r\n            this.byteToCharMapWebSafe_ = {};\r\n            this.charToByteMapWebSafe_ = {};\r\n            // We want quick mappings back and forth, so we precompute two maps.\r\n            for (var i = 0; i < this.ENCODED_VALS.length; i++) {\r\n                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\r\n                this.charToByteMap_[this.byteToCharMap_[i]] = i;\r\n                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\r\n                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\r\n                // Be forgiving when decoding and correctly decode both encodings.\r\n                if (i >= this.ENCODED_VALS_BASE.length) {\r\n                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\r\n                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n/**\r\n * URL-safe base64 encoding\r\n * @param {!string} str\r\n * @return {!string}\r\n */\r\nvar base64Encode = function (str) {\r\n    var utf8Bytes = stringToByteArray(str);\r\n    return base64.encodeByteArray(utf8Bytes, true);\r\n};\r\n/**\r\n * URL-safe base64 decoding\r\n *\r\n * NOTE: DO NOT use the global atob() function - it does NOT support the\r\n * base64Url variant encoding.\r\n *\r\n * @param {string} str To be decoded\r\n * @return {?string} Decoded result, if possible\r\n */\r\nvar base64Decode = function (str) {\r\n    try {\r\n        return base64.decodeString(str, true);\r\n    }\r\n    catch (e) {\r\n        console.error('base64Decode failed: ', e);\r\n    }\r\n    return null;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Do a deep-copy of basic JavaScript Objects or Arrays.\r\n */\r\nfunction deepCopy(value) {\r\n    return deepExtend(undefined, value);\r\n}\r\n/**\r\n * Copy properties from source to target (recursively allows extension\r\n * of Objects and Arrays).  Scalar values in the target are over-written.\r\n * If target is undefined, an object of the appropriate type will be created\r\n * (and returned).\r\n *\r\n * We recursively copy all child properties of plain Objects in the source- so\r\n * that namespace- like dictionaries are merged.\r\n *\r\n * Note that the target can be a function, in which case the properties in\r\n * the source Object are copied onto it as static properties of the Function.\r\n */\r\nfunction deepExtend(target, source) {\r\n    if (!(source instanceof Object)) {\r\n        return source;\r\n    }\r\n    switch (source.constructor) {\r\n        case Date:\r\n            // Treat Dates like scalars; if the target date object had any child\r\n            // properties - they will be lost!\r\n            var dateValue = source;\r\n            return new Date(dateValue.getTime());\r\n        case Object:\r\n            if (target === undefined) {\r\n                target = {};\r\n            }\r\n            break;\r\n        case Array:\r\n            // Always copy the array source and overwrite the target.\r\n            target = [];\r\n            break;\r\n        default:\r\n            // Not a plain Object - treat it as a scalar.\r\n            return source;\r\n    }\r\n    for (var prop in source) {\r\n        if (!source.hasOwnProperty(prop)) {\r\n            continue;\r\n        }\r\n        target[prop] = deepExtend(target[prop], source[prop]);\r\n    }\r\n    return target;\r\n}\r\n// TODO: Really needed (for JSCompiler type checking)?\r\nfunction patchProperty(obj, prop, value) {\r\n    obj[prop] = value;\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Deferred = /** @class */ (function () {\r\n    function Deferred() {\r\n        var _this = this;\r\n        this.promise = new Promise(function (resolve, reject) {\r\n            _this.resolve = resolve;\r\n            _this.reject = reject;\r\n        });\r\n    }\r\n    /**\r\n     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\r\n     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\r\n     * and returns a node-style callback which will resolve or reject the Deferred's promise.\r\n     * @param {((?function(?(Error)): (?|undefined))| (?function(?(Error),?=): (?|undefined)))=} callback\r\n     * @return {!function(?(Error), ?=)}\r\n     */\r\n    Deferred.prototype.wrapCallback = function (callback) {\r\n        var _this = this;\r\n        return function (error, value) {\r\n            if (error) {\r\n                _this.reject(error);\r\n            }\r\n            else {\r\n                _this.resolve(value);\r\n            }\r\n            if (typeof callback === 'function') {\r\n                // Attaching noop handler just in case developer wasn't expecting\r\n                // promises\r\n                _this.promise.catch(function () { });\r\n                // Some of our callbacks don't expect a value and our own tests\r\n                // assert that the parameter length is 1\r\n                if (callback.length === 1) {\r\n                    callback(error);\r\n                }\r\n                else {\r\n                    callback(error, value);\r\n                }\r\n            }\r\n        };\r\n    };\r\n    return Deferred;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns navigator.userAgent string or '' if it's not defined.\r\n * @return {string} user agent string\r\n */\r\nvar getUA = function () {\r\n    if (typeof navigator !== 'undefined' &&\r\n        typeof navigator['userAgent'] === 'string') {\r\n        return navigator['userAgent'];\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n};\r\n/**\r\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\r\n *\r\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap in the Ripple emulator) nor\r\n * Cordova `onDeviceReady`, which would normally wait for a callback.\r\n *\r\n * @return {boolean} isMobileCordova\r\n */\r\nvar isMobileCordova = function () {\r\n    return (typeof window !== 'undefined' &&\r\n        !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\r\n        /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA()));\r\n};\r\n/**\r\n * Detect React Native.\r\n *\r\n * @return {boolean} True if ReactNative environment is detected.\r\n */\r\nvar isReactNative = function () {\r\n    return (typeof navigator === 'object' && navigator['product'] === 'ReactNative');\r\n};\r\n/**\r\n * Detect Node.js.\r\n *\r\n * @return {boolean} True if Node.js environment is detected.\r\n */\r\nvar isNodeSdk = function () {\r\n    return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\r\n};\n\nvar ERROR_NAME = 'FirebaseError';\r\nvar captureStackTrace = Error\r\n    .captureStackTrace;\r\n// Export for faking in tests\r\nfunction patchCapture(captureFake) {\r\n    var result = captureStackTrace;\r\n    captureStackTrace = captureFake;\r\n    return result;\r\n}\r\nvar FirebaseError = /** @class */ (function () {\r\n    function FirebaseError(code, message) {\r\n        this.code = code;\r\n        this.message = message;\r\n        // We want the stack value, if implemented by Error\r\n        if (captureStackTrace) {\r\n            // Patches this.stack, omitted calls above ErrorFactory#create\r\n            captureStackTrace(this, ErrorFactory.prototype.create);\r\n        }\r\n        else {\r\n            try {\r\n                // In case of IE11, stack will be set only after error is raised.\r\n                // https://docs.microsoft.com/en-us/scripting/javascript/reference/stack-property-error-javascript\r\n                throw Error.apply(this, arguments);\r\n            }\r\n            catch (err) {\r\n                this.name = ERROR_NAME;\r\n                // Make non-enumerable getter for the property.\r\n                Object.defineProperty(this, 'stack', {\r\n                    get: function () {\r\n                        return err.stack;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n    return FirebaseError;\r\n}());\r\n// Back-door inheritance\r\nFirebaseError.prototype = Object.create(Error.prototype);\r\nFirebaseError.prototype.constructor = FirebaseError;\r\nFirebaseError.prototype.name = ERROR_NAME;\r\nvar ErrorFactory = /** @class */ (function () {\r\n    function ErrorFactory(service, serviceName, errors) {\r\n        this.service = service;\r\n        this.serviceName = serviceName;\r\n        this.errors = errors;\r\n        // Matches {$name}, by default.\r\n        this.pattern = /\\{\\$([^}]+)}/g;\r\n        // empty\r\n    }\r\n    ErrorFactory.prototype.create = function (code, data) {\r\n        if (data === undefined) {\r\n            data = {};\r\n        }\r\n        var template = this.errors[code];\r\n        var fullCode = this.service + '/' + code;\r\n        var message;\r\n        if (template === undefined) {\r\n            message = 'Error';\r\n        }\r\n        else {\r\n            message = template.replace(this.pattern, function (match, key) {\r\n                var value = data[key];\r\n                return value !== undefined ? value.toString() : '<' + key + '?>';\r\n            });\r\n        }\r\n        // Service: Error message (service/code).\r\n        message = this.serviceName + ': ' + message + ' (' + fullCode + ').';\r\n        var err = new FirebaseError(fullCode, message);\r\n        // Populate the Error object with message parts for programmatic\r\n        // accesses (e.g., e.file).\r\n        for (var prop in data) {\r\n            if (!data.hasOwnProperty(prop) || prop.slice(-1) === '_') {\r\n                continue;\r\n            }\r\n            err[prop] = data[prop];\r\n        }\r\n        return err;\r\n    };\r\n    return ErrorFactory;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Evaluates a JSON string into a javascript object.\r\n *\r\n * @param {string} str A string containing JSON.\r\n * @return {*} The javascript object representing the specified JSON.\r\n */\r\nfunction jsonEval(str) {\r\n    return JSON.parse(str);\r\n}\r\n/**\r\n * Returns JSON representing a javascript object.\r\n * @param {*} data Javascript object to be stringified.\r\n * @return {string} The JSON contents of the object.\r\n */\r\nfunction stringify(data) {\r\n    return JSON.stringify(data);\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Decodes a Firebase auth. token into constituent parts.\r\n *\r\n * Notes:\r\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {{header: *, claims: *, data: *, signature: string}}\r\n */\r\nvar decode = function (token) {\r\n    var header = {}, claims = {}, data = {}, signature = '';\r\n    try {\r\n        var parts = token.split('.');\r\n        header = jsonEval(base64Decode(parts[0]) || '');\r\n        claims = jsonEval(base64Decode(parts[1]) || '');\r\n        signature = parts[2];\r\n        data = claims['d'] || {};\r\n        delete claims['d'];\r\n    }\r\n    catch (e) { }\r\n    return {\r\n        header: header,\r\n        claims: claims,\r\n        data: data,\r\n        signature: signature\r\n    };\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\r\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {boolean}\r\n */\r\nvar isValidTimestamp = function (token) {\r\n    var claims = decode(token).claims, now = Math.floor(new Date().getTime() / 1000), validSince, validUntil;\r\n    if (typeof claims === 'object') {\r\n        if (claims.hasOwnProperty('nbf')) {\r\n            validSince = claims['nbf'];\r\n        }\r\n        else if (claims.hasOwnProperty('iat')) {\r\n            validSince = claims['iat'];\r\n        }\r\n        if (claims.hasOwnProperty('exp')) {\r\n            validUntil = claims['exp'];\r\n        }\r\n        else {\r\n            // token will expire after 24h by default\r\n            validUntil = validSince + 86400;\r\n        }\r\n    }\r\n    return (now && validSince && validUntil && now >= validSince && now <= validUntil);\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\r\n *\r\n * Notes:\r\n * - May return null if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {?number}\r\n */\r\nvar issuedAtTime = function (token) {\r\n    var claims = decode(token).claims;\r\n    if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\r\n        return claims['iat'];\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {boolean}\r\n */\r\nvar isValidFormat = function (token) {\r\n    var decoded = decode(token), claims = decoded.claims;\r\n    return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');\r\n};\r\n/**\r\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {boolean}\r\n */\r\nvar isAdmin = function (token) {\r\n    var claims = decode(token).claims;\r\n    return typeof claims === 'object' && claims['admin'] === true;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// See http://www.devthought.com/2012/01/18/an-object-is-not-a-hash/\r\nvar contains = function (obj, key) {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n};\r\nvar safeGet = function (obj, key) {\r\n    if (Object.prototype.hasOwnProperty.call(obj, key))\r\n        return obj[key];\r\n    // else return undefined.\r\n};\r\n/**\r\n * Enumerates the keys/values in an object, excluding keys defined on the prototype.\r\n *\r\n * @param {?Object.<K,V>} obj Object to enumerate.\r\n * @param {!function(K, V)} fn Function to call for each key and value.\r\n * @template K,V\r\n */\r\nvar forEach = function (obj, fn) {\r\n    for (var key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            fn(key, obj[key]);\r\n        }\r\n    }\r\n};\r\n/**\r\n * Copies all the (own) properties from one object to another.\r\n * @param {!Object} objTo\r\n * @param {!Object} objFrom\r\n * @return {!Object} objTo\r\n */\r\nvar extend = function (objTo, objFrom) {\r\n    forEach(objFrom, function (key, value) {\r\n        objTo[key] = value;\r\n    });\r\n    return objTo;\r\n};\r\n/**\r\n * Returns a clone of the specified object.\r\n * @param {!Object} obj\r\n * @return {!Object} cloned obj.\r\n */\r\nvar clone = function (obj) {\r\n    return extend({}, obj);\r\n};\r\n/**\r\n * Returns true if obj has typeof \"object\" and is not null.  Unlike goog.isObject(), does not return true\r\n * for functions.\r\n *\r\n * @param obj {*} A potential object.\r\n * @returns {boolean} True if it's an object.\r\n */\r\nvar isNonNullObject = function (obj) {\r\n    return typeof obj === 'object' && obj !== null;\r\n};\r\nvar isEmpty = function (obj) {\r\n    for (var key in obj) {\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\nvar getCount = function (obj) {\r\n    var rv = 0;\r\n    for (var key in obj) {\r\n        rv++;\r\n    }\r\n    return rv;\r\n};\r\nvar map = function (obj, f, opt_obj) {\r\n    var res = {};\r\n    for (var key in obj) {\r\n        res[key] = f.call(opt_obj, obj[key], key, obj);\r\n    }\r\n    return res;\r\n};\r\nvar findKey = function (obj, fn, opt_this) {\r\n    for (var key in obj) {\r\n        if (fn.call(opt_this, obj[key], key, obj)) {\r\n            return key;\r\n        }\r\n    }\r\n    return undefined;\r\n};\r\nvar findValue = function (obj, fn, opt_this) {\r\n    var key = findKey(obj, fn, opt_this);\r\n    return key && obj[key];\r\n};\r\nvar getAnyKey = function (obj) {\r\n    for (var key in obj) {\r\n        return key;\r\n    }\r\n};\r\nvar getValues = function (obj) {\r\n    var res = [];\r\n    var i = 0;\r\n    for (var key in obj) {\r\n        res[i++] = obj[key];\r\n    }\r\n    return res;\r\n};\r\n/**\r\n * Tests whether every key/value pair in an object pass the test implemented\r\n * by the provided function\r\n *\r\n * @param {?Object.<K,V>} obj Object to test.\r\n * @param {!function(K, V)} fn Function to call for each key and value.\r\n * @template K,V\r\n */\r\nvar every = function (obj, fn) {\r\n    for (var key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            if (!fn(key, obj[key])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a params\r\n * object (e.g. {arg: 'val', arg2: 'val2'})\r\n * Note: You must prepend it with ? when adding it to a URL.\r\n *\r\n * @param {!Object} querystringParams\r\n * @return {string}\r\n */\r\nvar querystring = function (querystringParams) {\r\n    var params = [];\r\n    forEach(querystringParams, function (key, value) {\r\n        if (Array.isArray(value)) {\r\n            value.forEach(function (arrayVal) {\r\n                params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));\r\n            });\r\n        }\r\n        else {\r\n            params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\r\n        }\r\n    });\r\n    return params.length ? '&' + params.join('&') : '';\r\n};\r\n/**\r\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object (e.g. {arg: 'val', arg2: 'val2'})\r\n *\r\n * @param {string} querystring\r\n * @return {!Object}\r\n */\r\nvar querystringDecode = function (querystring) {\r\n    var obj = {};\r\n    var tokens = querystring.replace(/^\\?/, '').split('&');\r\n    tokens.forEach(function (token) {\r\n        if (token) {\r\n            var key = token.split('=');\r\n            obj[key[0]] = key[1];\r\n        }\r\n    });\r\n    return obj;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Copyright 2011 The Closure Library Authors. All Rights Reserved.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//      http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n/**\r\n * @fileoverview Abstract cryptographic hash interface.\r\n *\r\n * See Sha1 and Md5 for sample implementations.\r\n *\r\n */\r\n/**\r\n * Create a cryptographic hash instance.\r\n *\r\n * @constructor\r\n * @struct\r\n */\r\nvar Hash = /** @class */ (function () {\r\n    function Hash() {\r\n        /**\r\n         * The block size for the hasher.\r\n         * @type {number}\r\n         */\r\n        this.blockSize = -1;\r\n    }\r\n    return Hash;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview SHA-1 cryptographic hash.\r\n * Variable names follow the notation in FIPS PUB 180-3:\r\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\r\n *\r\n * Usage:\r\n *   var sha1 = new sha1();\r\n *   sha1.update(bytes);\r\n *   var hash = sha1.digest();\r\n *\r\n * Performance:\r\n *   Chrome 23:   ~400 Mbit/s\r\n *   Firefox 16:  ~250 Mbit/s\r\n *\r\n */\r\n/**\r\n * SHA-1 cryptographic hash constructor.\r\n *\r\n * The properties declared here are discussed in the above algorithm document.\r\n * @constructor\r\n * @extends {Hash}\r\n * @final\r\n * @struct\r\n */\r\nvar Sha1 = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Sha1, _super);\r\n    function Sha1() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * Holds the previous values of accumulated variables a-e in the compress_\r\n         * function.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.chain_ = [];\r\n        /**\r\n         * A buffer holding the partially computed hash result.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.buf_ = [];\r\n        /**\r\n         * An array of 80 bytes, each a part of the message to be hashed.  Referred to\r\n         * as the message schedule in the docs.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.W_ = [];\r\n        /**\r\n         * Contains data needed to pad messages less than 64 bytes.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.pad_ = [];\r\n        /**\r\n         * @private {number}\r\n         */\r\n        _this.inbuf_ = 0;\r\n        /**\r\n         * @private {number}\r\n         */\r\n        _this.total_ = 0;\r\n        _this.blockSize = 512 / 8;\r\n        _this.pad_[0] = 128;\r\n        for (var i = 1; i < _this.blockSize; ++i) {\r\n            _this.pad_[i] = 0;\r\n        }\r\n        _this.reset();\r\n        return _this;\r\n    }\r\n    Sha1.prototype.reset = function () {\r\n        this.chain_[0] = 0x67452301;\r\n        this.chain_[1] = 0xefcdab89;\r\n        this.chain_[2] = 0x98badcfe;\r\n        this.chain_[3] = 0x10325476;\r\n        this.chain_[4] = 0xc3d2e1f0;\r\n        this.inbuf_ = 0;\r\n        this.total_ = 0;\r\n    };\r\n    /**\r\n     * Internal compress helper function.\r\n     * @param {!Array<number>|!Uint8Array|string} buf Block to compress.\r\n     * @param {number=} opt_offset Offset of the block in the buffer.\r\n     * @private\r\n     */\r\n    Sha1.prototype.compress_ = function (buf, opt_offset) {\r\n        if (!opt_offset) {\r\n            opt_offset = 0;\r\n        }\r\n        var W = this.W_;\r\n        // get 16 big endian words\r\n        if (typeof buf === 'string') {\r\n            for (var i = 0; i < 16; i++) {\r\n                // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\r\n                // have a bug that turns the post-increment ++ operator into pre-increment\r\n                // during JIT compilation.  We have code that depends heavily on SHA-1 for\r\n                // correctness and which is affected by this bug, so I've removed all uses\r\n                // of post-increment ++ in which the result value is used.  We can revert\r\n                // this change once the Safari bug\r\n                // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\r\n                // most clients have been updated.\r\n                W[i] =\r\n                    (buf.charCodeAt(opt_offset) << 24) |\r\n                        (buf.charCodeAt(opt_offset + 1) << 16) |\r\n                        (buf.charCodeAt(opt_offset + 2) << 8) |\r\n                        buf.charCodeAt(opt_offset + 3);\r\n                opt_offset += 4;\r\n            }\r\n        }\r\n        else {\r\n            for (var i = 0; i < 16; i++) {\r\n                W[i] =\r\n                    (buf[opt_offset] << 24) |\r\n                        (buf[opt_offset + 1] << 16) |\r\n                        (buf[opt_offset + 2] << 8) |\r\n                        buf[opt_offset + 3];\r\n                opt_offset += 4;\r\n            }\r\n        }\r\n        // expand to 80 words\r\n        for (var i = 16; i < 80; i++) {\r\n            var t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\r\n            W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\r\n        }\r\n        var a = this.chain_[0];\r\n        var b = this.chain_[1];\r\n        var c = this.chain_[2];\r\n        var d = this.chain_[3];\r\n        var e = this.chain_[4];\r\n        var f, k;\r\n        // TODO(user): Try to unroll this loop to speed up the computation.\r\n        for (var i = 0; i < 80; i++) {\r\n            if (i < 40) {\r\n                if (i < 20) {\r\n                    f = d ^ (b & (c ^ d));\r\n                    k = 0x5a827999;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0x6ed9eba1;\r\n                }\r\n            }\r\n            else {\r\n                if (i < 60) {\r\n                    f = (b & c) | (d & (b | c));\r\n                    k = 0x8f1bbcdc;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0xca62c1d6;\r\n                }\r\n            }\r\n            var t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\r\n            e = d;\r\n            d = c;\r\n            c = ((b << 30) | (b >>> 2)) & 0xffffffff;\r\n            b = a;\r\n            a = t;\r\n        }\r\n        this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\r\n        this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\r\n        this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\r\n        this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\r\n        this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\r\n    };\r\n    Sha1.prototype.update = function (bytes, opt_length) {\r\n        // TODO(johnlenz): tighten the function signature and remove this check\r\n        if (bytes == null) {\r\n            return;\r\n        }\r\n        if (opt_length === undefined) {\r\n            opt_length = bytes.length;\r\n        }\r\n        var lengthMinusBlock = opt_length - this.blockSize;\r\n        var n = 0;\r\n        // Using local instead of member variables gives ~5% speedup on Firefox 16.\r\n        var buf = this.buf_;\r\n        var inbuf = this.inbuf_;\r\n        // The outer while loop should execute at most twice.\r\n        while (n < opt_length) {\r\n            // When we have no data in the block to top up, we can directly process the\r\n            // input buffer (assuming it contains sufficient data). This gives ~25%\r\n            // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\r\n            // the data is provided in large chunks (or in multiples of 64 bytes).\r\n            if (inbuf == 0) {\r\n                while (n <= lengthMinusBlock) {\r\n                    this.compress_(bytes, n);\r\n                    n += this.blockSize;\r\n                }\r\n            }\r\n            if (typeof bytes === 'string') {\r\n                while (n < opt_length) {\r\n                    buf[inbuf] = bytes.charCodeAt(n);\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf == this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                while (n < opt_length) {\r\n                    buf[inbuf] = bytes[n];\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf == this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.inbuf_ = inbuf;\r\n        this.total_ += opt_length;\r\n    };\r\n    /** @override */\r\n    Sha1.prototype.digest = function () {\r\n        var digest = [];\r\n        var totalBits = this.total_ * 8;\r\n        // Add pad 0x80 0x00*.\r\n        if (this.inbuf_ < 56) {\r\n            this.update(this.pad_, 56 - this.inbuf_);\r\n        }\r\n        else {\r\n            this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\r\n        }\r\n        // Add # bits.\r\n        for (var i = this.blockSize - 1; i >= 56; i--) {\r\n            this.buf_[i] = totalBits & 255;\r\n            totalBits /= 256; // Don't use bit-shifting here!\r\n        }\r\n        this.compress_(this.buf_);\r\n        var n = 0;\r\n        for (var i = 0; i < 5; i++) {\r\n            for (var j = 24; j >= 0; j -= 8) {\r\n                digest[n] = (this.chain_[i] >> j) & 255;\r\n                ++n;\r\n            }\r\n        }\r\n        return digest;\r\n    };\r\n    return Sha1;\r\n}(Hash));\n\n/**\r\n * Helper to make a Subscribe function (just like Promise helps make a\r\n * Thenable).\r\n *\r\n * @param executor Function which can make calls to a single Observer\r\n *     as a proxy.\r\n * @param onNoObservers Callback when count of Observers goes to zero.\r\n */\r\nfunction createSubscribe(executor, onNoObservers) {\r\n    var proxy = new ObserverProxy(executor, onNoObservers);\r\n    return proxy.subscribe.bind(proxy);\r\n}\r\n/**\r\n * Implement fan-out for any number of Observers attached via a subscribe\r\n * function.\r\n */\r\nvar ObserverProxy = /** @class */ (function () {\r\n    /**\r\n     * @param executor Function which can make calls to a single Observer\r\n     *     as a proxy.\r\n     * @param onNoObservers Callback when count of Observers goes to zero.\r\n     */\r\n    function ObserverProxy(executor, onNoObservers) {\r\n        var _this = this;\r\n        this.observers = [];\r\n        this.unsubscribes = [];\r\n        this.observerCount = 0;\r\n        // Micro-task scheduling by calling task.then().\r\n        this.task = Promise.resolve();\r\n        this.finalized = false;\r\n        this.onNoObservers = onNoObservers;\r\n        // Call the executor asynchronously so subscribers that are called\r\n        // synchronously after the creation of the subscribe function\r\n        // can still receive the very first value generated in the executor.\r\n        this.task\r\n            .then(function () {\r\n            executor(_this);\r\n        })\r\n            .catch(function (e) {\r\n            _this.error(e);\r\n        });\r\n    }\r\n    ObserverProxy.prototype.next = function (value) {\r\n        this.forEachObserver(function (observer) {\r\n            observer.next(value);\r\n        });\r\n    };\r\n    ObserverProxy.prototype.error = function (error) {\r\n        this.forEachObserver(function (observer) {\r\n            observer.error(error);\r\n        });\r\n        this.close(error);\r\n    };\r\n    ObserverProxy.prototype.complete = function () {\r\n        this.forEachObserver(function (observer) {\r\n            observer.complete();\r\n        });\r\n        this.close();\r\n    };\r\n    /**\r\n     * Subscribe function that can be used to add an Observer to the fan-out list.\r\n     *\r\n     * - We require that no event is sent to a subscriber sychronously to their\r\n     *   call to subscribe().\r\n     */\r\n    ObserverProxy.prototype.subscribe = function (nextOrObserver, error, complete) {\r\n        var _this = this;\r\n        var observer;\r\n        if (nextOrObserver === undefined &&\r\n            error === undefined &&\r\n            complete === undefined) {\r\n            throw new Error('Missing Observer.');\r\n        }\r\n        // Assemble an Observer object when passed as callback functions.\r\n        if (implementsAnyMethods(nextOrObserver, ['next', 'error', 'complete'])) {\r\n            observer = nextOrObserver;\r\n        }\r\n        else {\r\n            observer = {\r\n                next: nextOrObserver,\r\n                error: error,\r\n                complete: complete\r\n            };\r\n        }\r\n        if (observer.next === undefined) {\r\n            observer.next = noop;\r\n        }\r\n        if (observer.error === undefined) {\r\n            observer.error = noop;\r\n        }\r\n        if (observer.complete === undefined) {\r\n            observer.complete = noop;\r\n        }\r\n        var unsub = this.unsubscribeOne.bind(this, this.observers.length);\r\n        // Attempt to subscribe to a terminated Observable - we\r\n        // just respond to the Observer with the final error or complete\r\n        // event.\r\n        if (this.finalized) {\r\n            this.task.then(function () {\r\n                try {\r\n                    if (_this.finalError) {\r\n                        observer.error(_this.finalError);\r\n                    }\r\n                    else {\r\n                        observer.complete();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // nothing\r\n                }\r\n                return;\r\n            });\r\n        }\r\n        this.observers.push(observer);\r\n        return unsub;\r\n    };\r\n    // Unsubscribe is synchronous - we guarantee that no events are sent to\r\n    // any unsubscribed Observer.\r\n    ObserverProxy.prototype.unsubscribeOne = function (i) {\r\n        if (this.observers === undefined || this.observers[i] === undefined) {\r\n            return;\r\n        }\r\n        delete this.observers[i];\r\n        this.observerCount -= 1;\r\n        if (this.observerCount === 0 && this.onNoObservers !== undefined) {\r\n            this.onNoObservers(this);\r\n        }\r\n    };\r\n    ObserverProxy.prototype.forEachObserver = function (fn) {\r\n        if (this.finalized) {\r\n            // Already closed by previous event....just eat the additional values.\r\n            return;\r\n        }\r\n        // Since sendOne calls asynchronously - there is no chance that\r\n        // this.observers will become undefined.\r\n        for (var i = 0; i < this.observers.length; i++) {\r\n            this.sendOne(i, fn);\r\n        }\r\n    };\r\n    // Call the Observer via one of it's callback function. We are careful to\r\n    // confirm that the observe has not been unsubscribed since this asynchronous\r\n    // function had been queued.\r\n    ObserverProxy.prototype.sendOne = function (i, fn) {\r\n        var _this = this;\r\n        // Execute the callback asynchronously\r\n        this.task.then(function () {\r\n            if (_this.observers !== undefined && _this.observers[i] !== undefined) {\r\n                try {\r\n                    fn(_this.observers[i]);\r\n                }\r\n                catch (e) {\r\n                    // Ignore exceptions raised in Observers or missing methods of an\r\n                    // Observer.\r\n                    // Log error to console. b/31404806\r\n                    if (typeof console !== 'undefined' && console.error) {\r\n                        console.error(e);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n    ObserverProxy.prototype.close = function (err) {\r\n        var _this = this;\r\n        if (this.finalized) {\r\n            return;\r\n        }\r\n        this.finalized = true;\r\n        if (err !== undefined) {\r\n            this.finalError = err;\r\n        }\r\n        // Proxy is no longer needed - garbage collect references\r\n        this.task.then(function () {\r\n            _this.observers = undefined;\r\n            _this.onNoObservers = undefined;\r\n        });\r\n    };\r\n    return ObserverProxy;\r\n}());\r\n/** Turn synchronous function into one called asynchronously. */\r\nfunction async(fn, onError) {\r\n    return function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        Promise.resolve(true)\r\n            .then(function () {\r\n            fn.apply(void 0, args);\r\n        })\r\n            .catch(function (error) {\r\n            if (onError) {\r\n                onError(error);\r\n            }\r\n        });\r\n    };\r\n}\r\n/**\r\n * Return true if the object passed in implements any of the named methods.\r\n */\r\nfunction implementsAnyMethods(obj, methods) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return false;\r\n    }\r\n    for (var _i = 0, methods_1 = methods; _i < methods_1.length; _i++) {\r\n        var method = methods_1[_i];\r\n        if (method in obj && typeof obj[method] === 'function') {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction noop() {\r\n    // do nothing\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Check to make sure the appropriate number of arguments are provided for a public function.\r\n * Throws an error if it fails.\r\n *\r\n * @param {!string} fnName The function name\r\n * @param {!number} minCount The minimum number of arguments to allow for the function call\r\n * @param {!number} maxCount The maximum number of argument to allow for the function call\r\n * @param {!number} argCount The actual number of arguments provided.\r\n */\r\nvar validateArgCount = function (fnName, minCount, maxCount, argCount) {\r\n    var argError;\r\n    if (argCount < minCount) {\r\n        argError = 'at least ' + minCount;\r\n    }\r\n    else if (argCount > maxCount) {\r\n        argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\r\n    }\r\n    if (argError) {\r\n        var error = fnName +\r\n            ' failed: Was called with ' +\r\n            argCount +\r\n            (argCount === 1 ? ' argument.' : ' arguments.') +\r\n            ' Expects ' +\r\n            argError +\r\n            '.';\r\n        throw new Error(error);\r\n    }\r\n};\r\n/**\r\n * Generates a string to prefix an error message about failed argument validation\r\n *\r\n * @param {!string} fnName The function name\r\n * @param {!number} argumentNumber The index of the argument\r\n * @param {boolean} optional Whether or not the argument is optional\r\n * @return {!string} The prefix to add to the error thrown for validation.\r\n */\r\nfunction errorPrefix(fnName, argumentNumber, optional) {\r\n    var argName = '';\r\n    switch (argumentNumber) {\r\n        case 1:\r\n            argName = optional ? 'first' : 'First';\r\n            break;\r\n        case 2:\r\n            argName = optional ? 'second' : 'Second';\r\n            break;\r\n        case 3:\r\n            argName = optional ? 'third' : 'Third';\r\n            break;\r\n        case 4:\r\n            argName = optional ? 'fourth' : 'Fourth';\r\n            break;\r\n        default:\r\n            throw new Error('errorPrefix called with argumentNumber > 4.  Need to update it?');\r\n    }\r\n    var error = fnName + ' failed: ';\r\n    error += argName + ' argument ';\r\n    return error;\r\n}\r\n/**\r\n * @param {!string} fnName\r\n * @param {!number} argumentNumber\r\n * @param {!string} namespace\r\n * @param {boolean} optional\r\n */\r\nfunction validateNamespace(fnName, argumentNumber, namespace, optional) {\r\n    if (optional && !namespace)\r\n        return;\r\n    if (typeof namespace !== 'string') {\r\n        //TODO: I should do more validation here. We only allow certain chars in namespaces.\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid firebase namespace.');\r\n    }\r\n}\r\nfunction validateCallback(fnName, argumentNumber, callback, optional) {\r\n    if (optional && !callback)\r\n        return;\r\n    if (typeof callback !== 'function')\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid function.');\r\n}\r\nfunction validateContextObject(fnName, argumentNumber, context, optional) {\r\n    if (optional && !context)\r\n        return;\r\n    if (typeof context !== 'object' || context === null)\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid context object.');\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\r\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\r\n// so it's been modified.\r\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\r\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\r\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\r\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\r\n// pair).\r\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\r\n/**\r\n * @param {string} str\r\n * @return {Array}\r\n */\r\nvar stringToByteArray$1 = function (str) {\r\n    var out = [], p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        // Is this the lead surrogate in a surrogate pair?\r\n        if (c >= 0xd800 && c <= 0xdbff) {\r\n            var high = c - 0xd800; // the high 10 bits.\r\n            i++;\r\n            assert(i < str.length, 'Surrogate pair missing trail surrogate.');\r\n            var low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\r\n            c = 0x10000 + (high << 10) + low;\r\n        }\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if (c < 65536) {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Calculate length without actually converting; useful for doing cheaper validation.\r\n * @param {string} str\r\n * @return {number}\r\n */\r\nvar stringLength = function (str) {\r\n    var p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            p++;\r\n        }\r\n        else if (c < 2048) {\r\n            p += 2;\r\n        }\r\n        else if (c >= 0xd800 && c <= 0xdbff) {\r\n            // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\r\n            p += 4;\r\n            i++; // skip trail surrogate.\r\n        }\r\n        else {\r\n            p += 3;\r\n        }\r\n    }\r\n    return p;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nexports.assert = assert;\nexports.assertionError = assertionError;\nexports.base64 = base64;\nexports.base64Decode = base64Decode;\nexports.base64Encode = base64Encode;\nexports.CONSTANTS = CONSTANTS;\nexports.deepCopy = deepCopy;\nexports.deepExtend = deepExtend;\nexports.patchProperty = patchProperty;\nexports.Deferred = Deferred;\nexports.getUA = getUA;\nexports.isMobileCordova = isMobileCordova;\nexports.isNodeSdk = isNodeSdk;\nexports.isReactNative = isReactNative;\nexports.ErrorFactory = ErrorFactory;\nexports.FirebaseError = FirebaseError;\nexports.patchCapture = patchCapture;\nexports.jsonEval = jsonEval;\nexports.stringify = stringify;\nexports.decode = decode;\nexports.isAdmin = isAdmin;\nexports.issuedAtTime = issuedAtTime;\nexports.isValidFormat = isValidFormat;\nexports.isValidTimestamp = isValidTimestamp;\nexports.clone = clone;\nexports.contains = contains;\nexports.every = every;\nexports.extend = extend;\nexports.findKey = findKey;\nexports.findValue = findValue;\nexports.forEach = forEach;\nexports.getAnyKey = getAnyKey;\nexports.getCount = getCount;\nexports.getValues = getValues;\nexports.isEmpty = isEmpty;\nexports.isNonNullObject = isNonNullObject;\nexports.map = map;\nexports.safeGet = safeGet;\nexports.querystring = querystring;\nexports.querystringDecode = querystringDecode;\nexports.Sha1 = Sha1;\nexports.async = async;\nexports.createSubscribe = createSubscribe;\nexports.errorPrefix = errorPrefix;\nexports.validateArgCount = validateArgCount;\nexports.validateCallback = validateCallback;\nexports.validateContextObject = validateContextObject;\nexports.validateNamespace = validateNamespace;\nexports.stringLength = stringLength;\nexports.stringToByteArray = stringToByteArray$1;\n","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n","var redefine = require('./_redefine');\nmodule.exports = function (target, src, safe) {\n  for (var key in src) redefine(target, key, src[key], safe);\n  return target;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n","// 7.3.20 SpeciesConstructor(O, defaultConstructor)\nvar anObject = require('./_an-object');\nvar aFunction = require('./_a-function');\nvar SPECIES = require('./_wks')('species');\nmodule.exports = function (O, D) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n","module.exports = function (it, Constructor, name, forbiddenField) {\n  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {\n    throw TypeError(name + ': incorrect invocation!');\n  } return it;\n};\n","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n"],"sourceRoot":""}